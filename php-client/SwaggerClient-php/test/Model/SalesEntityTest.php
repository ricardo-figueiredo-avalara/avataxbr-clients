<?php
/**
 * SalesEntityTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AvaTax Brazil
 *
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * SalesEntityTest Class Doc Comment
 *
 * @category    Class */
// * @description SalesEntity
/**
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SalesEntityTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test "SalesEntity"
     */
    public function testSalesEntity()
    {

    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {

    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {

    }

    /**
     * Test attribute "email"
     */
    public function testPropertyEmail()
    {

    }

    /**
     * Test attribute "cnpjcpf"
     */
    public function testPropertyCnpjcpf()
    {

    }

    /**
     * Test attribute "city_tax_id"
     */
    public function testPropertyCityTaxId()
    {

    }

    /**
     * Test attribute "state_tax_id"
     */
    public function testPropertyStateTaxId()
    {

    }

    /**
     * Test attribute "suframa"
     */
    public function testPropertySuframa()
    {

    }

    /**
     * Test attribute "phone"
     */
    public function testPropertyPhone()
    {

    }

    /**
     * Test attribute "tax_regime"
     */
    public function testPropertyTaxRegime()
    {

    }

    /**
     * Test attribute "special_tax_regime"
     */
    public function testPropertySpecialTaxRegime()
    {

    }

    /**
     * Test attribute "subject_to_srf1234"
     */
    public function testPropertySubjectToSrf1234()
    {

    }

    /**
     * Test attribute "required_withholding_iss"
     */
    public function testPropertyRequiredWithholdingIss()
    {

    }

    /**
     * Test attribute "art"
     */
    public function testPropertyArt()
    {

    }

    /**
     * Test attribute "admin_process"
     */
    public function testPropertyAdminProcess()
    {

    }

    /**
     * Test attribute "build_code"
     */
    public function testPropertyBuildCode()
    {

    }

}
