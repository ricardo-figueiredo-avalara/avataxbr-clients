<?php
/**
 * LineForGoodsCalculatedTaxTaxByType
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BR16 - API
 *
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * LineForGoodsCalculatedTaxTaxByType Class Doc Comment
 *
 * @category    Class */
/**
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class LineForGoodsCalculatedTaxTaxByType implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'LineForGoods_calculatedTax_taxByType';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'icms' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_st' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_st_sd' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_part_own' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_part_dest' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_difa_fcp' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_difa_dest' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_difa_remet' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_rf' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_deson' => '\Swagger\Client\Model\TaxByTypeTax',
        'icms_credsn' => '\Swagger\Client\Model\TaxByTypeTax',
        'pis' => '\Swagger\Client\Model\TaxByTypeTax',
        'pis_st' => '\Swagger\Client\Model\TaxByTypeTax',
        'cofins' => '\Swagger\Client\Model\TaxByTypeTax',
        'cofins_st' => '\Swagger\Client\Model\TaxByTypeTax',
        'ipi' => '\Swagger\Client\Model\TaxByTypeTax',
        'ipi_returned' => '\Swagger\Client\Model\TaxByTypeTax',
        'ii' => '\Swagger\Client\Model\TaxByTypeTax',
        'iof' => '\Swagger\Client\Model\TaxByTypeTax',
        'aproxtrib_state' => '\Swagger\Client\Model\TaxByTypeTax',
        'aproxtrib_fed' => '\Swagger\Client\Model\TaxByTypeTax'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'icms' => 'icms',
        'icms_st' => 'icmsSt',
        'icms_st_sd' => 'icmsStSd',
        'icms_part_own' => 'icmsPartOwn',
        'icms_part_dest' => 'icmsPartDest',
        'icms_difa_fcp' => 'icmsDifaFCP',
        'icms_difa_dest' => 'icmsDifaDest',
        'icms_difa_remet' => 'icmsDifaRemet',
        'icms_rf' => 'icmsRf',
        'icms_deson' => 'icmsDeson',
        'icms_credsn' => 'icmsCredsn',
        'pis' => 'pis',
        'pis_st' => 'pisSt',
        'cofins' => 'cofins',
        'cofins_st' => 'cofinsSt',
        'ipi' => 'ipi',
        'ipi_returned' => 'ipiReturned',
        'ii' => 'ii',
        'iof' => 'iof',
        'aproxtrib_state' => 'aproxtribState',
        'aproxtrib_fed' => 'aproxtribFed'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'icms' => 'setIcms',
        'icms_st' => 'setIcmsSt',
        'icms_st_sd' => 'setIcmsStSd',
        'icms_part_own' => 'setIcmsPartOwn',
        'icms_part_dest' => 'setIcmsPartDest',
        'icms_difa_fcp' => 'setIcmsDifaFcp',
        'icms_difa_dest' => 'setIcmsDifaDest',
        'icms_difa_remet' => 'setIcmsDifaRemet',
        'icms_rf' => 'setIcmsRf',
        'icms_deson' => 'setIcmsDeson',
        'icms_credsn' => 'setIcmsCredsn',
        'pis' => 'setPis',
        'pis_st' => 'setPisSt',
        'cofins' => 'setCofins',
        'cofins_st' => 'setCofinsSt',
        'ipi' => 'setIpi',
        'ipi_returned' => 'setIpiReturned',
        'ii' => 'setIi',
        'iof' => 'setIof',
        'aproxtrib_state' => 'setAproxtribState',
        'aproxtrib_fed' => 'setAproxtribFed'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'icms' => 'getIcms',
        'icms_st' => 'getIcmsSt',
        'icms_st_sd' => 'getIcmsStSd',
        'icms_part_own' => 'getIcmsPartOwn',
        'icms_part_dest' => 'getIcmsPartDest',
        'icms_difa_fcp' => 'getIcmsDifaFcp',
        'icms_difa_dest' => 'getIcmsDifaDest',
        'icms_difa_remet' => 'getIcmsDifaRemet',
        'icms_rf' => 'getIcmsRf',
        'icms_deson' => 'getIcmsDeson',
        'icms_credsn' => 'getIcmsCredsn',
        'pis' => 'getPis',
        'pis_st' => 'getPisSt',
        'cofins' => 'getCofins',
        'cofins_st' => 'getCofinsSt',
        'ipi' => 'getIpi',
        'ipi_returned' => 'getIpiReturned',
        'ii' => 'getIi',
        'iof' => 'getIof',
        'aproxtrib_state' => 'getAproxtribState',
        'aproxtrib_fed' => 'getAproxtribFed'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['icms'] = isset($data['icms']) ? $data['icms'] : null;
        $this->container['icms_st'] = isset($data['icms_st']) ? $data['icms_st'] : null;
        $this->container['icms_st_sd'] = isset($data['icms_st_sd']) ? $data['icms_st_sd'] : null;
        $this->container['icms_part_own'] = isset($data['icms_part_own']) ? $data['icms_part_own'] : null;
        $this->container['icms_part_dest'] = isset($data['icms_part_dest']) ? $data['icms_part_dest'] : null;
        $this->container['icms_difa_fcp'] = isset($data['icms_difa_fcp']) ? $data['icms_difa_fcp'] : null;
        $this->container['icms_difa_dest'] = isset($data['icms_difa_dest']) ? $data['icms_difa_dest'] : null;
        $this->container['icms_difa_remet'] = isset($data['icms_difa_remet']) ? $data['icms_difa_remet'] : null;
        $this->container['icms_rf'] = isset($data['icms_rf']) ? $data['icms_rf'] : null;
        $this->container['icms_deson'] = isset($data['icms_deson']) ? $data['icms_deson'] : null;
        $this->container['icms_credsn'] = isset($data['icms_credsn']) ? $data['icms_credsn'] : null;
        $this->container['pis'] = isset($data['pis']) ? $data['pis'] : null;
        $this->container['pis_st'] = isset($data['pis_st']) ? $data['pis_st'] : null;
        $this->container['cofins'] = isset($data['cofins']) ? $data['cofins'] : null;
        $this->container['cofins_st'] = isset($data['cofins_st']) ? $data['cofins_st'] : null;
        $this->container['ipi'] = isset($data['ipi']) ? $data['ipi'] : null;
        $this->container['ipi_returned'] = isset($data['ipi_returned']) ? $data['ipi_returned'] : null;
        $this->container['ii'] = isset($data['ii']) ? $data['ii'] : null;
        $this->container['iof'] = isset($data['iof']) ? $data['iof'] : null;
        $this->container['aproxtrib_state'] = isset($data['aproxtrib_state']) ? $data['aproxtrib_state'] : null;
        $this->container['aproxtrib_fed'] = isset($data['aproxtrib_fed']) ? $data['aproxtrib_fed'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets icms
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcms()
    {
        return $this->container['icms'];
    }

    /**
     * Sets icms
     * @param \Swagger\Client\Model\TaxByTypeTax $icms
     * @return $this
     */
    public function setIcms($icms)
    {
        $this->container['icms'] = $icms;

        return $this;
    }

    /**
     * Gets icms_st
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsSt()
    {
        return $this->container['icms_st'];
    }

    /**
     * Sets icms_st
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_st
     * @return $this
     */
    public function setIcmsSt($icms_st)
    {
        $this->container['icms_st'] = $icms_st;

        return $this;
    }

    /**
     * Gets icms_st_sd
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsStSd()
    {
        return $this->container['icms_st_sd'];
    }

    /**
     * Sets icms_st_sd
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_st_sd
     * @return $this
     */
    public function setIcmsStSd($icms_st_sd)
    {
        $this->container['icms_st_sd'] = $icms_st_sd;

        return $this;
    }

    /**
     * Gets icms_part_own
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsPartOwn()
    {
        return $this->container['icms_part_own'];
    }

    /**
     * Sets icms_part_own
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_part_own
     * @return $this
     */
    public function setIcmsPartOwn($icms_part_own)
    {
        $this->container['icms_part_own'] = $icms_part_own;

        return $this;
    }

    /**
     * Gets icms_part_dest
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsPartDest()
    {
        return $this->container['icms_part_dest'];
    }

    /**
     * Sets icms_part_dest
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_part_dest
     * @return $this
     */
    public function setIcmsPartDest($icms_part_dest)
    {
        $this->container['icms_part_dest'] = $icms_part_dest;

        return $this;
    }

    /**
     * Gets icms_difa_fcp
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsDifaFcp()
    {
        return $this->container['icms_difa_fcp'];
    }

    /**
     * Sets icms_difa_fcp
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_difa_fcp
     * @return $this
     */
    public function setIcmsDifaFcp($icms_difa_fcp)
    {
        $this->container['icms_difa_fcp'] = $icms_difa_fcp;

        return $this;
    }

    /**
     * Gets icms_difa_dest
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsDifaDest()
    {
        return $this->container['icms_difa_dest'];
    }

    /**
     * Sets icms_difa_dest
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_difa_dest
     * @return $this
     */
    public function setIcmsDifaDest($icms_difa_dest)
    {
        $this->container['icms_difa_dest'] = $icms_difa_dest;

        return $this;
    }

    /**
     * Gets icms_difa_remet
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsDifaRemet()
    {
        return $this->container['icms_difa_remet'];
    }

    /**
     * Sets icms_difa_remet
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_difa_remet
     * @return $this
     */
    public function setIcmsDifaRemet($icms_difa_remet)
    {
        $this->container['icms_difa_remet'] = $icms_difa_remet;

        return $this;
    }

    /**
     * Gets icms_rf
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsRf()
    {
        return $this->container['icms_rf'];
    }

    /**
     * Sets icms_rf
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_rf
     * @return $this
     */
    public function setIcmsRf($icms_rf)
    {
        $this->container['icms_rf'] = $icms_rf;

        return $this;
    }

    /**
     * Gets icms_deson
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsDeson()
    {
        return $this->container['icms_deson'];
    }

    /**
     * Sets icms_deson
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_deson
     * @return $this
     */
    public function setIcmsDeson($icms_deson)
    {
        $this->container['icms_deson'] = $icms_deson;

        return $this;
    }

    /**
     * Gets icms_credsn
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIcmsCredsn()
    {
        return $this->container['icms_credsn'];
    }

    /**
     * Sets icms_credsn
     * @param \Swagger\Client\Model\TaxByTypeTax $icms_credsn
     * @return $this
     */
    public function setIcmsCredsn($icms_credsn)
    {
        $this->container['icms_credsn'] = $icms_credsn;

        return $this;
    }

    /**
     * Gets pis
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getPis()
    {
        return $this->container['pis'];
    }

    /**
     * Sets pis
     * @param \Swagger\Client\Model\TaxByTypeTax $pis
     * @return $this
     */
    public function setPis($pis)
    {
        $this->container['pis'] = $pis;

        return $this;
    }

    /**
     * Gets pis_st
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getPisSt()
    {
        return $this->container['pis_st'];
    }

    /**
     * Sets pis_st
     * @param \Swagger\Client\Model\TaxByTypeTax $pis_st
     * @return $this
     */
    public function setPisSt($pis_st)
    {
        $this->container['pis_st'] = $pis_st;

        return $this;
    }

    /**
     * Gets cofins
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getCofins()
    {
        return $this->container['cofins'];
    }

    /**
     * Sets cofins
     * @param \Swagger\Client\Model\TaxByTypeTax $cofins
     * @return $this
     */
    public function setCofins($cofins)
    {
        $this->container['cofins'] = $cofins;

        return $this;
    }

    /**
     * Gets cofins_st
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getCofinsSt()
    {
        return $this->container['cofins_st'];
    }

    /**
     * Sets cofins_st
     * @param \Swagger\Client\Model\TaxByTypeTax $cofins_st
     * @return $this
     */
    public function setCofinsSt($cofins_st)
    {
        $this->container['cofins_st'] = $cofins_st;

        return $this;
    }

    /**
     * Gets ipi
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIpi()
    {
        return $this->container['ipi'];
    }

    /**
     * Sets ipi
     * @param \Swagger\Client\Model\TaxByTypeTax $ipi
     * @return $this
     */
    public function setIpi($ipi)
    {
        $this->container['ipi'] = $ipi;

        return $this;
    }

    /**
     * Gets ipi_returned
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIpiReturned()
    {
        return $this->container['ipi_returned'];
    }

    /**
     * Sets ipi_returned
     * @param \Swagger\Client\Model\TaxByTypeTax $ipi_returned
     * @return $this
     */
    public function setIpiReturned($ipi_returned)
    {
        $this->container['ipi_returned'] = $ipi_returned;

        return $this;
    }

    /**
     * Gets ii
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIi()
    {
        return $this->container['ii'];
    }

    /**
     * Sets ii
     * @param \Swagger\Client\Model\TaxByTypeTax $ii
     * @return $this
     */
    public function setIi($ii)
    {
        $this->container['ii'] = $ii;

        return $this;
    }

    /**
     * Gets iof
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getIof()
    {
        return $this->container['iof'];
    }

    /**
     * Sets iof
     * @param \Swagger\Client\Model\TaxByTypeTax $iof
     * @return $this
     */
    public function setIof($iof)
    {
        $this->container['iof'] = $iof;

        return $this;
    }

    /**
     * Gets aproxtrib_state
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getAproxtribState()
    {
        return $this->container['aproxtrib_state'];
    }

    /**
     * Sets aproxtrib_state
     * @param \Swagger\Client\Model\TaxByTypeTax $aproxtrib_state
     * @return $this
     */
    public function setAproxtribState($aproxtrib_state)
    {
        $this->container['aproxtrib_state'] = $aproxtrib_state;

        return $this;
    }

    /**
     * Gets aproxtrib_fed
     * @return \Swagger\Client\Model\TaxByTypeTax
     */
    public function getAproxtribFed()
    {
        return $this->container['aproxtrib_fed'];
    }

    /**
     * Sets aproxtrib_fed
     * @param \Swagger\Client\Model\TaxByTypeTax $aproxtrib_fed
     * @return $this
     */
    public function setAproxtribFed($aproxtrib_fed)
    {
        $this->container['aproxtrib_fed'] = $aproxtrib_fed;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


