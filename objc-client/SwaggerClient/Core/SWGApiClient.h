#import <Foundation/Foundation.h>
#import <ISO8601/ISO8601.h>
#import <AFNetworking/AFNetworking.h>
#import "SWGJSONResponseSerializer.h"
#import "SWGJSONRequestSerializer.h"
#import "SWGQueryParamCollection.h"
#import "SWGConfiguration.h"
#import "SWGResponseDeserializer.h"
#import "SWGSanitizer.h"
#import "SWGLogger.h"

/**
* BR16 - API
* This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
*
* OpenAPI spec version: 1.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#import "SWGAccountCompany.h"
#import "SWGAdditionalInformation.h"
#import "SWGAdditionalInformationProcRef.h"
#import "SWGAddress.h"
#import "SWGAgast.h"
#import "SWGAgastCodeType.h"
#import "SWGAgastExtendForSefaz.h"
#import "SWGAgastIcmsConf.h"
#import "SWGBody.h"
#import "SWGBody1.h"
#import "SWGBody2.h"
#import "SWGBody3.h"
#import "SWGBody4.h"
#import "SWGCSTPistCofinsEnum.h"
#import "SWGCSTTableAEnum.h"
#import "SWGCSTTableBEnum.h"
#import "SWGCalcModelEnum.h"
#import "SWGCalculatedTaxSummaryForGoods.h"
#import "SWGCalculatedTaxSummaryForGoodsTaxByType.h"
#import "SWGCfopConf.h"
#import "SWGCompany.h"
#import "SWGCompanyAuthorizedToDownloadNFe.h"
#import "SWGCompanyConfiguration.h"
#import "SWGCompanyMailServer.h"
#import "SWGCstIcmsEnum.h"
#import "SWGCustomAgast.h"
#import "SWGCustomIcmsConfByState.h"
#import "SWGCustomProcessScenario.h"
#import "SWGCustomTaxTypeRate.h"
#import "SWGDefaultLocations.h"
#import "SWGDetailsCalculatedTax.h"
#import "SWGDetailsCalculatedTaxItem.h"
#import "SWGEntity.h"
#import "SWGEntityForGoods.h"
#import "SWGEntityInformerForGoods.h"
#import "SWGEntityInformerForGoodsFederalTaxRegime.h"
#import "SWGEntityLocation.h"
#import "SWGEntityType.h"
#import "SWGError.h"
#import "SWGExportInfo.h"
#import "SWGFederalTaxRegime.h"
#import "SWGFuel.h"
#import "SWGFuelCide.h"
#import "SWGFuelPumpNumber.h"
#import "SWGHeaderBaseInfo.h"
#import "SWGHeaderForGoods.h"
#import "SWGHeaderForGoodsParticipants.h"
#import "SWGIbptConf.h"
#import "SWGIcmsConfByState.h"
#import "SWGIcmsConfByStateIcmsSTConf.h"
#import "SWGIcmsConfInterState.h"
#import "SWGIcmsConfInterStateIcmsSTConf.h"
#import "SWGIcmsTaxConf.h"
#import "SWGIcmsTaxConfBase.h"
#import "SWGInformerForGoods.h"
#import "SWGInformerForGoodsCsts.h"
#import "SWGInlineResponse200.h"
#import "SWGInlineResponse2001.h"
#import "SWGInlineResponse2002.h"
#import "SWGInlineResponse2003.h"
#import "SWGInlineResponse2004.h"
#import "SWGInlineResponse201.h"
#import "SWGInstallmentComplete.h"
#import "SWGIpbtConfItem.h"
#import "SWGIssConfByCity.h"
#import "SWGIssConfServiceList.h"
#import "SWGIssConfServiceListTaxRate.h"
#import "SWGIssConfServiceListTaxRateIbpt.h"
#import "SWGItemCpom.h"
#import "SWGItemGoods.h"
#import "SWGItemSimple.h"
#import "SWGLegalReason.h"
#import "SWGLegalReasonReferencedProcesses.h"
#import "SWGLegalReasonTaxScope.h"
#import "SWGLineForGoods.h"
#import "SWGLineForGoodsAdi.h"
#import "SWGLineForGoodsCalculatedTax.h"
#import "SWGLineForGoodsCalculatedTaxTaxByType.h"
#import "SWGLineForGoodsDi.h"
#import "SWGLineForGoodsExport.h"
#import "SWGLineForGoodsIcmsTaxRelief.h"
#import "SWGLineForGoodsIndExport.h"
#import "SWGLineForSefazGoods.h"
#import "SWGLocation.h"
#import "SWGLocationSecondaryStateTaxId.h"
#import "SWGMedicine.h"
#import "SWGMessage.h"
#import "SWGNRef.h"
#import "SWGNRefRefECF.h"
#import "SWGNRefRefFarmerNF.h"
#import "SWGNRefRefNF.h"
#import "SWGPayRecCalculatedTaxSummaryForService.h"
#import "SWGPayRecCalculatedTaxSummaryForServiceTaxByType.h"
#import "SWGPayRecHeader.h"
#import "SWGPayRecLinesIn.h"
#import "SWGPayRecLinesOut.h"
#import "SWGPayment.h"
#import "SWGPaymentBill.h"
#import "SWGPaymentCalculatedTax.h"
#import "SWGPaymentInstallment.h"
#import "SWGPaymentLinesIn.h"
#import "SWGPaymentPaymentMode.h"
#import "SWGPaymentTaxByType.h"
#import "SWGPaymentTerms.h"
#import "SWGPaymentTransactionIn.h"
#import "SWGPaymentTransactionOut.h"
#import "SWGPccWithholdingMode.h"
#import "SWGPointOfOrderOrigin.h"
#import "SWGProcessScenario.h"
#import "SWGProcessingInfo.h"
#import "SWGPurchaseCalculatedTax.h"
#import "SWGPurchaseCalculatedTaxSummaryForService.h"
#import "SWGPurchaseCalculatedTaxSummaryForServiceTaxByType.h"
#import "SWGPurchaseDefaultLocations.h"
#import "SWGPurchaseEntity.h"
#import "SWGPurchaseHeaderIn.h"
#import "SWGPurchaseHeaderInPayment.h"
#import "SWGPurchaseHeaderOut.h"
#import "SWGPurchaseHeaderOutPayment.h"
#import "SWGPurchaseInfo.h"
#import "SWGPurchaseInstallmentIn.h"
#import "SWGPurchaseLinesIn.h"
#import "SWGPurchaseLinesOut.h"
#import "SWGPurchaseTaxByType.h"
#import "SWGPurchaseTaxByTypeDetail.h"
#import "SWGPurchaseTaxesConfig.h"
#import "SWGPurchaseTransactionIn.h"
#import "SWGPurchaseTransactionOut.h"
#import "SWGReceiptTransactionIn.h"
#import "SWGReceiptTransactionOut.h"
#import "SWGSalesCalculatedTax.h"
#import "SWGSalesCalculatedTaxSummaryForService.h"
#import "SWGSalesCalculatedTaxSummaryForServiceTaxByType.h"
#import "SWGSalesDefaultLocations.h"
#import "SWGSalesEntity.h"
#import "SWGSalesHeaderIn.h"
#import "SWGSalesHeaderInPayment.h"
#import "SWGSalesHeaderOut.h"
#import "SWGSalesHeaderOutPayment.h"
#import "SWGSalesInstallmentIn.h"
#import "SWGSalesLinesIn.h"
#import "SWGSalesLinesInTaxDeductions.h"
#import "SWGSalesLinesOut.h"
#import "SWGSalesLinesOutTaxDeductions.h"
#import "SWGSalesTaxByType.h"
#import "SWGSalesTaxByTypeDetail.h"
#import "SWGSalesTaxesConfig.h"
#import "SWGSalesTransactionIn.h"
#import "SWGSalesTransactionOut.h"
#import "SWGSefazDisableRangeIn.h"
#import "SWGSefazInvoiceBasicStatus.h"
#import "SWGSefazInvoiceStatus.h"
#import "SWGSefazItDeleteIn.h"
#import "SWGSefazItGetOut.h"
#import "SWGSefazItPutIn.h"
#import "SWGSefazPostOut.h"
#import "SWGServiceItemTaxRate.h"
#import "SWGServiceItemTaxRatePeriod.h"
#import "SWGServiceRendered.h"
#import "SWGSimpleAddress.h"
#import "SWGStateEnum.h"
#import "SWGStateTransition.h"
#import "SWGTaxByTypeSummaryForGoods.h"
#import "SWGTaxByTypeSummaryForService.h"
#import "SWGTaxByTypeSummaryJurisdiction.h"
#import "SWGTaxByTypeSummaryJurisdictionForGoods.h"
#import "SWGTaxByTypeTax.h"
#import "SWGTaxConf.h"
#import "SWGTaxType.h"
#import "SWGTaxTypeRate.h"
#import "SWGTaxTypeRateWithholding.h"
#import "SWGTransactionForGoodsIn.h"
#import "SWGTransactionForGoodsOut.h"
#import "SWGTransactionForSefazGoods.h"
#import "SWGTransactionForSefazGoodsList.h"
#import "SWGTransport.h"
#import "SWGTransportVolumes.h"
#import "SWGValidationError.h"
#import "SWGVehicle.h"
#import "SWGVehicleID.h"
#import "SWGVehicleTransp.h"
#import "SWGWeapon.h"
#import "SWGWithholdDef.h"
#import "SWGWithholdingMode.h"



@class SWGConfiguration;

/**
 * A key for `NSError` user info dictionaries.
 *
 * The corresponding value is the parsed response body for an HTTP error.
 */
extern NSString *const SWGResponseObjectErrorKey;

@interface SWGApiClient : AFHTTPSessionManager

@property(nonatomic, assign) NSURLRequestCachePolicy cachePolicy;
@property(nonatomic, assign) NSTimeInterval timeoutInterval;
@property(nonatomic, readonly) NSOperationQueue* queue;

/// In order to ensure the HTTPResponseHeaders are correct, it is recommended to initialize one SWGApiClient instance per thread.
@property(nonatomic, readonly) NSDictionary* HTTPResponseHeaders;

@property(nonatomic, strong) id<SWGResponseDeserializer> responseDeserializer;

@property(nonatomic, strong) id<SWGSanitizer> sanitizer;
/**
 * Clears Cache
 */
+(void)clearCache;

/**
 * Turns on cache
 *
 * @param enabled If the cached is enable, must be `YES` or `NO`
 */
+(void)setCacheEnabled:(BOOL) enabled;

/**
 * Gets the request queue size
 *
 * @return The size of `queuedRequests` static variable.
 */
+(NSUInteger)requestQueueSize;

/**
 * Sets the client unreachable
 *
 * @param state off line state, must be `YES` or `NO`
 */
+(void) setOfflineState:(BOOL) state;

/**
 * Gets if the client is unreachable
 *
 * @return The client offline state
 */
+(BOOL) getOfflineState;

/**
 * Sets the client reachability, this may be overridden by the reachability manager if reachability changes
 *
 * @param status The client reachability status.
 */
+(void) setReachabilityStatus:(AFNetworkReachabilityStatus) status;

/**
 * Gets the client reachability
 *
 * @return The client reachability.
 */
+(AFNetworkReachabilityStatus) getReachabilityStatus;

/**
 * Gets the next request id
 *
 * @return The next executed request id.
 */
+(NSNumber*) nextRequestId;

/**
 * Generates request id and add it to the queue
 *
 * @return The next executed request id.
 */
+(NSNumber*) queueRequest;

/**
 * Removes request id from the queue
 *
 * @param requestId The request which will be removed.
 */
+(void) cancelRequest:(NSNumber*)requestId;

/**
 * Customizes the behavior when the reachability changed
 *
 * @param changeBlock The block will be executed when the reachability changed.
 */
+(void) setReachabilityChangeBlock:(void(^)(int))changeBlock;

/**
 * Sets the api client reachability strategy
 */
- (void)configureCacheReachibility;

/**
 * Sets header for request
 *
 * @param value The header value
 * @param forKey The header key
 */
-(void)setHeaderValue:(NSString*) value
               forKey:(NSString*) forKey;

/**
 * Updates header parameters and query parameters for authentication
 *
 * @param headers The header parameter will be updated, passed by pointer to pointer.
 * @param querys The query parameters will be updated, passed by pointer to pointer.
 * @param authSettings The authentication names NSArray.
 */
- (void) updateHeaderParams:(NSDictionary **)headers
                queryParams:(NSDictionary **)querys
           WithAuthSettings:(NSArray *)authSettings;

/**
 * Performs request
 *
 * @param path Request url.
 * @param method Request method.
 * @param pathParams Request path parameters.
 * @param queryParams Request query parameters.
 * @param body Request body.
 * @param headerParams Request header parameters.
 * @param authSettings Request authentication names.
 * @param requestContentType Request content-type.
 * @param responseContentType Response content-type.
 * @param completionBlock The block will be executed when the request completed.
 *
 * @return The request id.
 */
-(NSNumber*) requestWithPath:(NSString*) path
                      method:(NSString*) method
                  pathParams:(NSDictionary *) pathParams
                 queryParams:(NSDictionary*) queryParams
                  formParams:(NSDictionary *) formParams
                       files:(NSDictionary *) files
                        body:(id) body
                headerParams:(NSDictionary*) headerParams
                authSettings:(NSArray *) authSettings
          requestContentType:(NSString*) requestContentType
         responseContentType:(NSString*) responseContentType
                responseType:(NSString *) responseType
             completionBlock:(void (^)(id, NSError *))completionBlock;

/**
 * Custom security policy
 *
 * @return AFSecurityPolicy
 */
- (AFSecurityPolicy *) customSecurityPolicy;

/**
 * SWGConfiguration return sharedConfig
 *
 * @return SWGConfiguration
 */
- (SWGConfiguration*) configuration;


@end
