#import <Foundation/Foundation.h>
#import "SWGBody2.h"
#import "SWGBody3.h"
#import "SWGInlineResponse2002.h"
#import "SWGMessage.h"
#import "SWGValidationError.h"
#import "SWGApi.h"

/**
* AvaTax Brazil
* The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
*
* OpenAPI spec version: 1.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface SWGCompanyFilesApi: NSObject <SWGApi>

extern NSString* kSWGCompanyFilesApiErrorDomain;
extern NSInteger kSWGCompanyFilesApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// 
/// Deletes a company file store.  
///
/// @param companyId Company ID
/// @param companyId2 Company ID
///  code:200 message:"Successful response",
///  code:400 message:"The request was invalid or cannot be otherwise served.",
///  code:401 message:"Authentication credentials were missing or incorrect.",
///  code:403 message:"The request is understood, but it has been refused or access is not allowed.",
///  code:404 message:"The URI requested is invalid or the resource requested does not exists.",
///  code:429 message:"The request cannot be served due to the application’s rate limit having been exhausted for the resource.",
///  code:500 message:"Something is broken.",
///  code:503 message:"The server is up, but overloaded with requests. Try again later."
-(NSNumber*) companiesCompanyIdNfseCertificateDeleteWithCompanyId: (NSString*) companyId
    companyId2: (NSString*) companyId2
    completionHandler: (void (^)(NSError* error)) handler;

/// 
/// Gets an existing NFSe certificate file for this company. 
///
/// @param companyId Company ID
/// @param companyId2 Company ID
/// @param peek Use this parameter to check the existence of the file without downloading it. (optional)
///  code:200 message:"Successful response",
///  code:400 message:"The request was invalid or cannot be otherwise served.",
///  code:401 message:"Authentication credentials were missing or incorrect.",
///  code:403 message:"The request is understood, but it has been refused or access is not allowed.",
///  code:404 message:"The URI requested is invalid or the resource requested does not exists.",
///  code:429 message:"The request cannot be served due to the application’s rate limit having been exhausted for the resource.",
///  code:500 message:"Something is broken.",
///  code:503 message:"The server is up, but overloaded with requests. Try again later."
-(NSNumber*) companiesCompanyIdNfseCertificateGetWithCompanyId: (NSString*) companyId
    companyId2: (NSString*) companyId2
    peek: (NSNumber*) peek
    completionHandler: (void (^)(NSError* error)) handler;

/// 
/// If it still not exists, uploads a new NFSe Certificate file for this company. Send the file as a base64 string. 
///
/// @param companyId Company ID
/// @param body Content
///  code:200 message:"Successful response",
///  code:400 message:"The request was invalid or cannot be otherwise served.",
///  code:401 message:"Authentication credentials were missing or incorrect.",
///  code:403 message:"The request is understood, but it has been refused or access is not allowed.",
///  code:404 message:"The URI requested is invalid or the resource requested does not exists.",
///  code:429 message:"The request cannot be served due to the application’s rate limit having been exhausted for the resource.",
///  code:500 message:"Something is broken.",
///  code:503 message:"The server is up, but overloaded with requests. Try again later."
/// @return SWGInlineResponse2002*
-(NSNumber*) companiesCompanyIdNfseCertificatePostWithCompanyId: (NSString*) companyId
    body: (SWGBody3*) body
    completionHandler: (void (^)(SWGInlineResponse2002* output, NSError* error)) handler;

/// 
/// Updates an existing NFSe certificate file for this company. Send the file as a base64 string. 
///
/// @param companyId Company ID
/// @param companyId2 Company ID
/// @param body Content
///  code:200 message:"Successful response",
///  code:400 message:"The request was invalid or cannot be otherwise served.",
///  code:401 message:"Authentication credentials were missing or incorrect.",
///  code:403 message:"The request is understood, but it has been refused or access is not allowed.",
///  code:404 message:"The URI requested is invalid or the resource requested does not exists.",
///  code:429 message:"The request cannot be served due to the application’s rate limit having been exhausted for the resource.",
///  code:500 message:"Something is broken.",
///  code:503 message:"The server is up, but overloaded with requests. Try again later."
/// @return SWGInlineResponse2002*
-(NSNumber*) companiesCompanyIdNfseCertificatePutWithCompanyId: (NSString*) companyId
    companyId2: (NSString*) companyId2
    body: (SWGBody2*) body
    completionHandler: (void (^)(SWGInlineResponse2002* output, NSError* error)) handler;


@end
