/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import java.util.List;
import java.util.UUID;

import org.junit.Ignore;
import org.junit.Test;

import io.swagger.client.ApiException;
import io.swagger.client.model.InlineResponse201;
import io.swagger.client.model.Location;

/**
 * API tests for CompanyLocationApi
 */
@Ignore
public class CompanyLocationApiTest {

    private final CompanyLocationApi api = new CompanyLocationApi();

    
    /**
     * Create new location for company
     *
     * This method operation create a new location for company 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createLocationTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        Location body = null;
        InlineResponse201 response = api.createLocation(authorization, companyId, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete location
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLocationTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        String code = null;
        api.deleteLocation(authorization, companyId, code);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * This operation return location 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCompanyLocationTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        String code = null;
        Location response = api.getCompanyLocation(authorization, companyId, code);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * This operation return all locations 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCompanyLocationsListTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        Integer xPaginationLimit = null;
        Integer xPaginationCurrentPage = null;
        String xPaginationSort = null;
        List<Location> response = api.getCompanyLocationsList(authorization, companyId, xPaginationLimit, xPaginationCurrentPage, xPaginationSort);

        // TODO: test validations
    }
    
    /**
     * Update location for company
     *
     * This method operation update a location for company 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLocationTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        String code = null;
        Location body = null;
        api.updateLocation(authorization, companyId, code, body);

        // TODO: test validations
    }
    
}
