/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Agast;
import io.swagger.client.model.InlineResponse2001;
import io.swagger.client.model.InlineResponse201;
import io.swagger.client.model.Message;
import io.swagger.client.model.ValidationError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AGASTApi
 */
@Ignore
public class AGASTApiTest {

    private final AGASTApi api = new AGASTApi();

    
    /**
     * 
     *
     * This operation return agast configurations that match with parameters queries 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void agastsCodeGetTest() throws ApiException {
        String code = null;
        Agast response = api.agastsCodeGet(code);

        // TODO: test validations
    }
    
    /**
     * Create agast
     *
     * This method operation create a AGAST 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAgastTest() throws ApiException {
        Agast body = null;
        InlineResponse201 response = api.createAgast(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAgastTest() throws ApiException {
        String code = null;
        api.deleteAgast(code);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * This operation return agast configurations that match with parameters queries 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAgastListTest() throws ApiException {
        String text = null;
        List<InlineResponse2001> response = api.getAgastList(text);

        // TODO: test validations
    }
    
    /**
     * Update agast
     *
     * This method operation create a agast 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAgastTest() throws ApiException {
        String code = null;
        Agast body = null;
        api.updateAgast(code, body);

        // TODO: test validations
    }
    
}
