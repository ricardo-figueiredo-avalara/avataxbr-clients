/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import java.math.BigDecimal;
import io.swagger.client.model.Body2;
import io.swagger.client.model.Body3;
import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.Message;
import java.util.UUID;
import io.swagger.client.model.ValidationError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CompanyFilesApi
 */
@Ignore
public class CompanyFilesApiTest {

    private final CompanyFilesApi api = new CompanyFilesApi();

    
    /**
     * 
     *
     * Deletes a company file store. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCompanyServiceCertificateTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        UUID companyId2 = null;
        api.deleteCompanyServiceCertificate(authorization, companyId, companyId2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets an existing certificate file for this company. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCompanyServiceCertificateTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        UUID companyId2 = null;
        BigDecimal peek = null;
        api.getCompanyServiceCertificate(authorization, companyId, companyId2, peek);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * If it still not exists, uploads a new Certificate file for this company. Send the file as a base64 string. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCompanyServiceCertificateTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        Body3 body = null;
        InlineResponse2002 response = api.postCompanyServiceCertificate(authorization, companyId, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates an existing certificate file for this company. Send the file as a base64 string. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCompanyServiceCertificateTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        UUID companyId2 = null;
        Body2 body = null;
        InlineResponse2002 response = api.updateCompanyServiceCertificate(authorization, companyId, companyId2, body);

        // TODO: test validations
    }
    
}
