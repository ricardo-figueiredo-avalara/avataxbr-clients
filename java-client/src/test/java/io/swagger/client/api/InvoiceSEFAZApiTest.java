/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Message;
import io.swagger.client.model.SefazDisableRangeIn;
import io.swagger.client.model.SefazInvoiceBasicStatus;
import io.swagger.client.model.SefazItDeleteIn;
import io.swagger.client.model.SefazItGetOut;
import io.swagger.client.model.SefazItPutIn;
import io.swagger.client.model.SefazPostOut;
import io.swagger.client.model.TransactionForSefazGoods;
import io.swagger.client.model.TransactionForSefazGoodsList;
import io.swagger.client.model.ValidationError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvoiceSEFAZApi
 */
@Ignore
public class InvoiceSEFAZApiTest {

    private final InvoiceSEFAZApi api = new InvoiceSEFAZApi();

    
    /**
     * Disable Range e-Invoice
     *
     * Send disable range of NFes to SEFAZ 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invoicesSefazDeleteTest() throws ApiException {
        String authorization = null;
        SefazDisableRangeIn body = null;
        SefazInvoiceBasicStatus response = api.invoicesSefazDelete(authorization, body);

        // TODO: test validations
    }
    
    /**
     * Cancel invoice
     *
     * Cancel the invoice
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invoicesSefazKeyDeleteTest() throws ApiException {
        String authorization = null;
        String key = null;
        SefazItDeleteIn body = null;
        SefazInvoiceBasicStatus response = api.invoicesSefazKeyDelete(authorization, key, body);

        // TODO: test validations
    }
    
    /**
     * Retrieve invoice
     *
     * Retrieve the invoice
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invoicesSefazKeyGetTest() throws ApiException {
        String authorization = null;
        String key = null;
        SefazItGetOut response = api.invoicesSefazKeyGet(authorization, key);

        // TODO: test validations
    }
    
    /**
     * Retrieve invoice
     *
     * Retrieve the invoice
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invoicesSefazKeyLookupGetTest() throws ApiException {
        String authorization = null;
        String key = null;
        TransactionForSefazGoodsList response = api.invoicesSefazKeyLookupGet(authorization, key);

        // TODO: test validations
    }
    
    /**
     * Fix Letter
     *
     * Fix Letter
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invoicesSefazKeyPutTest() throws ApiException {
        String authorization = null;
        String key = null;
        SefazItPutIn body = null;
        SefazInvoiceBasicStatus response = api.invoicesSefazKeyPut(authorization, key, body);

        // TODO: test validations
    }
    
    /**
     * Send an e-Invoice
     *
     * Send a invoice to SEFAZ 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invoicesSefazPostTest() throws ApiException {
        String authorization = null;
        List<TransactionForSefazGoods> body = null;
        SefazPostOut response = api.invoicesSefazPost(authorization, body);

        // TODO: test validations
    }
    
    /**
     * Retrieve Status of SEFAZ Server
     *
     * Retrieve Status of SEFAZ Server
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invoicesSefazStatusGetTest() throws ApiException {
        String authorization = null;
        String response = api.invoicesSefazStatusGet(authorization);

        // TODO: test validations
    }
    
}
