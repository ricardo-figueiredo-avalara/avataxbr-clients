/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import java.util.List;
import java.util.UUID;

import org.junit.Ignore;
import org.junit.Test;

import io.swagger.client.ApiException;
import io.swagger.client.model.Company;

/**
 * API tests for CompanyApi
 */
@Ignore
public class CompanyApiTest {

    private final CompanyApi api = new CompanyApi();

    
    /**
     * Create company and your data configuration
     *
     * This method operation create a company for a account 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCompanyTest() throws ApiException {
        String authorization = null;
        Company body = null;
        Company response = api.createCompany(authorization, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete relation Account x company
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAccountCompanyTest() throws ApiException {
        String authorization = null;
        UUID accountId = null;
        UUID companyId = null;
        api.deleteAccountCompany(authorization, accountId, companyId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete Company
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCompanyTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        UUID companyId2 = null;
        api.deleteCompany(authorization, companyId, companyId2);

        // TODO: test validations
    }
    
    /**
     * Retrieve Companies by account
     *
     * Retrieve list companies of one account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCompaniesListTest() throws ApiException {
        String authorization = null;
        List<Company> response = api.getCompaniesList(authorization);

        // TODO: test validations
    }
    
    /**
     * Get company information and your data configuration
     *
     * This method operation get a company for a account 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void infoCompanyTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        Company response = api.infoCompany(authorization, companyId);

        // TODO: test validations
    }
    
    /**
     * Update company information and your data configuration
     *
     * This method operation create a company for a account 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCompanyTest() throws ApiException {
        String authorization = null;
        UUID companyId = null;
        Company body = null;
        api.updateCompany(authorization, companyId, body);

        // TODO: test validations
    }
    
}
