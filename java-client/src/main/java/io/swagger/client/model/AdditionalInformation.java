/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AdditionalInformationProcRef;
import java.util.ArrayList;
import java.util.List;

/**
 * AdditionalInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-24T19:47:57.099Z")
public class AdditionalInformation {
  @SerializedName("fiscalInfo")
  private String fiscalInfo = null;

  @SerializedName("complementaryInfo")
  private String complementaryInfo = null;

  @SerializedName("procRef")
  private List<AdditionalInformationProcRef> procRef = new ArrayList<AdditionalInformationProcRef>();

  public AdditionalInformation fiscalInfo(String fiscalInfo) {
    this.fiscalInfo = fiscalInfo;
    return this;
  }

   /**
   * Additional information of fiscal interest
   * @return fiscalInfo
  **/
  @ApiModelProperty(example = "null", value = "Additional information of fiscal interest")
  public String getFiscalInfo() {
    return fiscalInfo;
  }

  public void setFiscalInfo(String fiscalInfo) {
    this.fiscalInfo = fiscalInfo;
  }

  public AdditionalInformation complementaryInfo(String complementaryInfo) {
    this.complementaryInfo = complementaryInfo;
    return this;
  }

   /**
   * Additional information of user interest
   * @return complementaryInfo
  **/
  @ApiModelProperty(example = "null", value = "Additional information of user interest")
  public String getComplementaryInfo() {
    return complementaryInfo;
  }

  public void setComplementaryInfo(String complementaryInfo) {
    this.complementaryInfo = complementaryInfo;
  }

  public AdditionalInformation procRef(List<AdditionalInformationProcRef> procRef) {
    this.procRef = procRef;
    return this;
  }

  public AdditionalInformation addProcRefItem(AdditionalInformationProcRef procRefItem) {
    this.procRef.add(procRefItem);
    return this;
  }

   /**
   * Referenced Process
   * @return procRef
  **/
  @ApiModelProperty(example = "null", value = "Referenced Process")
  public List<AdditionalInformationProcRef> getProcRef() {
    return procRef;
  }

  public void setProcRef(List<AdditionalInformationProcRef> procRef) {
    this.procRef = procRef;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditionalInformation additionalInformation = (AdditionalInformation) o;
    return Objects.equals(this.fiscalInfo, additionalInformation.fiscalInfo) &&
        Objects.equals(this.complementaryInfo, additionalInformation.complementaryInfo) &&
        Objects.equals(this.procRef, additionalInformation.procRef);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fiscalInfo, complementaryInfo, procRef);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditionalInformation {\n");
    
    sb.append("    fiscalInfo: ").append(toIndentedString(fiscalInfo)).append("\n");
    sb.append("    complementaryInfo: ").append(toIndentedString(complementaryInfo)).append("\n");
    sb.append("    procRef: ").append(toIndentedString(procRef)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

