/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SalesLinesOutTaxDeductions;

/**
 * PurchaseLinesIn
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-06T17:54:07.550Z")
public class PurchaseLinesIn {
  @SerializedName("lineCode")
  private Integer lineCode = null;

  @SerializedName("itemCode")
  private String itemCode = null;

  @SerializedName("numberOfItems")
  private Double numberOfItems = 1.0d;

  @SerializedName("lineAmount")
  private Double lineAmount = null;

  @SerializedName("itemDescription")
  private String itemDescription = null;

  @SerializedName("lineTaxedDiscount")
  private Double lineTaxedDiscount = null;

  @SerializedName("lineUntaxedDiscount")
  private Double lineUntaxedDiscount = null;

  /**
   * Type of entity use associated with this line - 'resale' - 'production' - 'use or consumption' - 'fixed assets' 
   */
  public enum UseTypeEnum {
    @SerializedName("resale")
    RESALE("resale"),
    
    @SerializedName("production")
    PRODUCTION("production"),
    
    @SerializedName("use or consumption")
    USE_OR_CONSUMPTION("use or consumption"),
    
    @SerializedName("fixed assets")
    FIXED_ASSETS("fixed assets");

    private String value;

    UseTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("useType")
  private UseTypeEnum useType = null;

  @SerializedName("taxDeductions")
  private SalesLinesOutTaxDeductions taxDeductions = null;

  public PurchaseLinesIn lineCode(Integer lineCode) {
    this.lineCode = lineCode;
    return this;
  }

   /**
   * This string is a unique identifier for this line in the transaction
   * @return lineCode
  **/
  @ApiModelProperty(example = "null", value = "This string is a unique identifier for this line in the transaction")
  public Integer getLineCode() {
    return lineCode;
  }

  public void setLineCode(Integer lineCode) {
    this.lineCode = lineCode;
  }

  public PurchaseLinesIn itemCode(String itemCode) {
    this.itemCode = itemCode;
    return this;
  }

   /**
   * This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states.
   * @return itemCode
  **/
  @ApiModelProperty(example = "null", required = true, value = "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states.")
  public String getItemCode() {
    return itemCode;
  }

  public void setItemCode(String itemCode) {
    this.itemCode = itemCode;
  }

  public PurchaseLinesIn numberOfItems(Double numberOfItems) {
    this.numberOfItems = numberOfItems;
    return this;
  }

   /**
   * This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1
   * @return numberOfItems
  **/
  @ApiModelProperty(example = "null", value = "This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1")
  public Double getNumberOfItems() {
    return numberOfItems;
  }

  public void setNumberOfItems(Double numberOfItems) {
    this.numberOfItems = numberOfItems;
  }

  public PurchaseLinesIn lineAmount(Double lineAmount) {
    this.lineAmount = lineAmount;
    return this;
  }

   /**
   * This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems).
   * @return lineAmount
  **/
  @ApiModelProperty(example = "null", value = "This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems).")
  public Double getLineAmount() {
    return lineAmount;
  }

  public void setLineAmount(Double lineAmount) {
    this.lineAmount = lineAmount;
  }

  public PurchaseLinesIn itemDescription(String itemDescription) {
    this.itemDescription = itemDescription;
    return this;
  }

   /**
   * This string captures the description of the item represented by this line, will be used LC 116
   * @return itemDescription
  **/
  @ApiModelProperty(example = "null", value = "This string captures the description of the item represented by this line, will be used LC 116")
  public String getItemDescription() {
    return itemDescription;
  }

  public void setItemDescription(String itemDescription) {
    this.itemDescription = itemDescription;
  }

  public PurchaseLinesIn lineTaxedDiscount(Double lineTaxedDiscount) {
    this.lineTaxedDiscount = lineTaxedDiscount;
    return this;
  }

   /**
   * Conditional discount
   * @return lineTaxedDiscount
  **/
  @ApiModelProperty(example = "null", value = "Conditional discount")
  public Double getLineTaxedDiscount() {
    return lineTaxedDiscount;
  }

  public void setLineTaxedDiscount(Double lineTaxedDiscount) {
    this.lineTaxedDiscount = lineTaxedDiscount;
  }

  public PurchaseLinesIn lineUntaxedDiscount(Double lineUntaxedDiscount) {
    this.lineUntaxedDiscount = lineUntaxedDiscount;
    return this;
  }

   /**
   * Unconditional discount
   * @return lineUntaxedDiscount
  **/
  @ApiModelProperty(example = "null", value = "Unconditional discount")
  public Double getLineUntaxedDiscount() {
    return lineUntaxedDiscount;
  }

  public void setLineUntaxedDiscount(Double lineUntaxedDiscount) {
    this.lineUntaxedDiscount = lineUntaxedDiscount;
  }

  public PurchaseLinesIn useType(UseTypeEnum useType) {
    this.useType = useType;
    return this;
  }

   /**
   * Type of entity use associated with this line - 'resale' - 'production' - 'use or consumption' - 'fixed assets' 
   * @return useType
  **/
  @ApiModelProperty(example = "null", value = "Type of entity use associated with this line - 'resale' - 'production' - 'use or consumption' - 'fixed assets' ")
  public UseTypeEnum getUseType() {
    return useType;
  }

  public void setUseType(UseTypeEnum useType) {
    this.useType = useType;
  }

  public PurchaseLinesIn taxDeductions(SalesLinesOutTaxDeductions taxDeductions) {
    this.taxDeductions = taxDeductions;
    return this;
  }

   /**
   * Get taxDeductions
   * @return taxDeductions
  **/
  @ApiModelProperty(example = "null", value = "")
  public SalesLinesOutTaxDeductions getTaxDeductions() {
    return taxDeductions;
  }

  public void setTaxDeductions(SalesLinesOutTaxDeductions taxDeductions) {
    this.taxDeductions = taxDeductions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseLinesIn purchaseLinesIn = (PurchaseLinesIn) o;
    return Objects.equals(this.lineCode, purchaseLinesIn.lineCode) &&
        Objects.equals(this.itemCode, purchaseLinesIn.itemCode) &&
        Objects.equals(this.numberOfItems, purchaseLinesIn.numberOfItems) &&
        Objects.equals(this.lineAmount, purchaseLinesIn.lineAmount) &&
        Objects.equals(this.itemDescription, purchaseLinesIn.itemDescription) &&
        Objects.equals(this.lineTaxedDiscount, purchaseLinesIn.lineTaxedDiscount) &&
        Objects.equals(this.lineUntaxedDiscount, purchaseLinesIn.lineUntaxedDiscount) &&
        Objects.equals(this.useType, purchaseLinesIn.useType) &&
        Objects.equals(this.taxDeductions, purchaseLinesIn.taxDeductions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineCode, itemCode, numberOfItems, lineAmount, itemDescription, lineTaxedDiscount, lineUntaxedDiscount, useType, taxDeductions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseLinesIn {\n");
    
    sb.append("    lineCode: ").append(toIndentedString(lineCode)).append("\n");
    sb.append("    itemCode: ").append(toIndentedString(itemCode)).append("\n");
    sb.append("    numberOfItems: ").append(toIndentedString(numberOfItems)).append("\n");
    sb.append("    lineAmount: ").append(toIndentedString(lineAmount)).append("\n");
    sb.append("    itemDescription: ").append(toIndentedString(itemDescription)).append("\n");
    sb.append("    lineTaxedDiscount: ").append(toIndentedString(lineTaxedDiscount)).append("\n");
    sb.append("    lineUntaxedDiscount: ").append(toIndentedString(lineUntaxedDiscount)).append("\n");
    sb.append("    useType: ").append(toIndentedString(useType)).append("\n");
    sb.append("    taxDeductions: ").append(toIndentedString(taxDeductions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

