/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * IcmsConfInterState
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-06T17:54:07.550Z")
public class IcmsConfInterState {
  @SerializedName("state")
  private StateEnum state = null;

  /**
   * how this ICMS will be calculed for itens linked to this configuration
   */
  public enum CalcModeEnum {
    @SerializedName("BYMVARATE")
    BYMVARATE("BYMVARATE"),
    
    @SerializedName("SRP")
    SRP("SRP"),
    
    @SerializedName("MMSRP")
    MMSRP("MMSRP"),
    
    @SerializedName("OPERATIONAMOUNT")
    OPERATIONAMOUNT("OPERATIONAMOUNT");

    private String value;

    CalcModeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("calcMode")
  private CalcModeEnum calcMode = null;

  @SerializedName("discountRateForMonoPhase")
  private Double discountRateForMonoPhase = null;

  @SerializedName("rate")
  private Double rate = null;

  @SerializedName("fcpRate")
  private Double fcpRate = null;

  @SerializedName("icmsBaseDiscount")
  private Double icmsBaseDiscount = null;

  @SerializedName("msrp")
  private Double msrp = null;

  @SerializedName("mvaRate")
  private Double mvaRate = null;

  @SerializedName("msrpUnit")
  private String msrpUnit = null;

  @SerializedName("icmsLegalReason")
  private String icmsLegalReason = null;

  @SerializedName("icmsSTConf")
  private IcmsConfInterStateIcmsSTConf icmsSTConf = null;

  public IcmsConfInterState state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(example = "null", value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public IcmsConfInterState calcMode(CalcModeEnum calcMode) {
    this.calcMode = calcMode;
    return this;
  }

   /**
   * how this ICMS will be calculed for itens linked to this configuration
   * @return calcMode
  **/
  @ApiModelProperty(example = "null", value = "how this ICMS will be calculed for itens linked to this configuration")
  public CalcModeEnum getCalcMode() {
    return calcMode;
  }

  public void setCalcMode(CalcModeEnum calcMode) {
    this.calcMode = calcMode;
  }

  public IcmsConfInterState discountRateForMonoPhase(Double discountRateForMonoPhase) {
    this.discountRateForMonoPhase = discountRateForMonoPhase;
    return this;
  }

   /**
   * discount if the item is subject to monophase PIS/COFINS when operation interstate
   * @return discountRateForMonoPhase
  **/
  @ApiModelProperty(example = "null", value = "discount if the item is subject to monophase PIS/COFINS when operation interstate")
  public Double getDiscountRateForMonoPhase() {
    return discountRateForMonoPhase;
  }

  public void setDiscountRateForMonoPhase(Double discountRateForMonoPhase) {
    this.discountRateForMonoPhase = discountRateForMonoPhase;
  }

  public IcmsConfInterState rate(Double rate) {
    this.rate = rate;
    return this;
  }

   /**
   * ICMS rate
   * @return rate
  **/
  @ApiModelProperty(example = "null", value = "ICMS rate")
  public Double getRate() {
    return rate;
  }

  public void setRate(Double rate) {
    this.rate = rate;
  }

  public IcmsConfInterState fcpRate(Double fcpRate) {
    this.fcpRate = fcpRate;
    return this;
  }

   /**
   * FCP rate (Fundo de Combate à Probreza / Fund Against Poverty
   * @return fcpRate
  **/
  @ApiModelProperty(example = "null", value = "FCP rate (Fundo de Combate à Probreza / Fund Against Poverty")
  public Double getFcpRate() {
    return fcpRate;
  }

  public void setFcpRate(Double fcpRate) {
    this.fcpRate = fcpRate;
  }

  public IcmsConfInterState icmsBaseDiscount(Double icmsBaseDiscount) {
    this.icmsBaseDiscount = icmsBaseDiscount;
    return this;
  }

   /**
   * ICMS rate
   * @return icmsBaseDiscount
  **/
  @ApiModelProperty(example = "null", value = "ICMS rate")
  public Double getIcmsBaseDiscount() {
    return icmsBaseDiscount;
  }

  public void setIcmsBaseDiscount(Double icmsBaseDiscount) {
    this.icmsBaseDiscount = icmsBaseDiscount;
  }

  public IcmsConfInterState msrp(Double msrp) {
    this.msrp = msrp;
    return this;
  }

   /**
   * SRP or MMSRP amount base for this icms configuration
   * @return msrp
  **/
  @ApiModelProperty(example = "null", value = "SRP or MMSRP amount base for this icms configuration")
  public Double getMsrp() {
    return msrp;
  }

  public void setMsrp(Double msrp) {
    this.msrp = msrp;
  }

  public IcmsConfInterState mvaRate(Double mvaRate) {
    this.mvaRate = mvaRate;
    return this;
  }

   /**
   * ICMS MVA rate to define calc base
   * @return mvaRate
  **/
  @ApiModelProperty(example = "null", value = "ICMS MVA rate to define calc base")
  public Double getMvaRate() {
    return mvaRate;
  }

  public void setMvaRate(Double mvaRate) {
    this.mvaRate = mvaRate;
  }

  public IcmsConfInterState msrpUnit(String msrpUnit) {
    this.msrpUnit = msrpUnit;
    return this;
  }

   /**
   * unit used to SRP amount value
   * @return msrpUnit
  **/
  @ApiModelProperty(example = "null", value = "unit used to SRP amount value")
  public String getMsrpUnit() {
    return msrpUnit;
  }

  public void setMsrpUnit(String msrpUnit) {
    this.msrpUnit = msrpUnit;
  }

  public IcmsConfInterState icmsLegalReason(String icmsLegalReason) {
    this.icmsLegalReason = icmsLegalReason;
    return this;
  }

   /**
   * Code for the ICM legal reason, this message will be placed on invoice.
   * @return icmsLegalReason
  **/
  @ApiModelProperty(example = "null", value = "Code for the ICM legal reason, this message will be placed on invoice.")
  public String getIcmsLegalReason() {
    return icmsLegalReason;
  }

  public void setIcmsLegalReason(String icmsLegalReason) {
    this.icmsLegalReason = icmsLegalReason;
  }

  public IcmsConfInterState icmsSTConf(IcmsConfInterStateIcmsSTConf icmsSTConf) {
    this.icmsSTConf = icmsSTConf;
    return this;
  }

   /**
   * Get icmsSTConf
   * @return icmsSTConf
  **/
  @ApiModelProperty(example = "null", value = "")
  public IcmsConfInterStateIcmsSTConf getIcmsSTConf() {
    return icmsSTConf;
  }

  public void setIcmsSTConf(IcmsConfInterStateIcmsSTConf icmsSTConf) {
    this.icmsSTConf = icmsSTConf;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IcmsConfInterState icmsConfInterState = (IcmsConfInterState) o;
    return Objects.equals(this.state, icmsConfInterState.state) &&
        Objects.equals(this.calcMode, icmsConfInterState.calcMode) &&
        Objects.equals(this.discountRateForMonoPhase, icmsConfInterState.discountRateForMonoPhase) &&
        Objects.equals(this.rate, icmsConfInterState.rate) &&
        Objects.equals(this.fcpRate, icmsConfInterState.fcpRate) &&
        Objects.equals(this.icmsBaseDiscount, icmsConfInterState.icmsBaseDiscount) &&
        Objects.equals(this.msrp, icmsConfInterState.msrp) &&
        Objects.equals(this.mvaRate, icmsConfInterState.mvaRate) &&
        Objects.equals(this.msrpUnit, icmsConfInterState.msrpUnit) &&
        Objects.equals(this.icmsLegalReason, icmsConfInterState.icmsLegalReason) &&
        Objects.equals(this.icmsSTConf, icmsConfInterState.icmsSTConf);
  }

  @Override
  public int hashCode() {
    return Objects.hash(state, calcMode, discountRateForMonoPhase, rate, fcpRate, icmsBaseDiscount, msrp, mvaRate, msrpUnit, icmsLegalReason, icmsSTConf);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IcmsConfInterState {\n");
    
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    calcMode: ").append(toIndentedString(calcMode)).append("\n");
    sb.append("    discountRateForMonoPhase: ").append(toIndentedString(discountRateForMonoPhase)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    fcpRate: ").append(toIndentedString(fcpRate)).append("\n");
    sb.append("    icmsBaseDiscount: ").append(toIndentedString(icmsBaseDiscount)).append("\n");
    sb.append("    msrp: ").append(toIndentedString(msrp)).append("\n");
    sb.append("    mvaRate: ").append(toIndentedString(mvaRate)).append("\n");
    sb.append("    msrpUnit: ").append(toIndentedString(msrpUnit)).append("\n");
    sb.append("    icmsLegalReason: ").append(toIndentedString(icmsLegalReason)).append("\n");
    sb.append("    icmsSTConf: ").append(toIndentedString(icmsSTConf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

