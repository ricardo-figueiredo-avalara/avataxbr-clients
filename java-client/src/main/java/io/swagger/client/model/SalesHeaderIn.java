/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;

import org.joda.time.LocalDate;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * SalesHeaderIn
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-06T17:54:07.550Z")
public class SalesHeaderIn {
  /**
   * This string indicates the type of transaction for which tax should be calculated. - 'Sale' - 'Purchase' - 'Payment' - 'Receipt' 
   */
  public enum TransactionTypeEnum {
    @SerializedName("Sale")
    SALE("Sale"),
    
    @SerializedName("Purchase")
    PURCHASE("Purchase"),
    
    @SerializedName("Payment")
    PAYMENT("Payment"),
    
    @SerializedName("Receipt")
    RECEIPT("Receipt");

    private String value;

    TransactionTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("transactionType")
  private TransactionTypeEnum transactionType = null;

  @SerializedName("documentCode")
  private String documentCode = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("transactionDate")
  private LocalDate transactionDate = null;

  @SerializedName("taxCalculationDate")
  private LocalDate taxCalculationDate = null;

  @SerializedName("companyLocation")
  private String companyLocation = null;

  @SerializedName("purchaseOrderNumber")
  private String purchaseOrderNumber = null;

  @SerializedName("rpsNumber")
  private Integer rpsNumber = null;

  @SerializedName("rpsSerie")
  private String rpsSerie = "0";

  @SerializedName("discriminationIn")
  private String discriminationIn = null;

  @SerializedName("entity")
  private SalesEntity entity = null;

  @SerializedName("payment")
  private SalesHeaderInPayment payment = null;

  @SerializedName("taxesConfig")
  private SalesTaxesConfig taxesConfig = null;

  @SerializedName("defaultLocations")
  private SalesDefaultLocations defaultLocations = null;

  public SalesHeaderIn transactionType(TransactionTypeEnum transactionType) {
    this.transactionType = transactionType;
    return this;
  }

   /**
   * This string indicates the type of transaction for which tax should be calculated. - 'Sale' - 'Purchase' - 'Payment' - 'Receipt' 
   * @return transactionType
  **/
  @ApiModelProperty(example = "null", required = true, value = "This string indicates the type of transaction for which tax should be calculated. - 'Sale' - 'Purchase' - 'Payment' - 'Receipt' ")
  public TransactionTypeEnum getTransactionType() {
    return transactionType;
  }

  public void setTransactionType(TransactionTypeEnum transactionType) {
    this.transactionType = transactionType;
  }

  public SalesHeaderIn documentCode(String documentCode) {
    this.documentCode = documentCode;
    return this;
  }

   /**
   * This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored
   * @return documentCode
  **/
  @ApiModelProperty(example = "null", value = "This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc. When has this field, the transaction will be stored")
  public String getDocumentCode() {
    return documentCode;
  }

  public void setDocumentCode(String documentCode) {
    this.documentCode = documentCode;
  }

  public SalesHeaderIn currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * currency code / transactions must be in Brazilian Reais \"BRL\"
   * @return currency
  **/
  @ApiModelProperty(example = "null", value = "currency code / transactions must be in Brazilian Reais \"BRL\"")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public SalesHeaderIn transactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * This string is the transaction date in ISO 8601 format (which may be different from the date the tax calculation is performed)
   * @return transactionDate
  **/
  @ApiModelProperty(example = "null", required = true, value = "This string is the transaction date in ISO 8601 format (which may be different from the date the tax calculation is performed)")
  public LocalDate getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(LocalDate transactionDate) {
    this.transactionDate = transactionDate;
  }

  public SalesHeaderIn taxCalculationDate(LocalDate taxCalculationDate) {
    this.taxCalculationDate = taxCalculationDate;
    return this;
  }

   /**
   * accrual date, This string is the date, in ISO 8601 format, on which tax is to be calculated for this transaction (normally tax is calculated on the date the transaction is performed as captured in the transactionDate field). This is useful for layaways and other deferred transactions.
   * @return taxCalculationDate
  **/
  @ApiModelProperty(example = "null", value = "accrual date, This string is the date, in ISO 8601 format, on which tax is to be calculated for this transaction (normally tax is calculated on the date the transaction is performed as captured in the transactionDate field). This is useful for layaways and other deferred transactions.")
  public LocalDate getTaxCalculationDate() {
    return taxCalculationDate;
  }

  public void setTaxCalculationDate(LocalDate taxCalculationDate) {
    this.taxCalculationDate = taxCalculationDate;
  }

  public SalesHeaderIn companyLocation(String companyLocation) {
    this.companyLocation = companyLocation;
    return this;
  }

   /**
   * This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity
   * @return companyLocation
  **/
  @ApiModelProperty(example = "null", required = true, value = "This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity")
  public String getCompanyLocation() {
    return companyLocation;
  }

  public void setCompanyLocation(String companyLocation) {
    this.companyLocation = companyLocation;
  }

  public SalesHeaderIn purchaseOrderNumber(String purchaseOrderNumber) {
    this.purchaseOrderNumber = purchaseOrderNumber;
    return this;
  }

   /**
   * The number of Purchase Order
   * @return purchaseOrderNumber
  **/
  @ApiModelProperty(example = "null", value = "The number of Purchase Order")
  public String getPurchaseOrderNumber() {
    return purchaseOrderNumber;
  }

  public void setPurchaseOrderNumber(String purchaseOrderNumber) {
    this.purchaseOrderNumber = purchaseOrderNumber;
  }

  public SalesHeaderIn rpsNumber(Integer rpsNumber) {
    this.rpsNumber = rpsNumber;
    return this;
  }

   /**
   * Provisional receipt services, sequencial number maintained by the client application, unique by serie
   * @return rpsNumber
  **/
  @ApiModelProperty(example = "null", value = "Provisional receipt services, sequencial number maintained by the client application, unique by serie")
  public Integer getRpsNumber() {
    return rpsNumber;
  }

  public void setRpsNumber(Integer rpsNumber) {
    this.rpsNumber = rpsNumber;
  }

  public SalesHeaderIn rpsSerie(String rpsSerie) {
    this.rpsSerie = rpsSerie;
    return this;
  }

   /**
   * set name identifier for rps number sequency.
   * @return rpsSerie
  **/
  @ApiModelProperty(example = "null", value = "set name identifier for rps number sequency.")
  public String getRpsSerie() {
    return rpsSerie;
  }

  public void setRpsSerie(String rpsSerie) {
    this.rpsSerie = rpsSerie;
  }

  public SalesHeaderIn discriminationIn(String discriminationIn) {
    this.discriminationIn = discriminationIn;
    return this;
  }

   /**
   * Service discrimination, free description about service
   * @return discriminationIn
  **/
  @ApiModelProperty(example = "null", value = "Service discrimination, free description about service")
  public String getDiscriminationIn() {
    return discriminationIn;
  }

  public void setDiscriminationIn(String discriminationIn) {
    this.discriminationIn = discriminationIn;
  }

  public SalesHeaderIn entity(SalesEntity entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @ApiModelProperty(example = "null", value = "")
  public SalesEntity getEntity() {
    return entity;
  }

  public void setEntity(SalesEntity entity) {
    this.entity = entity;
  }

  public SalesHeaderIn payment(SalesHeaderInPayment payment) {
    this.payment = payment;
    return this;
  }

   /**
   * Get payment
   * @return payment
  **/
  @ApiModelProperty(example = "null", value = "")
  public SalesHeaderInPayment getPayment() {
    return payment;
  }

  public void setPayment(SalesHeaderInPayment payment) {
    this.payment = payment;
  }

  public SalesHeaderIn taxesConfig(SalesTaxesConfig taxesConfig) {
    this.taxesConfig = taxesConfig;
    return this;
  }

   /**
   * Get taxesConfig
   * @return taxesConfig
  **/
  @ApiModelProperty(example = "null", value = "")
  public SalesTaxesConfig getTaxesConfig() {
    return taxesConfig;
  }

  public void setTaxesConfig(SalesTaxesConfig taxesConfig) {
    this.taxesConfig = taxesConfig;
  }

  public SalesHeaderIn defaultLocations(SalesDefaultLocations defaultLocations) {
    this.defaultLocations = defaultLocations;
    return this;
  }

   /**
   * Get defaultLocations
   * @return defaultLocations
  **/
  @ApiModelProperty(example = "null", value = "")
  public SalesDefaultLocations getDefaultLocations() {
    return defaultLocations;
  }

  public void setDefaultLocations(SalesDefaultLocations defaultLocations) {
    this.defaultLocations = defaultLocations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesHeaderIn salesHeaderIn = (SalesHeaderIn) o;
    return Objects.equals(this.transactionType, salesHeaderIn.transactionType) &&
        Objects.equals(this.documentCode, salesHeaderIn.documentCode) &&
        Objects.equals(this.currency, salesHeaderIn.currency) &&
        Objects.equals(this.transactionDate, salesHeaderIn.transactionDate) &&
        Objects.equals(this.taxCalculationDate, salesHeaderIn.taxCalculationDate) &&
        Objects.equals(this.companyLocation, salesHeaderIn.companyLocation) &&
        Objects.equals(this.purchaseOrderNumber, salesHeaderIn.purchaseOrderNumber) &&
        Objects.equals(this.rpsNumber, salesHeaderIn.rpsNumber) &&
        Objects.equals(this.rpsSerie, salesHeaderIn.rpsSerie) &&
        Objects.equals(this.discriminationIn, salesHeaderIn.discriminationIn) &&
        Objects.equals(this.entity, salesHeaderIn.entity) &&
        Objects.equals(this.payment, salesHeaderIn.payment) &&
        Objects.equals(this.taxesConfig, salesHeaderIn.taxesConfig) &&
        Objects.equals(this.defaultLocations, salesHeaderIn.defaultLocations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionType, documentCode, currency, transactionDate, taxCalculationDate, companyLocation, purchaseOrderNumber, rpsNumber, rpsSerie, discriminationIn, entity, payment, taxesConfig, defaultLocations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesHeaderIn {\n");
    
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    documentCode: ").append(toIndentedString(documentCode)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    taxCalculationDate: ").append(toIndentedString(taxCalculationDate)).append("\n");
    sb.append("    companyLocation: ").append(toIndentedString(companyLocation)).append("\n");
    sb.append("    purchaseOrderNumber: ").append(toIndentedString(purchaseOrderNumber)).append("\n");
    sb.append("    rpsNumber: ").append(toIndentedString(rpsNumber)).append("\n");
    sb.append("    rpsSerie: ").append(toIndentedString(rpsSerie)).append("\n");
    sb.append("    discriminationIn: ").append(toIndentedString(discriminationIn)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    payment: ").append(toIndentedString(payment)).append("\n");
    sb.append("    taxesConfig: ").append(toIndentedString(taxesConfig)).append("\n");
    sb.append("    defaultLocations: ").append(toIndentedString(defaultLocations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

