/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * FuelPumpNumber
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-06T17:54:07.550Z")
public class FuelPumpNumber {
  @SerializedName("nozzleNumberFuelSupply")
  private String nozzleNumberFuelSupply = null;

  @SerializedName("fuelPumpNumber")
  private String fuelPumpNumber = null;

  @SerializedName("fuelTankNumber")
  private String fuelTankNumber = null;

  @SerializedName("startValueOfPumpNumber")
  private Double startValueOfPumpNumber = null;

  @SerializedName("endValueOfPumpNumber")
  private Double endValueOfPumpNumber = null;

  public FuelPumpNumber nozzleNumberFuelSupply(String nozzleNumberFuelSupply) {
    this.nozzleNumberFuelSupply = nozzleNumberFuelSupply;
    return this;
  }

   /**
   * Identification number of nozzle used in the dispensing process.   Numero de identificação do Bico utilizado no abastecimento 
   * @return nozzleNumberFuelSupply
  **/
  @ApiModelProperty(example = "null", required = true, value = "Identification number of nozzle used in the dispensing process.   Numero de identificação do Bico utilizado no abastecimento ")
  public String getNozzleNumberFuelSupply() {
    return nozzleNumberFuelSupply;
  }

  public void setNozzleNumberFuelSupply(String nozzleNumberFuelSupply) {
    this.nozzleNumberFuelSupply = nozzleNumberFuelSupply;
  }

  public FuelPumpNumber fuelPumpNumber(String fuelPumpNumber) {
    this.fuelPumpNumber = fuelPumpNumber;
    return this;
  }

   /**
   * Identification number of the Pump connect to the used nozzle.   Numero de identificação da bomba ao qual o bico está interligado 
   * @return fuelPumpNumber
  **/
  @ApiModelProperty(example = "null", required = true, value = "Identification number of the Pump connect to the used nozzle.   Numero de identificação da bomba ao qual o bico está interligado ")
  public String getFuelPumpNumber() {
    return fuelPumpNumber;
  }

  public void setFuelPumpNumber(String fuelPumpNumber) {
    this.fuelPumpNumber = fuelPumpNumber;
  }

  public FuelPumpNumber fuelTankNumber(String fuelTankNumber) {
    this.fuelTankNumber = fuelTankNumber;
    return this;
  }

   /**
   * Identification number of the Pump connect to the used nozzle.   Numero de identificação da bomba ao qual o bico está interligado 
   * @return fuelTankNumber
  **/
  @ApiModelProperty(example = "null", required = true, value = "Identification number of the Pump connect to the used nozzle.   Numero de identificação da bomba ao qual o bico está interligado ")
  public String getFuelTankNumber() {
    return fuelTankNumber;
  }

  public void setFuelTankNumber(String fuelTankNumber) {
    this.fuelTankNumber = fuelTankNumber;
  }

  public FuelPumpNumber startValueOfPumpNumber(Double startValueOfPumpNumber) {
    this.startValueOfPumpNumber = startValueOfPumpNumber;
    return this;
  }

   /**
   * Valor do Encerrante no ínicio do abastecimento.  Reading of auto-counter (encerrante) at the start of the refueling/dispensing. This decimal 12 integers and 3 decimals - R$ 
   * @return startValueOfPumpNumber
  **/
  @ApiModelProperty(example = "null", required = true, value = "Valor do Encerrante no ínicio do abastecimento.  Reading of auto-counter (encerrante) at the start of the refueling/dispensing. This decimal 12 integers and 3 decimals - R$ ")
  public Double getStartValueOfPumpNumber() {
    return startValueOfPumpNumber;
  }

  public void setStartValueOfPumpNumber(Double startValueOfPumpNumber) {
    this.startValueOfPumpNumber = startValueOfPumpNumber;
  }

  public FuelPumpNumber endValueOfPumpNumber(Double endValueOfPumpNumber) {
    this.endValueOfPumpNumber = endValueOfPumpNumber;
    return this;
  }

   /**
   * Valor do Encerrante no final do abastecimento.  Reading of auto-counter (encerrante) at the end of the refueling/dispensing. This decimal 12 integers and 3 decimals - R$ 
   * @return endValueOfPumpNumber
  **/
  @ApiModelProperty(example = "null", required = true, value = "Valor do Encerrante no final do abastecimento.  Reading of auto-counter (encerrante) at the end of the refueling/dispensing. This decimal 12 integers and 3 decimals - R$ ")
  public Double getEndValueOfPumpNumber() {
    return endValueOfPumpNumber;
  }

  public void setEndValueOfPumpNumber(Double endValueOfPumpNumber) {
    this.endValueOfPumpNumber = endValueOfPumpNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FuelPumpNumber fuelPumpNumber = (FuelPumpNumber) o;
    return Objects.equals(this.nozzleNumberFuelSupply, fuelPumpNumber.nozzleNumberFuelSupply) &&
        Objects.equals(this.fuelPumpNumber, fuelPumpNumber.fuelPumpNumber) &&
        Objects.equals(this.fuelTankNumber, fuelPumpNumber.fuelTankNumber) &&
        Objects.equals(this.startValueOfPumpNumber, fuelPumpNumber.startValueOfPumpNumber) &&
        Objects.equals(this.endValueOfPumpNumber, fuelPumpNumber.endValueOfPumpNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nozzleNumberFuelSupply, fuelPumpNumber, fuelTankNumber, startValueOfPumpNumber, endValueOfPumpNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FuelPumpNumber {\n");
    
    sb.append("    nozzleNumberFuelSupply: ").append(toIndentedString(nozzleNumberFuelSupply)).append("\n");
    sb.append("    fuelPumpNumber: ").append(toIndentedString(fuelPumpNumber)).append("\n");
    sb.append("    fuelTankNumber: ").append(toIndentedString(fuelTankNumber)).append("\n");
    sb.append("    startValueOfPumpNumber: ").append(toIndentedString(startValueOfPumpNumber)).append("\n");
    sb.append("    endValueOfPumpNumber: ").append(toIndentedString(endValueOfPumpNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

