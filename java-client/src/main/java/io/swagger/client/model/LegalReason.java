/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LegalReasonReferencedProcesses;
import io.swagger.client.model.LegalReasonTaxScope;
import java.util.ArrayList;
import java.util.List;

/**
 * Legal Reason (Fundamentação Legal): - &#39;name&#39; - &#39;description&#39; - &#39;scope&#39; 
 */
@ApiModel(description = "Legal Reason (Fundamentação Legal): - 'name' - 'description' - 'scope' ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-06T17:54:07.550Z")
public class LegalReason {
  @SerializedName("id")
  private String id = null;

  /**
   * Message scope. May be one of these. general - This message is not linked to any entity (agast/process/cfop) and will be applied to any item in a transacition. (Esta mensagem tem escopo geral, nao está relacionadas diretamente qualquer objeto.); linkedTo - This message is linked to an entity, and its processing will only occur when the context involves it. (Esta mensagens estão relacionadas diretamente a algum objeto como um AGAST por exemplo, um Processo ou uma CFOP.); 
   */
  public enum ScopeEnum {
    @SerializedName("general")
    GENERAL("general"),
    
    @SerializedName("linkedTo")
    LINKEDTO("linkedTo");

    private String value;

    ScopeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("scope")
  private ScopeEnum scope = null;

  @SerializedName("disable")
  private Boolean disable = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("legalCode")
  private String legalCode = null;

  /**
   * Optional. Show this message when used in Invoice (NFe, NFCe, others...). Where to show this.
   */
  public enum ShowInInvoiceEnum {
    @SerializedName("complementaryInfoMessage")
    COMPLEMENTARYINFOMESSAGE("complementaryInfoMessage"),
    
    @SerializedName("fiscalInfoMessage")
    FISCALINFOMESSAGE("fiscalInfoMessage"),
    
    @SerializedName("itemInfoMessage")
    ITEMINFOMESSAGE("itemInfoMessage");

    private String value;

    ShowInInvoiceEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("showInInvoice")
  private ShowInInvoiceEnum showInInvoice = null;

  @SerializedName("referencedProcesses")
  private List<LegalReasonReferencedProcesses> referencedProcesses = new ArrayList<LegalReasonReferencedProcesses>();

  @SerializedName("taxScope")
  private LegalReasonTaxScope taxScope = null;

  public LegalReason id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Internal ID
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Internal ID")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public LegalReason scope(ScopeEnum scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Message scope. May be one of these. general - This message is not linked to any entity (agast/process/cfop) and will be applied to any item in a transacition. (Esta mensagem tem escopo geral, nao está relacionadas diretamente qualquer objeto.); linkedTo - This message is linked to an entity, and its processing will only occur when the context involves it. (Esta mensagens estão relacionadas diretamente a algum objeto como um AGAST por exemplo, um Processo ou uma CFOP.); 
   * @return scope
  **/
  @ApiModelProperty(example = "null", required = true, value = "Message scope. May be one of these. general - This message is not linked to any entity (agast/process/cfop) and will be applied to any item in a transacition. (Esta mensagem tem escopo geral, nao está relacionadas diretamente qualquer objeto.); linkedTo - This message is linked to an entity, and its processing will only occur when the context involves it. (Esta mensagens estão relacionadas diretamente a algum objeto como um AGAST por exemplo, um Processo ou uma CFOP.); ")
  public ScopeEnum getScope() {
    return scope;
  }

  public void setScope(ScopeEnum scope) {
    this.scope = scope;
  }

  public LegalReason disable(Boolean disable) {
    this.disable = disable;
    return this;
  }

   /**
   * Set this message as no longer valid
   * @return disable
  **/
  @ApiModelProperty(example = "null", value = "Set this message as no longer valid")
  public Boolean getDisable() {
    return disable;
  }

  public void setDisable(Boolean disable) {
    this.disable = disable;
  }

  public LegalReason description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Legal reason textual description;
   * @return description
  **/
  @ApiModelProperty(example = "null", required = true, value = "Legal reason textual description;")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public LegalReason name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Short name to this message
   * @return name
  **/
  @ApiModelProperty(example = "null", required = true, value = "Short name to this message")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public LegalReason legalCode(String legalCode) {
    this.legalCode = legalCode;
    return this;
  }

   /**
   * this field inform the official code number
   * @return legalCode
  **/
  @ApiModelProperty(example = "null", value = "this field inform the official code number")
  public String getLegalCode() {
    return legalCode;
  }

  public void setLegalCode(String legalCode) {
    this.legalCode = legalCode;
  }

  public LegalReason showInInvoice(ShowInInvoiceEnum showInInvoice) {
    this.showInInvoice = showInInvoice;
    return this;
  }

   /**
   * Optional. Show this message when used in Invoice (NFe, NFCe, others...). Where to show this.
   * @return showInInvoice
  **/
  @ApiModelProperty(example = "null", value = "Optional. Show this message when used in Invoice (NFe, NFCe, others...). Where to show this.")
  public ShowInInvoiceEnum getShowInInvoice() {
    return showInInvoice;
  }

  public void setShowInInvoice(ShowInInvoiceEnum showInInvoice) {
    this.showInInvoice = showInInvoice;
  }

  public LegalReason referencedProcesses(List<LegalReasonReferencedProcesses> referencedProcesses) {
    this.referencedProcesses = referencedProcesses;
    return this;
  }

  public LegalReason addReferencedProcessesItem(LegalReasonReferencedProcesses referencedProcessesItem) {
    this.referencedProcesses.add(referencedProcessesItem);
    return this;
  }

   /**
   * Referenced Process
   * @return referencedProcesses
  **/
  @ApiModelProperty(example = "null", value = "Referenced Process")
  public List<LegalReasonReferencedProcesses> getReferencedProcesses() {
    return referencedProcesses;
  }

  public void setReferencedProcesses(List<LegalReasonReferencedProcesses> referencedProcesses) {
    this.referencedProcesses = referencedProcesses;
  }

  public LegalReason taxScope(LegalReasonTaxScope taxScope) {
    this.taxScope = taxScope;
    return this;
  }

   /**
   * Get taxScope
   * @return taxScope
  **/
  @ApiModelProperty(example = "null", value = "")
  public LegalReasonTaxScope getTaxScope() {
    return taxScope;
  }

  public void setTaxScope(LegalReasonTaxScope taxScope) {
    this.taxScope = taxScope;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LegalReason legalReason = (LegalReason) o;
    return Objects.equals(this.id, legalReason.id) &&
        Objects.equals(this.scope, legalReason.scope) &&
        Objects.equals(this.disable, legalReason.disable) &&
        Objects.equals(this.description, legalReason.description) &&
        Objects.equals(this.name, legalReason.name) &&
        Objects.equals(this.legalCode, legalReason.legalCode) &&
        Objects.equals(this.showInInvoice, legalReason.showInInvoice) &&
        Objects.equals(this.referencedProcesses, legalReason.referencedProcesses) &&
        Objects.equals(this.taxScope, legalReason.taxScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, scope, disable, description, name, legalCode, showInInvoice, referencedProcesses, taxScope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LegalReason {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    disable: ").append(toIndentedString(disable)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    legalCode: ").append(toIndentedString(legalCode)).append("\n");
    sb.append("    showInInvoice: ").append(toIndentedString(showInInvoice)).append("\n");
    sb.append("    referencedProcesses: ").append(toIndentedString(referencedProcesses)).append("\n");
    sb.append("    taxScope: ").append(toIndentedString(taxScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

