/*
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.NRefRefECF;
import io.swagger.client.model.NRefRefFarmerNF;
import io.swagger.client.model.NRefRefNF;

/**
 * Referenced Invoices The invoice can be one of this types, - &#39;refNFe - Eletronic Invoice&#39; - &#39;refCTE - Transport Invoice&#39; - &#39;refECF - Reatail Cupom&#39; - &#39;refNF  - Invoice model 1 or 1A&#39; - &#39;refFarmerNF - farmer invoice&#39; 
 */
@ApiModel(description = "Referenced Invoices The invoice can be one of this types, - 'refNFe - Eletronic Invoice' - 'refCTE - Transport Invoice' - 'refECF - Reatail Cupom' - 'refNF  - Invoice model 1 or 1A' - 'refFarmerNF - farmer invoice' ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-06T17:54:07.550Z")
public class NRef {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    @SerializedName("refNFe")
    REFNFE("refNFe"),
    
    @SerializedName("refCTE")
    REFCTE("refCTE"),
    
    @SerializedName("refECF")
    REFECF("refECF"),
    
    @SerializedName("refNF")
    REFNF("refNF"),
    
    @SerializedName("refFarmerNF")
    REFFARMERNF("refFarmerNF");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("refNFe")
  private String refNFe = null;

  @SerializedName("refCTe")
  private String refCTe = null;

  @SerializedName("refECF")
  private NRefRefECF refECF = null;

  @SerializedName("refNF")
  private NRefRefNF refNF = null;

  @SerializedName("refFarmerNF")
  private NRefRefFarmerNF refFarmerNF = null;

  public NRef type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public NRef refNFe(String refNFe) {
    this.refNFe = refNFe;
    return this;
  }

   /**
   * Get refNFe
   * @return refNFe
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getRefNFe() {
    return refNFe;
  }

  public void setRefNFe(String refNFe) {
    this.refNFe = refNFe;
  }

  public NRef refCTe(String refCTe) {
    this.refCTe = refCTe;
    return this;
  }

   /**
   * Get refCTe
   * @return refCTe
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getRefCTe() {
    return refCTe;
  }

  public void setRefCTe(String refCTe) {
    this.refCTe = refCTe;
  }

  public NRef refECF(NRefRefECF refECF) {
    this.refECF = refECF;
    return this;
  }

   /**
   * Get refECF
   * @return refECF
  **/
  @ApiModelProperty(example = "null", value = "")
  public NRefRefECF getRefECF() {
    return refECF;
  }

  public void setRefECF(NRefRefECF refECF) {
    this.refECF = refECF;
  }

  public NRef refNF(NRefRefNF refNF) {
    this.refNF = refNF;
    return this;
  }

   /**
   * Get refNF
   * @return refNF
  **/
  @ApiModelProperty(example = "null", value = "")
  public NRefRefNF getRefNF() {
    return refNF;
  }

  public void setRefNF(NRefRefNF refNF) {
    this.refNF = refNF;
  }

  public NRef refFarmerNF(NRefRefFarmerNF refFarmerNF) {
    this.refFarmerNF = refFarmerNF;
    return this;
  }

   /**
   * Get refFarmerNF
   * @return refFarmerNF
  **/
  @ApiModelProperty(example = "null", value = "")
  public NRefRefFarmerNF getRefFarmerNF() {
    return refFarmerNF;
  }

  public void setRefFarmerNF(NRefRefFarmerNF refFarmerNF) {
    this.refFarmerNF = refFarmerNF;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NRef nref = (NRef) o;
    return Objects.equals(this.type, nref.type) &&
        Objects.equals(this.refNFe, nref.refNFe) &&
        Objects.equals(this.refCTe, nref.refCTe) &&
        Objects.equals(this.refECF, nref.refECF) &&
        Objects.equals(this.refNF, nref.refNF) &&
        Objects.equals(this.refFarmerNF, nref.refFarmerNF);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, refNFe, refCTe, refECF, refNF, refFarmerNF);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NRef {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    refNFe: ").append(toIndentedString(refNFe)).append("\n");
    sb.append("    refCTe: ").append(toIndentedString(refCTe)).append("\n");
    sb.append("    refECF: ").append(toIndentedString(refECF)).append("\n");
    sb.append("    refNF: ").append(toIndentedString(refNF)).append("\n");
    sb.append("    refFarmerNF: ").append(toIndentedString(refFarmerNF)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

