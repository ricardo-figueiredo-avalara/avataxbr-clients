/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SalesCalculatedTax.h
 *
 * 
 */

#ifndef SalesCalculatedTax_H_
#define SalesCalculatedTax_H_


#include "ModelBase.h"

#include "SalesTaxByTypeDetail.h"
#include "SalesTaxByType.h"
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SalesCalculatedTax
    : public ModelBase
{
public:
    SalesCalculatedTax();
    virtual ~SalesCalculatedTax();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SalesCalculatedTax members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SalesTaxByType> getTaxByType() const;
    void setTaxByType(std::shared_ptr<SalesTaxByType> value);
    bool taxByTypeIsSet() const;
    void unsetTaxByType();
    /// <summary>
    /// Sum of tax type not VAT (Value Added Tax)
    /// </summary>
    double getTax() const;
    void setTax(double value);
    bool taxIsSet() const;
    void unsetTax();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<SalesTaxByTypeDetail>>& getDetails();
    bool detailsIsSet() const;
    void unsetDetails();

protected:
    std::shared_ptr<SalesTaxByType> m_TaxByType;
    bool m_TaxByTypeIsSet;
double m_Tax;
    bool m_TaxIsSet;
std::vector<std::shared_ptr<SalesTaxByTypeDetail>> m_Details;
    bool m_DetailsIsSet;
};

}
}
}
}

#endif /* SalesCalculatedTax_H_ */
