/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * NRef_refECF.h
 *
 * 
 */

#ifndef NRef_refECF_H_
#define NRef_refECF_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  NRef_refECF
    : public ModelBase
{
public:
    NRef_refECF();
    virtual ~NRef_refECF();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// NRef_refECF members

    /// <summary>
    /// ECF Sequential number that generated Cupom attached to NFe informar o número de ordem seqüencial do ECF que emitiu o Cupom Fiscal vinculado à NF-e 
    /// </summary>
    utility::string_t getNECF() const;
    void setNECF(utility::string_t value);
        /// <summary>
    /// Operational counter number attached to NFe Informar o Número do Contador de Ordem de Operação - COO vinculado à NF-e 
    /// </summary>
    utility::string_t getNCOO() const;
    void setNCOO(utility::string_t value);
        /// <summary>
    /// Fiscal document model - &#39;2B&#39; # coupon tax not ECF - &#39;2C&#39; # PDV coupon tax - &#39;2D&#39; # ECF coupon tax 
    /// </summary>
    utility::string_t getModECF() const;
    void setModECF(utility::string_t value);
    
protected:
    utility::string_t m_NECF;
    utility::string_t m_NCOO;
    utility::string_t m_ModECF;
    };

}
}
}
}

#endif /* NRef_refECF_H_ */
