/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * LineForGoods_icmsTaxRelief.h
 *
 * 
 */

#ifndef LineForGoods_icmsTaxRelief_H_
#define LineForGoods_icmsTaxRelief_H_


#include "ModelBase.h"


namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  LineForGoods_icmsTaxRelief
    : public ModelBase
{
public:
    LineForGoods_icmsTaxRelief();
    virtual ~LineForGoods_icmsTaxRelief();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// LineForGoods_icmsTaxRelief members

    /// <summary>
    /// When item transaction subject to desoneration, this is the reason code - 1 # Táxi; - 3 # Produtor Agropecuário; - 4 # Frotista/Locadora; - 5 # Diplomático/Consular; - 6 # Utilitários e Motocicletas da Amazônia Ocidental e Áreas de Livre Comércio (Resolução 714/88 e 790/94 – CONTRAN e suas alterações); - 7 # SUFRAMA; - 8 # Venda a órgão Público; - 9 # Outros - 10 # Deficiente Condutor - 11 # Deficiente não condutor - 12 # Fomento agropecuário - 16 # Olimpíadas Rio 2016 
    /// </summary>
    int32_t getIcmsTaxReliefReasonCode() const;
    void setIcmsTaxReliefReasonCode(int32_t value);
        /// <summary>
    /// ICMS Tax base rate discount  (desconto na base do ICMS referetne a desoneração)
    /// </summary>
    double getIcmsReliefTaxRate() const;
    void setIcmsReliefTaxRate(double value);
    bool icmsReliefTaxRateIsSet() const;
    void unsetIcmsReliefTaxRate();
    /// <summary>
    /// Amount for Icms Relief (desoneração)
    /// </summary>
    double getIcmsReliefTaxAmount() const;
    void setIcmsReliefTaxAmount(double value);
    bool icmsReliefTaxAmountIsSet() const;
    void unsetIcmsReliefTaxAmount();

protected:
    int32_t m_IcmsTaxReliefReasonCode;
    double m_IcmsReliefTaxRate;
    bool m_IcmsReliefTaxRateIsSet;
double m_IcmsReliefTaxAmount;
    bool m_IcmsReliefTaxAmountIsSet;
};

}
}
}
}

#endif /* LineForGoods_icmsTaxRelief_H_ */
