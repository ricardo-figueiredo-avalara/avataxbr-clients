/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * ItemSimple.h
 *
 * 
 */

#ifndef ItemSimple_H_
#define ItemSimple_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "UUID.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ItemSimple
    : public ModelBase
{
public:
    ItemSimple();
    virtual ~ItemSimple();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ItemSimple members

    /// <summary>
    /// Company ID
    /// </summary>
    std::shared_ptr<UUID> getCompanyId() const;
    void setCompanyId(std::shared_ptr<UUID> value);
        /// <summary>
    /// ERP Code
    /// </summary>
    utility::string_t getCode() const;
    void setCode(utility::string_t value);
        /// <summary>
    /// Agast Code
    /// </summary>
    utility::string_t getAgast() const;
    void setAgast(utility::string_t value);
        /// <summary>
    /// Item Description
    /// </summary>
    utility::string_t getDescription() const;
    void setDescription(utility::string_t value);
    bool descriptionIsSet() const;
    void unsetDescription();

protected:
    std::shared_ptr<UUID> m_CompanyId;
    utility::string_t m_Code;
    utility::string_t m_Agast;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
};

}
}
}
}

#endif /* ItemSimple_H_ */
