/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "Inline_response_200_2.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

Inline_response_200_2::Inline_response_200_2()
{
    m_CompanyId = U("");
    m_CompanyIdIsSet = false;
    
}

Inline_response_200_2::~Inline_response_200_2()
{
}

void Inline_response_200_2::validate()
{
    // TODO: implement validation
}

web::json::value Inline_response_200_2::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_CompanyIdIsSet)
    {
        val[U("companyId")] = ModelBase::toJson(m_CompanyId);
    }
    

    return val;
}

void Inline_response_200_2::fromJson(web::json::value& val)
{
    if(val.has_field(U("companyId")))
    {
        setCompanyId(ModelBase::stringFromJson(val[U("companyId")]));
        
    }
    
}

void Inline_response_200_2::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(m_CompanyIdIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("companyId"), m_CompanyId));
        
    }
    
}

void Inline_response_200_2::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(multipart->hasContent(U("companyId")))
    {
        setCompanyId(ModelBase::stringFromHttpContent(multipart->getContent(U("companyId"))));
        
    }
    
}


utility::string_t Inline_response_200_2::getCompanyId() const
{
    return m_CompanyId;
}
void Inline_response_200_2::setCompanyId(utility::string_t value)
{
    m_CompanyId = value;
    m_CompanyIdIsSet = true;
}
bool Inline_response_200_2::companyIdIsSet() const
{
    return m_CompanyIdIsSet;
}
void Inline_response_200_2::unsetCompanyId()
{
    m_CompanyIdIsSet = false;
}

}
}
}
}

