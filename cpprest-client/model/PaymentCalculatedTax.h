/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * PaymentCalculatedTax.h
 *
 * Structure with value for each tax withhold value of this line
 */

#ifndef PaymentCalculatedTax_H_
#define PaymentCalculatedTax_H_


#include "ModelBase.h"

#include "PaymentTaxByType.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Structure with value for each tax withhold value of this line
/// </summary>
class  PaymentCalculatedTax
    : public ModelBase
{
public:
    PaymentCalculatedTax();
    virtual ~PaymentCalculatedTax();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PaymentCalculatedTax members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PaymentTaxByType> getTaxByType() const;
    void setTaxByType(std::shared_ptr<PaymentTaxByType> value);
    bool taxByTypeIsSet() const;
    void unsetTaxByType();
    /// <summary>
    /// Sum of tax type not VAT (Value Added Tax)
    /// </summary>
    double getTax() const;
    void setTax(double value);
    bool taxIsSet() const;
    void unsetTax();

protected:
    std::shared_ptr<PaymentTaxByType> m_TaxByType;
    bool m_TaxByTypeIsSet;
double m_Tax;
    bool m_TaxIsSet;
};

}
}
}
}

#endif /* PaymentCalculatedTax_H_ */
