/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * ExportInfo.h
 *
 * Export information
 */

#ifndef ExportInfo_H_
#define ExportInfo_H_


#include "ModelBase.h"

#include "StateEnum.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Export information
/// </summary>
class  ExportInfo
    : public ModelBase
{
public:
    ExportInfo();
    virtual ~ExportInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ExportInfo members

    /// <summary>
    /// shipping state
    /// </summary>
    std::shared_ptr<StateEnum> getShippingState() const;
    void setShippingState(std::shared_ptr<StateEnum> value);
        /// <summary>
    /// shipping place
    /// </summary>
    utility::string_t getPlace() const;
    void setPlace(utility::string_t value);
        /// <summary>
    /// description of shipping place
    /// </summary>
    utility::string_t getPlaceDescription() const;
    void setPlaceDescription(utility::string_t value);
    bool placeDescriptionIsSet() const;
    void unsetPlaceDescription();

protected:
    std::shared_ptr<StateEnum> m_ShippingState;
    utility::string_t m_Place;
    utility::string_t m_PlaceDescription;
    bool m_PlaceDescriptionIsSet;
};

}
}
}
}

#endif /* ExportInfo_H_ */
