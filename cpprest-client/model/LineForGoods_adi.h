/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * LineForGoods_adi.h
 *
 * 
 */

#ifndef LineForGoods_adi_H_
#define LineForGoods_adi_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  LineForGoods_adi
    : public ModelBase
{
public:
    LineForGoods_adi();
    virtual ~LineForGoods_adi();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// LineForGoods_adi members

    /// <summary>
    /// aditional sequence number (1 to 100)
    /// </summary>
    int32_t getAddNumber() const;
    void setAddNumber(int32_t value);
        /// <summary>
    /// sequential item number for this adi, sequence number (1 to 999)
    /// </summary>
    int32_t getSequentialNumber() const;
    void setSequentialNumber(int32_t value);
        /// <summary>
    /// Manufatorer erp internal code
    /// </summary>
    utility::string_t getManufacturerCode() const;
    void setManufacturerCode(utility::string_t value);
        /// <summary>
    /// This decimal 13 integers and 2 decimals, aditional adi discount
    /// </summary>
    double getAdiDiscount() const;
    void setAdiDiscount(double value);
    bool adiDiscountIsSet() const;
    void unsetAdiDiscount();
    /// <summary>
    /// Drawback number
    /// </summary>
    utility::string_t getDrawbackNumber() const;
    void setDrawbackNumber(utility::string_t value);
    bool drawbackNumberIsSet() const;
    void unsetDrawbackNumber();

protected:
    int32_t m_AddNumber;
    int32_t m_SequentialNumber;
    utility::string_t m_ManufacturerCode;
    double m_AdiDiscount;
    bool m_AdiDiscountIsSet;
utility::string_t m_DrawbackNumber;
    bool m_DrawbackNumberIsSet;
};

}
}
}
}

#endif /* LineForGoods_adi_H_ */
