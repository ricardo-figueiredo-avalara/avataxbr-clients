/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * ItemCpom.h
 *
 * 
 */

#ifndef ItemCpom_H_
#define ItemCpom_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "UUID.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  ItemCpom
    : public ModelBase
{
public:
    ItemCpom();
    virtual ~ItemCpom();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ItemCpom members

    /// <summary>
    /// Company ID
    /// </summary>
    std::shared_ptr<UUID> getCompanyId() const;
    void setCompanyId(std::shared_ptr<UUID> value);
        /// <summary>
    /// IBGE city code
    /// </summary>
    utility::string_t getCityCode() const;
    void setCityCode(utility::string_t value);
        /// <summary>
    /// ERP Code
    /// </summary>
    utility::string_t getItemCode() const;
    void setItemCode(utility::string_t value);
        /// <summary>
    /// Code in City
    /// </summary>
    utility::string_t getCode() const;
    void setCode(utility::string_t value);
    
protected:
    std::shared_ptr<UUID> m_CompanyId;
    utility::string_t m_CityCode;
    utility::string_t m_ItemCode;
    utility::string_t m_Code;
    };

}
}
}
}

#endif /* ItemCpom_H_ */
