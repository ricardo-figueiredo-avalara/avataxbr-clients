/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * TransactionForSefazGoods.h
 *
 * 
 */

#ifndef TransactionForSefazGoods_H_
#define TransactionForSefazGoods_H_


#include "ModelBase.h"

#include "LineForSefazGoods.h"
#include "CalculatedTaxSummaryForGoods.h"
#include "HeaderForGoods.h"
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  TransactionForSefazGoods
    : public ModelBase
{
public:
    TransactionForSefazGoods();
    virtual ~TransactionForSefazGoods();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// TransactionForSefazGoods members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<HeaderForGoods> getHeader() const;
    void setHeader(std::shared_ptr<HeaderForGoods> value);
    bool headerIsSet() const;
    void unsetHeader();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<LineForSefazGoods>>& getLines();
    bool linesIsSet() const;
    void unsetLines();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CalculatedTaxSummaryForGoods> getCalculatedTaxSummary() const;
    void setCalculatedTaxSummary(std::shared_ptr<CalculatedTaxSummaryForGoods> value);
    bool calculatedTaxSummaryIsSet() const;
    void unsetCalculatedTaxSummary();

protected:
    std::shared_ptr<HeaderForGoods> m_Header;
    bool m_HeaderIsSet;
std::vector<std::shared_ptr<LineForSefazGoods>> m_Lines;
    bool m_LinesIsSet;
std::shared_ptr<CalculatedTaxSummaryForGoods> m_CalculatedTaxSummary;
    bool m_CalculatedTaxSummaryIsSet;
};

}
}
}
}

#endif /* TransactionForSefazGoods_H_ */
