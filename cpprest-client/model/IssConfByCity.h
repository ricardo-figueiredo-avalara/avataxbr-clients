/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * IssConfByCity.h
 *
 * 
 */

#ifndef IssConfByCity_H_
#define IssConfByCity_H_


#include "ModelBase.h"

#include "IssConfServiceList.h"
#include "StateEnum.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  IssConfByCity
    : public ModelBase
{
public:
    IssConfByCity();
    virtual ~IssConfByCity();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// IssConfByCity members

    /// <summary>
    /// City Code (IBGE)
    /// </summary>
    int64_t getCityCode() const;
    void setCityCode(int64_t value);
        /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<StateEnum> getState() const;
    void setState(std::shared_ptr<StateEnum> value);
    bool stateIsSet() const;
    void unsetState();
    /// <summary>
    /// 
    /// </summary>
    bool getIssWhDestOtherCities() const;
    void setIssWhDestOtherCities(bool value);
    bool issWhDestOtherCitiesIsSet() const;
    void unsetIssWhDestOtherCities();
    /// <summary>
    /// 
    /// </summary>
    bool getIssWhDestSameCity() const;
    void setIssWhDestSameCity(bool value);
    bool issWhDestSameCityIsSet() const;
    void unsetIssWhDestSameCity();
    /// <summary>
    /// 
    /// </summary>
    bool getIssWhOriginUnregSeller() const;
    void setIssWhOriginUnregSeller(bool value);
    bool issWhOriginUnregSellerIsSet() const;
    void unsetIssWhOriginUnregSeller();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<IssConfServiceList>>& getServiceList();
    bool serviceListIsSet() const;
    void unsetServiceList();

protected:
    int64_t m_CityCode;
    utility::string_t m_Name;
    bool m_NameIsSet;
std::shared_ptr<StateEnum> m_State;
    bool m_StateIsSet;
bool m_IssWhDestOtherCities;
    bool m_IssWhDestOtherCitiesIsSet;
bool m_IssWhDestSameCity;
    bool m_IssWhDestSameCityIsSet;
bool m_IssWhOriginUnregSeller;
    bool m_IssWhOriginUnregSellerIsSet;
std::vector<std::shared_ptr<IssConfServiceList>> m_ServiceList;
    bool m_ServiceListIsSet;
};

}
}
}
}

#endif /* IssConfByCity_H_ */
