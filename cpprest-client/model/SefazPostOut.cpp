/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "SefazPostOut.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

SefazPostOut::SefazPostOut()
{
    m_Key = U("");
    m_KeyIsSet = false;
    m_DocumentCode = U("");
    m_DocumentCodeIsSet = false;
    m_StatusIsSet = false;
    
}

SefazPostOut::~SefazPostOut()
{
}

void SefazPostOut::validate()
{
    // TODO: implement validation
}

web::json::value SefazPostOut::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_KeyIsSet)
    {
        val[U("key")] = ModelBase::toJson(m_Key);
    }
    if(m_DocumentCodeIsSet)
    {
        val[U("documentCode")] = ModelBase::toJson(m_DocumentCode);
    }
    if(m_StatusIsSet)
    {
        val[U("status")] = ModelBase::toJson(m_Status);
    }
    

    return val;
}

void SefazPostOut::fromJson(web::json::value& val)
{
    if(val.has_field(U("key")))
    {
        setKey(ModelBase::stringFromJson(val[U("key")]));
        
    }
    if(val.has_field(U("documentCode")))
    {
        setDocumentCode(ModelBase::stringFromJson(val[U("documentCode")]));
        
    }
    if(val.has_field(U("status")))
    {
        if(!val[U("status")].is_null())
        {
            std::shared_ptr<SefazInvoiceStatus> newItem(new SefazInvoiceStatus());
            newItem->fromJson(val[U("status")]);
            setStatus( newItem );
        }
        
    }
    
}

void SefazPostOut::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(m_KeyIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("key"), m_Key));
        
    }
    if(m_DocumentCodeIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("documentCode"), m_DocumentCode));
        
    }
    if(m_StatusIsSet)
    {
        if (m_Status.get())
        {
            m_Status->toMultipart(multipart, U("status."));
        }
        
    }
    
}

void SefazPostOut::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(multipart->hasContent(U("key")))
    {
        setKey(ModelBase::stringFromHttpContent(multipart->getContent(U("key"))));
        
    }
    if(multipart->hasContent(U("documentCode")))
    {
        setDocumentCode(ModelBase::stringFromHttpContent(multipart->getContent(U("documentCode"))));
        
    }
    if(multipart->hasContent(U("status")))
    {
        if(multipart->hasContent(U("status")))
        {
            std::shared_ptr<SefazInvoiceStatus> newItem(new SefazInvoiceStatus());
            newItem->fromMultiPart(multipart, U("status."));
            setStatus( newItem );
        }
        
    }
    
}


utility::string_t SefazPostOut::getKey() const
{
    return m_Key;
}
void SefazPostOut::setKey(utility::string_t value)
{
    m_Key = value;
    m_KeyIsSet = true;
}
bool SefazPostOut::keyIsSet() const
{
    return m_KeyIsSet;
}
void SefazPostOut::unsetKey()
{
    m_KeyIsSet = false;
}
utility::string_t SefazPostOut::getDocumentCode() const
{
    return m_DocumentCode;
}
void SefazPostOut::setDocumentCode(utility::string_t value)
{
    m_DocumentCode = value;
    m_DocumentCodeIsSet = true;
}
bool SefazPostOut::documentCodeIsSet() const
{
    return m_DocumentCodeIsSet;
}
void SefazPostOut::unsetDocumentCode()
{
    m_DocumentCodeIsSet = false;
}
std::shared_ptr<SefazInvoiceStatus> SefazPostOut::getStatus() const
{
    return m_Status;
}
void SefazPostOut::setStatus(std::shared_ptr<SefazInvoiceStatus> value)
{
    m_Status = value;
    m_StatusIsSet = true;
}
bool SefazPostOut::statusIsSet() const
{
    return m_StatusIsSet;
}
void SefazPostOut::unsetStatus()
{
    m_StatusIsSet = false;
}

}
}
}
}

