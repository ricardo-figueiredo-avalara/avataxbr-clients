/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SimpleAddress.h
 *
 * 
 */

#ifndef SimpleAddress_H_
#define SimpleAddress_H_


#include "ModelBase.h"

#include "StateEnum.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SimpleAddress
    : public ModelBase
{
public:
    SimpleAddress();
    virtual ~SimpleAddress();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SimpleAddress members

    /// <summary>
    /// Address
    /// </summary>
    utility::string_t getLine1() const;
    void setLine1(utility::string_t value);
        /// <summary>
    /// Number
    /// </summary>
    utility::string_t getLine2() const;
    void setLine2(utility::string_t value);
        /// <summary>
    /// District
    /// </summary>
    utility::string_t getLine3() const;
    void setLine3(utility::string_t value);
        /// <summary>
    /// 
    /// </summary>
    utility::string_t getCity() const;
    void setCity(utility::string_t value);
    bool cityIsSet() const;
    void unsetCity();
    /// <summary>
    /// Brazilian Zip Code
    /// </summary>
    utility::string_t getZipcode() const;
    void setZipcode(utility::string_t value);
        /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<StateEnum> getState() const;
    void setState(std::shared_ptr<StateEnum> value);
    bool stateIsSet() const;
    void unsetState();
    /// <summary>
    /// Use ISO 3166-1 alpha-3 codes
    /// </summary>
    utility::string_t getCountry() const;
    void setCountry(utility::string_t value);
    
protected:
    utility::string_t m_Line1;
    utility::string_t m_Line2;
    utility::string_t m_Line3;
    utility::string_t m_City;
    bool m_CityIsSet;
utility::string_t m_Zipcode;
    std::shared_ptr<StateEnum> m_State;
    bool m_StateIsSet;
utility::string_t m_Country;
    };

}
}
}
}

#endif /* SimpleAddress_H_ */
