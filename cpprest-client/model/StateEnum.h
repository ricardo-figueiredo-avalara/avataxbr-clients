/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * StateEnum.h
 *
 * State Abreviation: - &#39;AC&#39; - &#39;AL&#39; - &#39;AP&#39; - &#39;AM&#39; - &#39;BA&#39; - &#39;CE&#39; - &#39;DF&#39; - &#39;ES&#39; - &#39;GO&#39; - &#39;MA&#39; - &#39;MT&#39; - &#39;MS&#39; - &#39;MG&#39; - &#39;PA&#39; - &#39;PB&#39; - &#39;PR&#39; - &#39;PE&#39; - &#39;PI&#39; - &#39;RJ&#39; - &#39;RN&#39; - &#39;RS&#39; - &#39;RO&#39; - &#39;RR&#39; - &#39;SC&#39; - &#39;SP&#39; - &#39;SE&#39; - &#39;TO&#39; 
 */

#ifndef StateEnum_H_
#define StateEnum_H_


#include "ModelBase.h"


namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// State Abreviation: - &#39;AC&#39; - &#39;AL&#39; - &#39;AP&#39; - &#39;AM&#39; - &#39;BA&#39; - &#39;CE&#39; - &#39;DF&#39; - &#39;ES&#39; - &#39;GO&#39; - &#39;MA&#39; - &#39;MT&#39; - &#39;MS&#39; - &#39;MG&#39; - &#39;PA&#39; - &#39;PB&#39; - &#39;PR&#39; - &#39;PE&#39; - &#39;PI&#39; - &#39;RJ&#39; - &#39;RN&#39; - &#39;RS&#39; - &#39;RO&#39; - &#39;RR&#39; - &#39;SC&#39; - &#39;SP&#39; - &#39;SE&#39; - &#39;TO&#39; 
/// </summary>
class  StateEnum
    : public ModelBase
{
public:
    StateEnum();
    virtual ~StateEnum();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// StateEnum members


protected:
    };

}
}
}
}

#endif /* StateEnum_H_ */
