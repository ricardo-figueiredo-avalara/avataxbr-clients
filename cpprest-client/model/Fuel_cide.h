/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Fuel_cide.h
 *
 * 
 */

#ifndef Fuel_cide_H_
#define Fuel_cide_H_


#include "ModelBase.h"


namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Fuel_cide
    : public ModelBase
{
public:
    Fuel_cide();
    virtual ~Fuel_cide();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Fuel_cide members

    /// <summary>
    /// percentage of natural gas (GLP), this decimal 12 integers and 0 to 4 decimals
    /// </summary>
    double getBaseCalcCIDE() const;
    void setBaseCalcCIDE(double value);
        /// <summary>
    /// percentage of natural gas (GLP), this decimal 11 integers and 0 to 4 decimals - R$
    /// </summary>
    double getRateCIDE() const;
    void setRateCIDE(double value);
        /// <summary>
    /// percentage of natural gas (GLP), this decimal 13 integers and 2 decimals - R$
    /// </summary>
    double getValueCIDE() const;
    void setValueCIDE(double value);
    
protected:
    double m_BaseCalcCIDE;
    double m_RateCIDE;
    double m_ValueCIDE;
    };

}
}
}
}

#endif /* Fuel_cide_H_ */
