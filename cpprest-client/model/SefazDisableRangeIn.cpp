/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "SefazDisableRangeIn.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

SefazDisableRangeIn::SefazDisableRangeIn()
{
    m_CompanyLocation = U("");
    m_CompanyLocationIsSet = false;
    m_TransactionModel = U("");
    m_TransactionModelIsSet = false;
    m_InvoiceSerial = 0;
    m_InvoiceSerialIsSet = false;
    m_YearIsSet = false;
    m_Message = U("");
    m_MessageIsSet = false;
    m_InvoiceNumberInitIsSet = false;
    m_InvoiceNumberEndIsSet = false;
    
}

SefazDisableRangeIn::~SefazDisableRangeIn()
{
}

void SefazDisableRangeIn::validate()
{
    // TODO: implement validation
}

web::json::value SefazDisableRangeIn::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_CompanyLocationIsSet)
    {
        val[U("companyLocation")] = ModelBase::toJson(m_CompanyLocation);
    }
    if(m_TransactionModelIsSet)
    {
        val[U("transactionModel")] = ModelBase::toJson(m_TransactionModel);
    }
    if(m_InvoiceSerialIsSet)
    {
        val[U("invoiceSerial")] = ModelBase::toJson(m_InvoiceSerial);
    }
    if(m_YearIsSet)
    {
        val[U("year")] = ModelBase::toJson(m_Year);
    }
    if(m_MessageIsSet)
    {
        val[U("message")] = ModelBase::toJson(m_Message);
    }
    if(m_InvoiceNumberInitIsSet)
    {
        val[U("invoiceNumberInit")] = ModelBase::toJson(m_InvoiceNumberInit);
    }
    if(m_InvoiceNumberEndIsSet)
    {
        val[U("invoiceNumberEnd")] = ModelBase::toJson(m_InvoiceNumberEnd);
    }
    

    return val;
}

void SefazDisableRangeIn::fromJson(web::json::value& val)
{
    if(val.has_field(U("companyLocation")))
    {
        setCompanyLocation(ModelBase::stringFromJson(val[U("companyLocation")]));
        
    }
    if(val.has_field(U("transactionModel")))
    {
        setTransactionModel(ModelBase::stringFromJson(val[U("transactionModel")]));
        
    }
    if(val.has_field(U("invoiceSerial")))
    {
        setInvoiceSerial(ModelBase::int32_tFromJson(val[U("invoiceSerial")]));
    }
    if(val.has_field(U("year")))
    {
        if(!val[U("year")].is_null())
        {
            std::shared_ptr<Number> newItem(0.0);
            newItem->fromJson(val[U("year")]);
            setYear( newItem );
        }
        
    }
    if(val.has_field(U("message")))
    {
        setMessage(ModelBase::stringFromJson(val[U("message")]));
        
    }
    if(val.has_field(U("invoiceNumberInit")))
    {
        if(!val[U("invoiceNumberInit")].is_null())
        {
            std::shared_ptr<Number> newItem(0.0);
            newItem->fromJson(val[U("invoiceNumberInit")]);
            setInvoiceNumberInit( newItem );
        }
        
    }
    if(val.has_field(U("invoiceNumberEnd")))
    {
        if(!val[U("invoiceNumberEnd")].is_null())
        {
            std::shared_ptr<Number> newItem(0.0);
            newItem->fromJson(val[U("invoiceNumberEnd")]);
            setInvoiceNumberEnd( newItem );
        }
        
    }
    
}

void SefazDisableRangeIn::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(m_CompanyLocationIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("companyLocation"), m_CompanyLocation));
        
    }
    if(m_TransactionModelIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("transactionModel"), m_TransactionModel));
        
    }
    if(m_InvoiceSerialIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("invoiceSerial"), m_InvoiceSerial));
    }
    if(m_YearIsSet)
    {
        if (m_Year.get())
        {
            m_Year->toMultipart(multipart, U("year."));
        }
        
    }
    if(m_MessageIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("message"), m_Message));
        
    }
    if(m_InvoiceNumberInitIsSet)
    {
        if (m_InvoiceNumberInit.get())
        {
            m_InvoiceNumberInit->toMultipart(multipart, U("invoiceNumberInit."));
        }
        
    }
    if(m_InvoiceNumberEndIsSet)
    {
        if (m_InvoiceNumberEnd.get())
        {
            m_InvoiceNumberEnd->toMultipart(multipart, U("invoiceNumberEnd."));
        }
        
    }
    
}

void SefazDisableRangeIn::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(multipart->hasContent(U("companyLocation")))
    {
        setCompanyLocation(ModelBase::stringFromHttpContent(multipart->getContent(U("companyLocation"))));
        
    }
    if(multipart->hasContent(U("transactionModel")))
    {
        setTransactionModel(ModelBase::stringFromHttpContent(multipart->getContent(U("transactionModel"))));
        
    }
    if(multipart->hasContent(U("invoiceSerial")))
    {
        setInvoiceSerial(ModelBase::int32_tFromHttpContent(multipart->getContent(U("invoiceSerial"))));
    }
    if(multipart->hasContent(U("year")))
    {
        if(multipart->hasContent(U("year")))
        {
            std::shared_ptr<Number> newItem(0.0);
            newItem->fromMultiPart(multipart, U("year."));
            setYear( newItem );
        }
        
    }
    if(multipart->hasContent(U("message")))
    {
        setMessage(ModelBase::stringFromHttpContent(multipart->getContent(U("message"))));
        
    }
    if(multipart->hasContent(U("invoiceNumberInit")))
    {
        if(multipart->hasContent(U("invoiceNumberInit")))
        {
            std::shared_ptr<Number> newItem(0.0);
            newItem->fromMultiPart(multipart, U("invoiceNumberInit."));
            setInvoiceNumberInit( newItem );
        }
        
    }
    if(multipart->hasContent(U("invoiceNumberEnd")))
    {
        if(multipart->hasContent(U("invoiceNumberEnd")))
        {
            std::shared_ptr<Number> newItem(0.0);
            newItem->fromMultiPart(multipart, U("invoiceNumberEnd."));
            setInvoiceNumberEnd( newItem );
        }
        
    }
    
}


utility::string_t SefazDisableRangeIn::getCompanyLocation() const
{
    return m_CompanyLocation;
}
void SefazDisableRangeIn::setCompanyLocation(utility::string_t value)
{
    m_CompanyLocation = value;
    m_CompanyLocationIsSet = true;
}
bool SefazDisableRangeIn::companyLocationIsSet() const
{
    return m_CompanyLocationIsSet;
}
void SefazDisableRangeIn::unsetCompanyLocation()
{
    m_CompanyLocationIsSet = false;
}
utility::string_t SefazDisableRangeIn::getTransactionModel() const
{
    return m_TransactionModel;
}
void SefazDisableRangeIn::setTransactionModel(utility::string_t value)
{
    m_TransactionModel = value;
    m_TransactionModelIsSet = true;
}
bool SefazDisableRangeIn::transactionModelIsSet() const
{
    return m_TransactionModelIsSet;
}
void SefazDisableRangeIn::unsetTransactionModel()
{
    m_TransactionModelIsSet = false;
}
int32_t SefazDisableRangeIn::getInvoiceSerial() const
{
    return m_InvoiceSerial;
}
void SefazDisableRangeIn::setInvoiceSerial(int32_t value)
{
    m_InvoiceSerial = value;
    m_InvoiceSerialIsSet = true;
}
bool SefazDisableRangeIn::invoiceSerialIsSet() const
{
    return m_InvoiceSerialIsSet;
}
void SefazDisableRangeIn::unsetInvoiceSerial()
{
    m_InvoiceSerialIsSet = false;
}
std::shared_ptr<Number> SefazDisableRangeIn::getYear() const
{
    return m_Year;
}
void SefazDisableRangeIn::setYear(std::shared_ptr<Number> value)
{
    m_Year = value;
    m_YearIsSet = true;
}
bool SefazDisableRangeIn::yearIsSet() const
{
    return m_YearIsSet;
}
void SefazDisableRangeIn::unsetYear()
{
    m_YearIsSet = false;
}
utility::string_t SefazDisableRangeIn::getMessage() const
{
    return m_Message;
}
void SefazDisableRangeIn::setMessage(utility::string_t value)
{
    m_Message = value;
    m_MessageIsSet = true;
}
bool SefazDisableRangeIn::messageIsSet() const
{
    return m_MessageIsSet;
}
void SefazDisableRangeIn::unsetMessage()
{
    m_MessageIsSet = false;
}
std::shared_ptr<Number> SefazDisableRangeIn::getInvoiceNumberInit() const
{
    return m_InvoiceNumberInit;
}
void SefazDisableRangeIn::setInvoiceNumberInit(std::shared_ptr<Number> value)
{
    m_InvoiceNumberInit = value;
    m_InvoiceNumberInitIsSet = true;
}
bool SefazDisableRangeIn::invoiceNumberInitIsSet() const
{
    return m_InvoiceNumberInitIsSet;
}
void SefazDisableRangeIn::unsetInvoiceNumberInit()
{
    m_InvoiceNumberInitIsSet = false;
}
std::shared_ptr<Number> SefazDisableRangeIn::getInvoiceNumberEnd() const
{
    return m_InvoiceNumberEnd;
}
void SefazDisableRangeIn::setInvoiceNumberEnd(std::shared_ptr<Number> value)
{
    m_InvoiceNumberEnd = value;
    m_InvoiceNumberEndIsSet = true;
}
bool SefazDisableRangeIn::invoiceNumberEndIsSet() const
{
    return m_InvoiceNumberEndIsSet;
}
void SefazDisableRangeIn::unsetInvoiceNumberEnd()
{
    m_InvoiceNumberEndIsSet = false;
}

}
}
}
}

