/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * IpbtConfItem.h
 *
 * 
 */

#ifndef IpbtConfItem_H_
#define IpbtConfItem_H_


#include "ModelBase.h"

#include "StateEnum.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  IpbtConfItem
    : public ModelBase
{
public:
    IpbtConfItem();
    virtual ~IpbtConfItem();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// IpbtConfItem members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<StateEnum> getState() const;
    void setState(std::shared_ptr<StateEnum> value);
    bool stateIsSet() const;
    void unsetState();
    /// <summary>
    /// 
    /// </summary>
    double getFederalTax() const;
    void setFederalTax(double value);
    bool federalTaxIsSet() const;
    void unsetFederalTax();
    /// <summary>
    /// 
    /// </summary>
    double getImportTax() const;
    void setImportTax(double value);
    bool importTaxIsSet() const;
    void unsetImportTax();
    /// <summary>
    /// 
    /// </summary>
    double getStateTax() const;
    void setStateTax(double value);
    bool stateTaxIsSet() const;
    void unsetStateTax();
    /// <summary>
    /// 
    /// </summary>
    double getCityTax() const;
    void setCityTax(double value);
    bool cityTaxIsSet() const;
    void unsetCityTax();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSource() const;
    void setSource(utility::string_t value);
    bool sourceIsSet() const;
    void unsetSource();

protected:
    std::shared_ptr<StateEnum> m_State;
    bool m_StateIsSet;
double m_FederalTax;
    bool m_FederalTaxIsSet;
double m_ImportTax;
    bool m_ImportTaxIsSet;
double m_StateTax;
    bool m_StateTaxIsSet;
double m_CityTax;
    bool m_CityTaxIsSet;
utility::string_t m_Source;
    bool m_SourceIsSet;
};

}
}
}
}

#endif /* IpbtConfItem_H_ */
