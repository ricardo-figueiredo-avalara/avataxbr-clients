/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Payment.h
 *
 * 
 */

#ifndef Payment_H_
#define Payment_H_


#include "ModelBase.h"

#include "Payment_bill.h"
#include "Payment_installment.h"
#include "Payment_paymentMode.h"
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Payment
    : public ModelBase
{
public:
    Payment();
    virtual ~Payment();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Payment members

    /// <summary>
    /// Installment terms - 0 # cash - 1 # on terms - 2 # other 
    /// </summary>
    int32_t getInstallmentsTerms() const;
    void setInstallmentsTerms(int32_t value);
    bool installmentsTermsIsSet() const;
    void unsetInstallmentsTerms();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Payment_bill> getBill() const;
    void setBill(std::shared_ptr<Payment_bill> value);
    bool billIsSet() const;
    void unsetBill();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Payment_installment>>& getInstallment();
    bool installmentIsSet() const;
    void unsetInstallment();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Payment_paymentMode>>& getPaymentMode();
    bool paymentModeIsSet() const;
    void unsetPaymentMode();

protected:
    int32_t m_InstallmentsTerms;
    bool m_InstallmentsTermsIsSet;
std::shared_ptr<Payment_bill> m_Bill;
    bool m_BillIsSet;
std::vector<std::shared_ptr<Payment_installment>> m_Installment;
    bool m_InstallmentIsSet;
std::vector<std::shared_ptr<Payment_paymentMode>> m_PaymentMode;
    bool m_PaymentModeIsSet;
};

}
}
}
}

#endif /* Payment_H_ */
