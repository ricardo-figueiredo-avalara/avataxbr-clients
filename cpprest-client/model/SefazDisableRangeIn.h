/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SefazDisableRangeIn.h
 *
 * 
 */

#ifndef SefazDisableRangeIn_H_
#define SefazDisableRangeIn_H_


#include "ModelBase.h"

#include "Number.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SefazDisableRangeIn
    : public ModelBase
{
public:
    SefazDisableRangeIn();
    virtual ~SefazDisableRangeIn();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SefazDisableRangeIn members

    /// <summary>
    /// This string contains a previously configured company code which may also have codes needed for tax return purposes. These codes are maintained through the customer portal. Main company address identity
    /// </summary>
    utility::string_t getCompanyLocation() const;
    void setCompanyLocation(utility::string_t value);
    bool companyLocationIsSet() const;
    void unsetCompanyLocation();
    /// <summary>
    /// This string indicates the type of transaction for which tax should be calculated. - &#39;55&#39; # Nota Fiscal Eletrônica (NF-e) - &#39;65&#39; # Nota Fiscal Eletrônica ao-Consumidor Final (NFC-e) 
    /// </summary>
    utility::string_t getTransactionModel() const;
    void setTransactionModel(utility::string_t value);
    bool transactionModelIsSet() const;
    void unsetTransactionModel();
    /// <summary>
    /// Invoice number, sequential unique by invoice serial (Número da nota fiscal) 
    /// </summary>
    int32_t getInvoiceSerial() const;
    void setInvoiceSerial(int32_t value);
    bool invoiceSerialIsSet() const;
    void unsetInvoiceSerial();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Number> getYear() const;
    void setYear(std::shared_ptr<Number> value);
    bool yearIsSet() const;
    void unsetYear();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMessage() const;
    void setMessage(utility::string_t value);
    bool messageIsSet() const;
    void unsetMessage();
    /// <summary>
    /// First number of disable range.
    /// </summary>
    std::shared_ptr<Number> getInvoiceNumberInit() const;
    void setInvoiceNumberInit(std::shared_ptr<Number> value);
    bool invoiceNumberInitIsSet() const;
    void unsetInvoiceNumberInit();
    /// <summary>
    /// Last number of disable range.
    /// </summary>
    std::shared_ptr<Number> getInvoiceNumberEnd() const;
    void setInvoiceNumberEnd(std::shared_ptr<Number> value);
    bool invoiceNumberEndIsSet() const;
    void unsetInvoiceNumberEnd();

protected:
    utility::string_t m_CompanyLocation;
    bool m_CompanyLocationIsSet;
utility::string_t m_TransactionModel;
    bool m_TransactionModelIsSet;
int32_t m_InvoiceSerial;
    bool m_InvoiceSerialIsSet;
std::shared_ptr<Number> m_Year;
    bool m_YearIsSet;
utility::string_t m_Message;
    bool m_MessageIsSet;
std::shared_ptr<Number> m_InvoiceNumberInit;
    bool m_InvoiceNumberInitIsSet;
std::shared_ptr<Number> m_InvoiceNumberEnd;
    bool m_InvoiceNumberEndIsSet;
};

}
}
}
}

#endif /* SefazDisableRangeIn_H_ */
