/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Company_configuration.h
 *
 * 
 */

#ifndef Company_configuration_H_
#define Company_configuration_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Company_configuration
    : public ModelBase
{
public:
    Company_configuration();
    virtual ~Company_configuration();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Company_configuration members

    /// <summary>
    /// digital certificate A1 model, p12, encoded by base64
    /// </summary>
    utility::string_t getCertificate() const;
    void setCertificate(utility::string_t value);
    bool certificateIsSet() const;
    void unsetCertificate();
    /// <summary>
    /// certificate password
    /// </summary>
    utility::string_t getCertificatepwd() const;
    void setCertificatepwd(utility::string_t value);
    bool certificatepwdIsSet() const;
    void unsetCertificatepwd();
    /// <summary>
    /// expiration date of this certificate
    /// </summary>
    utility::datetime getCertificateexpiration() const;
    void setCertificateexpiration(utility::datetime value);
    bool certificateexpirationIsSet() const;
    void unsetCertificateexpiration();
    /// <summary>
    /// company logo image encoded by base64
    /// </summary>
    utility::string_t getLogo() const;
    void setLogo(utility::string_t value);
    bool logoIsSet() const;
    void unsetLogo();
    /// <summary>
    /// how the document will be printed - &#39;0&#39; # without DANFE; - &#39;1&#39; # DANFe Letter; - &#39;2&#39; # DANFe Landscape; 
    /// </summary>
    utility::string_t getTpImpNFe() const;
    void setTpImpNFe(utility::string_t value);
    bool tpImpNFeIsSet() const;
    void unsetTpImpNFe();
    /// <summary>
    /// how the document will be printed - &#39;0&#39; # without DANFE; - &#39;4&#39; # DANFe NFC-e; - &#39;5&#39; # DANFe NFC-e e-mail 
    /// </summary>
    utility::string_t getTpImpNFCe() const;
    void setTpImpNFCe(utility::string_t value);
    bool tpImpNFCeIsSet() const;
    void unsetTpImpNFCe();

protected:
    utility::string_t m_Certificate;
    bool m_CertificateIsSet;
utility::string_t m_Certificatepwd;
    bool m_CertificatepwdIsSet;
utility::datetime m_Certificateexpiration;
    bool m_CertificateexpirationIsSet;
utility::string_t m_Logo;
    bool m_LogoIsSet;
utility::string_t m_TpImpNFe;
    bool m_TpImpNFeIsSet;
utility::string_t m_TpImpNFCe;
    bool m_TpImpNFCeIsSet;
};

}
}
}
}

#endif /* Company_configuration_H_ */
