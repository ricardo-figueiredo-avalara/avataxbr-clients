/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * IssConfServiceList_taxRate.h
 *
 * 
 */

#ifndef IssConfServiceList_taxRate_H_
#define IssConfServiceList_taxRate_H_


#include "ModelBase.h"

#include "ServiceItemTaxRate.h"
#include "IssConfServiceList_taxRate_ibpt.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  IssConfServiceList_taxRate
    : public ModelBase
{
public:
    IssConfServiceList_taxRate();
    virtual ~IssConfServiceList_taxRate();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// IssConfServiceList_taxRate members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ServiceItemTaxRate> getISS() const;
    void setISS(std::shared_ptr<ServiceItemTaxRate> value);
    bool ISSIsSet() const;
    void unsetISS();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ServiceItemTaxRate> getISSRF() const;
    void setISSRF(std::shared_ptr<ServiceItemTaxRate> value);
    bool ISS_RFIsSet() const;
    void unsetISS_RF();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ServiceItemTaxRate> getISSE() const;
    void setISSE(std::shared_ptr<ServiceItemTaxRate> value);
    bool ISS_EIsSet() const;
    void unsetISS_E();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ServiceItemTaxRate> getISSI() const;
    void setISSI(std::shared_ptr<ServiceItemTaxRate> value);
    bool ISS_IIsSet() const;
    void unsetISS_I();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<IssConfServiceList_taxRate_ibpt> getIbpt() const;
    void setIbpt(std::shared_ptr<IssConfServiceList_taxRate_ibpt> value);
    bool ibptIsSet() const;
    void unsetIbpt();

protected:
    std::shared_ptr<ServiceItemTaxRate> m_ISS;
    bool m_ISSIsSet;
std::shared_ptr<ServiceItemTaxRate> m_ISS_RF;
    bool m_ISS_RFIsSet;
std::shared_ptr<ServiceItemTaxRate> m_ISS_E;
    bool m_ISS_EIsSet;
std::shared_ptr<ServiceItemTaxRate> m_ISS_I;
    bool m_ISS_IIsSet;
std::shared_ptr<IssConfServiceList_taxRate_ibpt> m_Ibpt;
    bool m_IbptIsSet;
};

}
}
}
}

#endif /* IssConfServiceList_taxRate_H_ */
