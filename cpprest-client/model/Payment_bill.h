/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Payment_bill.h
 *
 * Bill information
 */

#ifndef Payment_bill_H_
#define Payment_bill_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// Bill information
/// </summary>
class  Payment_bill
    : public ModelBase
{
public:
    Payment_bill();
    virtual ~Payment_bill();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Payment_bill members

    /// <summary>
    /// Bill identifier
    /// </summary>
    utility::string_t getNFat() const;
    void setNFat(utility::string_t value);
    bool nFatIsSet() const;
    void unsetNFat();
    /// <summary>
    /// Orignal value
    /// </summary>
    double getVOrig() const;
    void setVOrig(double value);
    bool vOrigIsSet() const;
    void unsetVOrig();
    /// <summary>
    /// Discount
    /// </summary>
    double getVDiscount() const;
    void setVDiscount(double value);
    bool vDiscountIsSet() const;
    void unsetVDiscount();
    /// <summary>
    /// Net value
    /// </summary>
    double getVNet() const;
    void setVNet(double value);
    bool vNetIsSet() const;
    void unsetVNet();

protected:
    utility::string_t m_NFat;
    bool m_NFatIsSet;
double m_VOrig;
    bool m_VOrigIsSet;
double m_VDiscount;
    bool m_VDiscountIsSet;
double m_VNet;
    bool m_VNetIsSet;
};

}
}
}
}

#endif /* Payment_bill_H_ */
