/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * NRef_refNF.h
 *
 * 
 */

#ifndef NRef_refNF_H_
#define NRef_refNF_H_


#include "ModelBase.h"

#include "StateEnum.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  NRef_refNF
    : public ModelBase
{
public:
    NRef_refNF();
    virtual ~NRef_refNF();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// NRef_refNF members

    /// <summary>
    /// State code of fiscal Document creator
    /// </summary>
    std::shared_ptr<StateEnum> getStateCd() const;
    void setStateCd(std::shared_ptr<StateEnum> value);
        /// <summary>
    /// year and month of fiscal document creation
    /// </summary>
    utility::string_t getYymm() const;
    void setYymm(utility::string_t value);
        /// <summary>
    /// fiscal document creator federalTaxId
    /// </summary>
    utility::string_t getFederalTaxId() const;
    void setFederalTaxId(utility::string_t value);
        /// <summary>
    /// fiscal document serie
    /// </summary>
    utility::string_t getSerie() const;
    void setSerie(utility::string_t value);
        /// <summary>
    /// fiscal document number
    /// </summary>
    utility::string_t getNumber() const;
    void setNumber(utility::string_t value);
    
protected:
    std::shared_ptr<StateEnum> m_StateCd;
    utility::string_t m_Yymm;
    utility::string_t m_FederalTaxId;
    utility::string_t m_Serie;
    utility::string_t m_Number;
    };

}
}
}
}

#endif /* NRef_refNF_H_ */
