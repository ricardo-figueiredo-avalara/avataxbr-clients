/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CompanyICMSApi.h
 *
 * 
 */

#ifndef CompanyICMSApi_H_
#define CompanyICMSApi_H_


#include "ApiClient.h"

#include "CustomIcmsConfByState.h"
#include "Inline_response_201.h"
#include "Message.h"
#include "UUID.h"
#include "ValidationError.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  CompanyICMSApi
{
public:
    CompanyICMSApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~CompanyICMSApi();
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// This operation return custom ICMS configurations that match with parameters queries 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="xPaginationLimit">The per page limit. Currently set to 10 but subject to change at any time (max 100). (optional, default to 10)</param>/// <param name="xPaginationCurrentPage">The current page. Defaults to 1. (optional, default to 1)</param>/// <param name="xPaginationSort"> (optional)</param>
    pplx::task<std::vector<std::shared_ptr<CustomIcmsConfByState>>> companiesCompanyIdIcmsGet(std::shared_ptr<UUID> companyId, int32_t xPaginationLimit, int32_t xPaginationCurrentPage, utility::string_t xPaginationSort);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// This operation return custom ICMS configurations that match with parameters queries 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="state">Brazilian State</param>
    pplx::task<std::shared_ptr<CustomIcmsConfByState>> companiesCompanyIdIcmsStateGet(std::shared_ptr<UUID> companyId, utility::string_t state);
    /// <summary>
    /// Create custom ICMS tax for one company
    /// </summary>
    /// <remarks>
    /// This method operation create a custom agast for one company 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="body">Transaction Message</param>
    pplx::task<std::shared_ptr<Inline_response_201>> createICMS(std::shared_ptr<UUID> companyId, std::shared_ptr<CustomIcmsConfByState> body);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="state">Brazilian State</param>
    pplx::task<void> deleteCustomIcmsConfByState(std::shared_ptr<UUID> companyId, utility::string_t state);
    /// <summary>
    /// Update custom agast for one company
    /// </summary>
    /// <remarks>
    /// This method operation update a custom ICMS tax for one company 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="state">Brazilian State</param>/// <param name="body">Transaction Message</param>
    pplx::task<void> updateCustomIcmsConfByState(std::shared_ptr<UUID> companyId, utility::string_t state, std::shared_ptr<CustomIcmsConfByState> body);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* CompanyICMSApi_H_ */

