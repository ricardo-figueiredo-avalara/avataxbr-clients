/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * LegalReasonApi.h
 *
 * 
 */

#ifndef LegalReasonApi_H_
#define LegalReasonApi_H_


#include "ApiClient.h"

#include "Inline_response_201.h"
#include "LegalReason.h"
#include "ProcessScenario.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  LegalReasonApi
{
public:
    LegalReasonApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~LegalReasonApi();
    /// <summary>
    /// Create Legal Reason.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="body"></param>
    pplx::task<std::shared_ptr<Inline_response_201>> createReason.(std::shared_ptr<LegalReason> body);
    /// <summary>
    /// Delete a Legal Reason entry.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="uuid"></param>
    pplx::task<void> deleteReason.(utility::string_t uuid);
    /// <summary>
    /// Get single Legal Reason.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="uuid"></param>
    pplx::task<std::shared_ptr<ProcessScenario>> getReason.(utility::string_t uuid);
    /// <summary>
    /// List Legal Reasons.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="companyId">Filters by company domain entries. Provide \&quot;global\&quot; to retrive only \&quot;global\&quot; entries. CompanyId searches also match global entries.  (optional)</param>
    pplx::task<std::vector<std::shared_ptr<LegalReason>>> listReason(utility::string_t companyId);
    /// <summary>
    /// Update Legal Reason.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="body"></param>
    pplx::task<void> updateReason.(std::shared_ptr<LegalReason> body);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* LegalReasonApi_H_ */

