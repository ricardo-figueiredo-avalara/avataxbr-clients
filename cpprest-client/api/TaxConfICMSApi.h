/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * TaxConfICMSApi.h
 *
 * 
 */

#ifndef TaxConfICMSApi_H_
#define TaxConfICMSApi_H_


#include "ApiClient.h"

#include "IcmsConfByState.h"
#include "Inline_response_201.h"
#include "Message.h"
#include "ValidationError.h"
#include <cpprest/details/basic_types.h>
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  TaxConfICMSApi
{
public:
    TaxConfICMSApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~TaxConfICMSApi();
    /// <summary>
    /// create a new ICMS Configuration
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="state">Brazilian State</param>/// <param name="icmsConfState">The pet JSON you want to post</param>
    pplx::task<std::shared_ptr<Inline_response_201>> createIcmsconfstate(utility::string_t state, std::shared_ptr<IcmsConfByState> icmsConfState);
    /// <summary>
    /// disable a ICMS by State.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="state">Brazilian State</param>/// <param name="code">ICMS Code</param>
    pplx::task<void> deleteIcmsConf(utility::string_t state, utility::string_t code);
    /// <summary>
    /// get ICMS information by State.
    /// </summary>
    /// <remarks>
    /// This operation return configurations of icms that match with parameters queries 
    /// </remarks>
    /// <param name="state">Brazilian State</param>/// <param name="code">ICMS Code</param>
    pplx::task<std::vector<std::shared_ptr<IcmsConfByState>>> getIcmsConfByState(utility::string_t state, utility::string_t code);
    /// <summary>
    /// retrive list of ICMS.
    /// </summary>
    /// <remarks>
    /// This operation return ICMS configurations that match with parameters queries 
    /// </remarks>
    /// <param name="state">Brazilian State</param>/// <param name="suffixcode">Identify this ICMS (optional)</param>/// <param name="date">When informed return valid version configuration for this date (optional)</param>/// <param name="inactive">return the inactive versions too (optional)</param>
    pplx::task<std::vector<std::shared_ptr<IcmsConfByState>>> getIcmsList(utility::string_t state, utility::string_t suffixcode, utility::datetime date, bool inactive);
    /// <summary>
    /// retrive list of ICMS.
    /// </summary>
    /// <remarks>
    /// This operation return ICMS configurations that match with parameters queries 
    /// </remarks>
    /// <param name="text">Search for codes</param>/// <param name="state">Filter for states (optional)</param>
    pplx::task<std::vector<std::shared_ptr<IcmsConfByState>>> getIcmsList_0(utility::string_t text, utility::string_t state);
    /// <summary>
    /// update a IcmsConf State,
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="state">Brazilian State</param>/// <param name="code">ICMS Code</param>/// <param name="icmsConfState">The pet JSON you want to post</param>
    pplx::task<void> updateIcmsconfstate(utility::string_t state, utility::string_t code, std::shared_ptr<IcmsConfByState> icmsConfState);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* TaxConfICMSApi_H_ */

