/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * AuthApi.h
 *
 * 
 */

#ifndef AuthApi_H_
#define AuthApi_H_


#include "ApiClient.h"

#include "Inline_response_200.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  AuthApi
{
public:
    AuthApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~AuthApi();
    /// <summary>
    /// authorization
    /// </summary>
    /// <remarks>
    /// Authorization: Basic VGVzdDoxMjM&#x3D;  Generate Base64:  - auth &#x3D; \&quot;{user}:{password}\&quot;  - base &#x3D; base64(auth)  - header[\&quot;Authorization\&quot;] &#x3D; \&quot;Basic \&quot; + base 
    /// </remarks>
    /// <param name="authorization">Authorization: Basic VGVzdDoxMjM&#x3D; </param>
    pplx::task<std::shared_ptr<Inline_response_200>> authPost(utility::string_t authorization);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* AuthApi_H_ */

