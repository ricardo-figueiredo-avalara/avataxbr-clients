/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CompanyFilesApi.h
 *
 * 
 */

#ifndef CompanyFilesApi_H_
#define CompanyFilesApi_H_


#include "ApiClient.h"

#include "Body_2.h"
#include "Body_3.h"
#include "Inline_response_200_2.h"
#include "Message.h"
#include "Number.h"
#include "UUID.h"
#include "ValidationError.h"

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  CompanyFilesApi
{
public:
    CompanyFilesApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~CompanyFilesApi();
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Deletes a company file store.  
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="companyId2">Company ID</param>
    pplx::task<void> companiesCompanyIdNfseCertificateDelete(std::shared_ptr<UUID> companyId, std::shared_ptr<UUID> companyId2);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Gets an existing NFSe certificate file for this company. 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="companyId2">Company ID</param>/// <param name="peek">Use this parameter to check the existence of the file without downloading it. (optional)</param>
    pplx::task<void> companiesCompanyIdNfseCertificateGet(std::shared_ptr<UUID> companyId, std::shared_ptr<UUID> companyId2, std::shared_ptr<Number> peek);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// If it still not exists, uploads a new NFSe Certificate file for this company. Send the file as a base64 string. 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="body">Content</param>
    pplx::task<std::shared_ptr<Inline_response_200_2>> companiesCompanyIdNfseCertificatePost(std::shared_ptr<UUID> companyId, std::shared_ptr<Body_3> body);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Updates an existing NFSe certificate file for this company. Send the file as a base64 string. 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="companyId2">Company ID</param>/// <param name="body">Content</param>
    pplx::task<std::shared_ptr<Inline_response_200_2>> companiesCompanyIdNfseCertificatePut(std::shared_ptr<UUID> companyId, std::shared_ptr<UUID> companyId2, std::shared_ptr<Body_2> body);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* CompanyFilesApi_H_ */

