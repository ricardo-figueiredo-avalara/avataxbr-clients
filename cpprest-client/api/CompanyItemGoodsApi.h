/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CompanyItemGoodsApi.h
 *
 * 
 */

#ifndef CompanyItemGoodsApi_H_
#define CompanyItemGoodsApi_H_


#include "ApiClient.h"

#include "Body_1.h"
#include "Inline_response_201.h"
#include "ItemGoods.h"
#include "Message.h"
#include "UUID.h"
#include "ValidationError.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  CompanyItemGoodsApi
{
public:
    CompanyItemGoodsApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~CompanyItemGoodsApi();
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Change the code of a given item. 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="code">Item Code</param>/// <param name="body">Requisition</param>/// <param name="goods">Provide to apply to goods items. (optional)</param>/// <param name="service">Provide to apply to service items. (optional)</param>
    pplx::task<void> companiesCompanyIdItemsCodeChangeCodePut(std::shared_ptr<UUID> companyId, utility::string_t code, std::shared_ptr<Body_1> body, utility::string_t goods, utility::string_t service);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// This operation return custom agast configurations that match with parameters queries 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="code">Item Code</param>/// <param name="avalaraProductType">Avalara Product Type</param>/// <param name="agast">Custom Agast Code (optional)</param>
    pplx::task<std::shared_ptr<ItemGoods>> companiesCompanyIdItemsCodegoodsGet(std::shared_ptr<UUID> companyId, utility::string_t code, utility::string_t avalaraProductType, utility::string_t agast);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// This operation return custom agast configurations that match with parameters queries 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="avalaraProductType">Avalara Product Type</param>/// <param name="xPaginationLimit">The per page limit. Currently set to 10 but subject to change at any time (max 100). (optional, default to 10)</param>/// <param name="xPaginationCurrentPage">The current page. Defaults to 1. (optional, default to 1)</param>/// <param name="xPaginationSort"> (optional)</param>/// <param name="code">Item Code (optional)</param>/// <param name="agast">Custom Agast Code (optional)</param>
    pplx::task<std::vector<std::shared_ptr<ItemGoods>>> companiesCompanyIdItemsgoodsGet(std::shared_ptr<UUID> companyId, utility::string_t avalaraProductType, int32_t xPaginationLimit, int32_t xPaginationCurrentPage, utility::string_t xPaginationSort, utility::string_t code, utility::string_t agast);
    /// <summary>
    /// Create custom agast for one company
    /// </summary>
    /// <remarks>
    /// This method operation create a custom agast for one company 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="avalaraProductType">Avalara Product Type</param>/// <param name="body">Transaction Message</param>
    pplx::task<std::shared_ptr<Inline_response_201>> createItem(std::shared_ptr<UUID> companyId, utility::string_t avalaraProductType, std::shared_ptr<ItemGoods> body);
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="code">Item Code</param>/// <param name="avalaraProductType">Avalara Product Type</param>
    pplx::task<void> deleteItem(std::shared_ptr<UUID> companyId, utility::string_t code, utility::string_t avalaraProductType);
    /// <summary>
    /// Update custom agast for one company
    /// </summary>
    /// <remarks>
    /// This method operation create a custom agast for one company 
    /// </remarks>
    /// <param name="companyId">Company ID</param>/// <param name="code">Item Code</param>/// <param name="avalaraProductType">Avalara Product Type</param>/// <param name="body">Transaction Message</param>
    pplx::task<void> updateItem(std::shared_ptr<UUID> companyId, utility::string_t code, utility::string_t avalaraProductType, std::shared_ptr<ItemGoods> body);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* CompanyItemGoodsApi_H_ */

