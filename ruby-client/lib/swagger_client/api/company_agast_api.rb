=begin
#BR16 - API

#This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module SwaggerClient
  class CompanyAGASTApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # 
    # This operation return custom agast configurations that match with parameters queries - Alannes. 
    # @param company_id Company ID
    # @param code Agast Code
    # @param [Hash] opts the optional parameters
    # @option opts [String] :parent Agast parent code, means that this agast is a specialization of parent agast 
    # @return [CustomAgast]
    def companies_company_id_agasts_code_get(company_id, code, opts = {})
      data, _status_code, _headers = companies_company_id_agasts_code_get_with_http_info(company_id, code, opts)
      return data
    end

    # 
    # This operation return custom agast configurations that match with parameters queries - Alannes. 
    # @param company_id Company ID
    # @param code Agast Code
    # @param [Hash] opts the optional parameters
    # @option opts [String] :parent Agast parent code, means that this agast is a specialization of parent agast 
    # @return [Array<(CustomAgast, Fixnum, Hash)>] CustomAgast data, response status code and response headers
    def companies_company_id_agasts_code_get_with_http_info(company_id, code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyAGASTApi.companies_company_id_agasts_code_get ..."
      end
      # verify the required parameter 'company_id' is set
      fail ArgumentError, "Missing the required parameter 'company_id' when calling CompanyAGASTApi.companies_company_id_agasts_code_get" if company_id.nil?
      # verify the required parameter 'code' is set
      fail ArgumentError, "Missing the required parameter 'code' when calling CompanyAGASTApi.companies_company_id_agasts_code_get" if code.nil?
      if code.to_s.length > 60
        fail ArgumentError, 'invalid value for "code" when calling CompanyAGASTApi.companies_company_id_agasts_code_get, the character length must be smaller than or equal to 60.'
      end

      if !opts[:'parent'].nil? && opts[:'parent'].to_s.length > 60
        fail ArgumentError, 'invalid value for "opts[:"parent"]" when calling CompanyAGASTApi.companies_company_id_agasts_code_get, the character length must be smaller than or equal to 60.'
      end

      # resource path
      local_var_path = "/companies/{companyId}/agasts/{code}".sub('{format}','json').sub('{' + 'companyId' + '}', company_id.to_s).sub('{' + 'code' + '}', code.to_s)

      # query parameters
      query_params = {}
      query_params[:'parent'] = opts[:'parent'] if !opts[:'parent'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CustomAgast')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyAGASTApi#companies_company_id_agasts_code_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # This operation return custom agast configurations that match with parameters queries 
    # @param company_id Company ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :text Text query
    # @option opts [Integer] :x_pagination_limit The per page limit. Currently set to 10 but subject to change at any time (max 100). (default to 10)
    # @option opts [Integer] :x_pagination_current_page The current page. Defaults to 1. (default to 1)
    # @option opts [String] :x_pagination_sort 
    # @option opts [String] :agast Custom Agast Code
    # @option opts [String] :parent Agast Code
    # @return [Array<InlineResponse2001>]
    def companies_company_id_agasts_get(company_id, opts = {})
      data, _status_code, _headers = companies_company_id_agasts_get_with_http_info(company_id, opts)
      return data
    end

    # 
    # This operation return custom agast configurations that match with parameters queries 
    # @param company_id Company ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :text Text query
    # @option opts [Integer] :x_pagination_limit The per page limit. Currently set to 10 but subject to change at any time (max 100).
    # @option opts [Integer] :x_pagination_current_page The current page. Defaults to 1.
    # @option opts [String] :x_pagination_sort 
    # @option opts [String] :agast Custom Agast Code
    # @option opts [String] :parent Agast Code
    # @return [Array<(Array<InlineResponse2001>, Fixnum, Hash)>] Array<InlineResponse2001> data, response status code and response headers
    def companies_company_id_agasts_get_with_http_info(company_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyAGASTApi.companies_company_id_agasts_get ..."
      end
      # verify the required parameter 'company_id' is set
      fail ArgumentError, "Missing the required parameter 'company_id' when calling CompanyAGASTApi.companies_company_id_agasts_get" if company_id.nil?
      if !opts[:'text'].nil? && opts[:'text'].to_s.length > 40
        fail ArgumentError, 'invalid value for "opts[:"text"]" when calling CompanyAGASTApi.companies_company_id_agasts_get, the character length must be smaller than or equal to 40.'
      end

      if !opts[:'x_pagination_limit'].nil? && opts[:'x_pagination_limit'] < 5
        fail ArgumentError, 'invalid value for "opts[:"x_pagination_limit"]" when calling CompanyAGASTApi.companies_company_id_agasts_get, must be greater than or equal to 5.'
      end

      if !opts[:'x_pagination_current_page'].nil? && opts[:'x_pagination_current_page'] < 1
        fail ArgumentError, 'invalid value for "opts[:"x_pagination_current_page"]" when calling CompanyAGASTApi.companies_company_id_agasts_get, must be greater than or equal to 1.'
      end

      if !opts[:'agast'].nil? && opts[:'agast'].to_s.length > 60
        fail ArgumentError, 'invalid value for "opts[:"agast"]" when calling CompanyAGASTApi.companies_company_id_agasts_get, the character length must be smaller than or equal to 60.'
      end

      if !opts[:'parent'].nil? && opts[:'parent'].to_s.length > 60
        fail ArgumentError, 'invalid value for "opts[:"parent"]" when calling CompanyAGASTApi.companies_company_id_agasts_get, the character length must be smaller than or equal to 60.'
      end

      # resource path
      local_var_path = "/companies/{companyId}/agasts".sub('{format}','json').sub('{' + 'companyId' + '}', company_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'text'] = opts[:'text'] if !opts[:'text'].nil?
      query_params[:'agast'] = opts[:'agast'] if !opts[:'agast'].nil?
      query_params[:'parent'] = opts[:'parent'] if !opts[:'parent'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'X-Pagination-Limit'] = opts[:'x_pagination_limit'] if !opts[:'x_pagination_limit'].nil?
      header_params[:'X-Pagination-Current-Page'] = opts[:'x_pagination_current_page'] if !opts[:'x_pagination_current_page'].nil?
      header_params[:'X-Pagination-Sort'] = opts[:'x_pagination_sort'] if !opts[:'x_pagination_sort'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<InlineResponse2001>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyAGASTApi#companies_company_id_agasts_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create custom agast for one company
    # This method operation create a custom agast for one company 
    # @param company_id Company ID
    # @param body Transaction Message
    # @param [Hash] opts the optional parameters
    # @option opts [String] :text Text query
    # @return [InlineResponse201]
    def create_custom_agast(company_id, body, opts = {})
      data, _status_code, _headers = create_custom_agast_with_http_info(company_id, body, opts)
      return data
    end

    # Create custom agast for one company
    # This method operation create a custom agast for one company 
    # @param company_id Company ID
    # @param body Transaction Message
    # @param [Hash] opts the optional parameters
    # @option opts [String] :text Text query
    # @return [Array<(InlineResponse201, Fixnum, Hash)>] InlineResponse201 data, response status code and response headers
    def create_custom_agast_with_http_info(company_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyAGASTApi.create_custom_agast ..."
      end
      # verify the required parameter 'company_id' is set
      fail ArgumentError, "Missing the required parameter 'company_id' when calling CompanyAGASTApi.create_custom_agast" if company_id.nil?
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling CompanyAGASTApi.create_custom_agast" if body.nil?
      if !opts[:'text'].nil? && opts[:'text'].to_s.length > 40
        fail ArgumentError, 'invalid value for "opts[:"text"]" when calling CompanyAGASTApi.create_custom_agast, the character length must be smaller than or equal to 40.'
      end

      # resource path
      local_var_path = "/companies/{companyId}/agasts".sub('{format}','json').sub('{' + 'companyId' + '}', company_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'text'] = opts[:'text'] if !opts[:'text'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse201')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyAGASTApi#create_custom_agast\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param company_id Company ID
    # @param code Agast Code
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_agast(company_id, code, opts = {})
      delete_agast_with_http_info(company_id, code, opts)
      return nil
    end

    # 
    # 
    # @param company_id Company ID
    # @param code Agast Code
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_agast_with_http_info(company_id, code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyAGASTApi.delete_agast ..."
      end
      # verify the required parameter 'company_id' is set
      fail ArgumentError, "Missing the required parameter 'company_id' when calling CompanyAGASTApi.delete_agast" if company_id.nil?
      # verify the required parameter 'code' is set
      fail ArgumentError, "Missing the required parameter 'code' when calling CompanyAGASTApi.delete_agast" if code.nil?
      if code.to_s.length > 60
        fail ArgumentError, 'invalid value for "code" when calling CompanyAGASTApi.delete_agast, the character length must be smaller than or equal to 60.'
      end

      # resource path
      local_var_path = "/companies/{companyId}/agasts/{code}".sub('{format}','json').sub('{' + 'companyId' + '}', company_id.to_s).sub('{' + 'code' + '}', code.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyAGASTApi#delete_agast\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update custom agast for one company
    # This method operation create a custom agast for one company 
    # @param company_id Company ID
    # @param code Agast Code
    # @param body Transaction Message
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def update_custom_agast(company_id, code, body, opts = {})
      update_custom_agast_with_http_info(company_id, code, body, opts)
      return nil
    end

    # Update custom agast for one company
    # This method operation create a custom agast for one company 
    # @param company_id Company ID
    # @param code Agast Code
    # @param body Transaction Message
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def update_custom_agast_with_http_info(company_id, code, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: CompanyAGASTApi.update_custom_agast ..."
      end
      # verify the required parameter 'company_id' is set
      fail ArgumentError, "Missing the required parameter 'company_id' when calling CompanyAGASTApi.update_custom_agast" if company_id.nil?
      # verify the required parameter 'code' is set
      fail ArgumentError, "Missing the required parameter 'code' when calling CompanyAGASTApi.update_custom_agast" if code.nil?
      if code.to_s.length > 60
        fail ArgumentError, 'invalid value for "code" when calling CompanyAGASTApi.update_custom_agast, the character length must be smaller than or equal to 60.'
      end

      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling CompanyAGASTApi.update_custom_agast" if body.nil?
      # resource path
      local_var_path = "/companies/{companyId}/agasts/{code}".sub('{format}','json').sub('{' + 'companyId' + '}', company_id.to_s).sub('{' + 'code' + '}', code.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CompanyAGASTApi#update_custom_agast\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
