=begin
#BR16 - API

#This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::LegalReasonApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LegalReasonApi' do
  before do
    # run before each test
    @instance = SwaggerClient::LegalReasonApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LegalReasonApi' do
    it 'should create an instact of LegalReasonApi' do
      expect(@instance).to be_instance_of(SwaggerClient::LegalReasonApi)
    end
  end

  # unit tests for create_reason_
  # Create Legal Reason.
  # 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse201]
  describe 'create_reason_ test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_reason_
  # Delete a Legal Reason entry.
  # 
  # @param uuid 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_reason_ test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_reason_
  # Get single Legal Reason.
  # 
  # @param uuid 
  # @param [Hash] opts the optional parameters
  # @return [ProcessScenario]
  describe 'get_reason_ test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_reason
  # List Legal Reasons.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :company_id Filters by company domain entries. Provide \&quot;global\&quot; to retrive only \&quot;global\&quot; entries. CompanyId searches also match global entries. 
  # @return [Array<LegalReason>]
  describe 'list_reason test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_reason_
  # Update Legal Reason.
  # 
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_reason_ test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
