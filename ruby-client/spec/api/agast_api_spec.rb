=begin
#AvaTax Brazil

#The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::AGASTApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AGASTApi' do
  before do
    # run before each test
    @instance = SwaggerClient::AGASTApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AGASTApi' do
    it 'should create an instact of AGASTApi' do
      expect(@instance).to be_instance_of(SwaggerClient::AGASTApi)
    end
  end

  # unit tests for agasts_code_get
  # 
  # This operation return agast configurations that match with parameters queries 
  # @param code Agast Code
  # @param [Hash] opts the optional parameters
  # @return [Agast]
  describe 'agasts_code_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_agast
  # Create agast
  # This method operation create a AGAST 
  # @param body Transaction Message
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse201]
  describe 'create_agast test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_agast
  # 
  # 
  # @param code Agast Code
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_agast test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_agast_list
  # 
  # This operation return agast configurations that match with parameters queries 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :text Text query
  # @return [Array<InlineResponse2001>]
  describe 'get_agast_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_agast
  # Update agast
  # This method operation create a agast 
  # @param code Agast Code
  # @param body Transaction Message
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_agast test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
