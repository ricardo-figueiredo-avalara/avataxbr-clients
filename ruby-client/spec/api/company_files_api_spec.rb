=begin
#AvaTax Brazil

#The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CompanyFilesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CompanyFilesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CompanyFilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CompanyFilesApi' do
    it 'should create an instact of CompanyFilesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CompanyFilesApi)
    end
  end

  # unit tests for companies_company_id_nfse_certificate_delete
  # 
  # Deletes a company file store.  
  # @param company_id Company ID
  # @param company_id2 Company ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'companies_company_id_nfse_certificate_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_company_id_nfse_certificate_get
  # 
  # Gets an existing NFSe certificate file for this company. 
  # @param company_id Company ID
  # @param company_id2 Company ID
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :peek Use this parameter to check the existence of the file without downloading it.
  # @return [nil]
  describe 'companies_company_id_nfse_certificate_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_company_id_nfse_certificate_post
  # 
  # If it still not exists, uploads a new NFSe Certificate file for this company. Send the file as a base64 string. 
  # @param company_id Company ID
  # @param body Content
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2002]
  describe 'companies_company_id_nfse_certificate_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for companies_company_id_nfse_certificate_put
  # 
  # Updates an existing NFSe certificate file for this company. Send the file as a base64 string. 
  # @param company_id Company ID
  # @param company_id2 Company ID
  # @param body Content
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2002]
  describe 'companies_company_id_nfse_certificate_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
