=begin
#AvaTax Brazil

#The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::GoodsCalculationsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'GoodsCalculationsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::GoodsCalculationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GoodsCalculationsApi' do
    it 'should create an instact of GoodsCalculationsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::GoodsCalculationsApi)
    end
  end

  # unit tests for calculationsgoods_purchase_post
  # Calculation Method
  # This method has more the one operation model, (a) simple calculation, this mode has a minimal validation and mandatory field, only enough for calc; (b) full calculation, simulation, this mode the system will check all atributes and calc all taxes for that transaction; (c) full calculation, starting process to transform this this request into transaction (for NFe, NFCe, CT-e need government authorization); (d) ASIS, the sistem receive the message, store and try get authorization, model valid only form NFe, NFCe and CT-e. 
  # @param authorization Bearer {auth}
  # @param body Transaction Message
  # @param [Hash] opts the optional parameters
  # @return [TransactionForGoodsOut]
  describe 'calculationsgoods_purchase_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for calculationsgoods_sales_post
  # Calculation Method
  # This method has more the one operation model, (a) simple calculation, this mode has a minimal validation and mandatory field, only enough for calc; (b) full calculation, simulation, this mode the system will check all atributes and calc all taxes for that transaction; (c) full calculation, starting process to transform this this request into transaction (for NFe, NFCe, CT-e need government authorization); (d) ASIS, the sistem receive the message, store and try get authorization, model valid only form NFe, NFCe and CT-e. 
  # @param authorization Bearer {auth}
  # @param body Transaction Message
  # @param [Hash] opts the optional parameters
  # @return [TransactionForGoodsOut]
  describe 'calculationsgoods_sales_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
