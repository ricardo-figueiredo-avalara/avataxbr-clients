#  completion                               -*- shell-script -*-

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# !
# ! Note:
# !
# ! THIS SCRIPT HAS BEEN AUTOMATICALLY GENERATED USING 
# ! swagger-codegen (https://github.com/swagger-api/swagger-codegen) 
# ! FROM SWAGGER SPECIFICATION IN JSON.
# !
# ! Generated on: 2017-02-24T19:47:57.103Z
# ! 
# !
# ! System wide installation:
# !
# ! $ sudo cp .bash-completion /etc/bash-completion.d/
# ! 
# !
# ! User home installation (add this line to .bash_profile):
# !
# ! [ -r ~/.bash-completion ] && source ~/.bash-completion
# !
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

declare -A mime_type_abbreviations
# text/*
mime_type_abbreviations["text"]="text/plain"
mime_type_abbreviations["html"]="text/html"
mime_type_abbreviations["md"]="text/x-markdown"
mime_type_abbreviations["csv"]="text/csv"
mime_type_abbreviations["css"]="text/css"
mime_type_abbreviations["rtf"]="text/rtf"
# application/*
mime_type_abbreviations["json"]="application/json"
mime_type_abbreviations["xml"]="application/xml"
mime_type_abbreviations["yaml"]="application/yaml"
mime_type_abbreviations["js"]="application/javascript"
mime_type_abbreviations["bin"]="application/octet-stream"
mime_type_abbreviations["rdf"]="application/rdf+xml"
# image/*
mime_type_abbreviations["jpg"]="image/jpeg"
mime_type_abbreviations["png"]="image/png"
mime_type_abbreviations["gif"]="image/gif"
mime_type_abbreviations["bmp"]="image/bmp"
mime_type_abbreviations["tiff"]="image/tiff"



__osx_init_completion()
{
    COMPREPLY=()
    _get_comp_words_by_ref cur prev words cword
}


_()
{
    local cur
    local prev
    local words
    local cword

    #words="${COMP_WORDS}"
    #cword="${COMP_CWORD}"
    #prev="${COMP_WORDS[COMP_CWORD-1]}"
    #cur="${COMP_WORDS[COMP_CWORD]}"
    
    # The reference of currently selected REST operation
    local operation=""

    # The list of available operation in the REST service
    # It's modelled as an associative array for efficient key lookup
    declare -A operations
    operations["agastsCodeGet"]=1
    operations["createAgast"]=1
    operations["deleteAgast"]=1
    operations["getAgastList"]=1
    operations["updateAgast"]=1
    operations["accountsAccountIdCompaniesGet"]=1
    operations["createAccountCompany"]=1
    operations["getZipCode"]=1
    operations["authPost"]=1
    operations["v2AuthPost"]=1
    operations["companiesGet"]=1
    operations["createCompany"]=1
    operations["deleteAccountCompany"]=1
    operations["deleteCompany"]=1
    operations["infoCompany"]=1
    operations["updateCompany"]=1
    operations["companiesCompanyIdAgastsCodeGet"]=1
    operations["companiesCompanyIdAgastsGet"]=1
    operations["createCustomAgast"]=1
    operations["deleteAgast"]=1
    operations["updateCustomAgast"]=1
    operations["companiesCompanyIdNfseCertificateDelete"]=1
    operations["companiesCompanyIdNfseCertificateGet"]=1
    operations["companiesCompanyIdNfseCertificatePost"]=1
    operations["companiesCompanyIdNfseCertificatePut"]=1
    operations["companiesCompanyIdIcmsGet"]=1
    operations["companiesCompanyIdIcmsStateGet"]=1
    operations["createICMS"]=1
    operations["deleteCustomIcmsConfByState"]=1
    operations["updateCustomIcmsConfByState"]=1
    operations["companiesCompanyIdItemsCodeCpomCityCodeGet"]=1
    operations["companiesCompanyIdItemsCodeCpomGet"]=1
    operations["createItemCPOM"]=1
    operations["deleteItemCPOM"]=1
    operations["updateItemCPOM"]=1
    operations["companiesCompanyIdItemsCodeChangeCodePut"]=1
    operations["companiesCompanyIdItemsCodegoodsGet"]=1
    operations["companiesCompanyIdItemsgoodsGet"]=1
    operations["createItem"]=1
    operations["deleteItem"]=1
    operations["updateItem"]=1
    operations["companiesCompanyIdItemsCodeChangeCodePut"]=1
    operations["companiesCompanyIdItemsCodeserviceGet"]=1
    operations["companiesCompanyIdItemsserviceGet"]=1
    operations["createItemService"]=1
    operations["deleteItemService"]=1
    operations["updateItemService"]=1
    operations["companiesCompanyIdLocationsCodeGet"]=1
    operations["companiesCompanyIdLocationsGet"]=1
    operations["createLocation"]=1
    operations["deleteLocation"]=1
    operations["updateLocation"]=1
    operations["companiesCompanyIdProcessCodeGet"]=1
    operations["companiesCompanyIdProcessGet"]=1
    operations["createCustomProcessScenario"]=1
    operations["deleteCustomProcessScenario"]=1
    operations["updateCustomProcessScenario"]=1
    operations["companiesCompanyIdTaxratesGet"]=1
    operations["companiesCompanyIdTaxratesTaxTypeGet"]=1
    operations["createCustomTaxes"]=1
    operations["deleteCustomTaxes"]=1
    operations["updateCustomTaxes"]=1
    operations["calculationsgoodsPurchasePost"]=1
    operations["calculationsgoodsSalesPost"]=1
    operations["transactionsgoodsPurchasePost"]=1
    operations["transactionsgoodsSalesPost"]=1
    operations["invoiceDropContingency"]=1
    operations["invoiceSetContingency"]=1
    operations["invoiceVerifyContingency"]=1
    operations["invoicesNfceKeyGet"]=1
    operations["nfePrint"]=1
    operations["invoicesSefazDelete"]=1
    operations["invoicesSefazKeyDelete"]=1
    operations["invoicesSefazKeyGet"]=1
    operations["invoicesSefazKeyLookupGet"]=1
    operations["invoicesSefazKeyPut"]=1
    operations["invoicesSefazPost"]=1
    operations["invoicesSefazStatusGet"]=1
    operations["invoiceSettings"]=1
    operations["createReason."]=1
    operations["deleteReason."]=1
    operations["getReason."]=1
    operations["listReason"]=1
    operations["updateReason."]=1
    operations["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet"]=1
    operations["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeTransactionsPost"]=1
    operations["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeGet"]=1
    operations["calculationsservicePaymentPost"]=1
    operations["calculationsservicePurchasePost"]=1
    operations["calculationsserviceReceiptPost"]=1
    operations["calculationsserviceSalesPost"]=1
    operations["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet"]=1
    operations["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeStateTransitionsPost"]=1
    operations["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeGet"]=1
    operations["transactionsservicePaymentPost"]=1
    operations["transactionsservicePurchasePost"]=1
    operations["transactionsserviceReceiptPost"]=1
    operations["transactionsserviceSalesPost"]=1
    operations["createCfop"]=1
    operations["deleteCfop"]=1
    operations["getCfop"]=1
    operations["getCfopList"]=1
    operations["updateCfop"]=1
    operations["createIbptConf"]=1
    operations["deleteIbptConf"]=1
    operations["getIbptConf"]=1
    operations["getIbptConfList"]=1
    operations["updateIbptConf"]=1
    operations["createIcmsconfstate"]=1
    operations["deleteIcmsConf"]=1
    operations["getIcmsConfByState"]=1
    operations["getIcmsList"]=1
    operations["getIcmsList_0"]=1
    operations["updateIcmsconfstate"]=1
    operations["createIssConfByCity"]=1
    operations["deleteIssConf"]=1
    operations["getIssConfByCity"]=1
    operations["getIssList"]=1
    operations["updateIssConfByCity"]=1
    operations["createProcess"]=1
    operations["deleteProcess"]=1
    operations["getProcess"]=1
    operations["getProcessList"]=1
    operations["updateProcess"]=1

    # An associative array of operations to their parameters
    # Only include path, query and header parameters
    declare -A operation_parameters
    operation_parameters["agastsCodeGet"]="code= "
    operation_parameters["createAgast"]=""
    operation_parameters["deleteAgast"]="code= "
    operation_parameters["getAgastList"]="text= "
    operation_parameters["updateAgast"]="code= "
    operation_parameters["accountsAccountIdCompaniesGet"]="accountId= "
    operation_parameters["createAccountCompany"]="accountId= "
    operation_parameters["getZipCode"]="zipcode= "
    operation_parameters["authPost"]="Authorization: "
    operation_parameters["v2AuthPost"]="Authorization: "
    operation_parameters["companiesGet"]=""
    operation_parameters["createCompany"]=""
    operation_parameters["deleteAccountCompany"]="accountId= companyId= "
    operation_parameters["deleteCompany"]="companyId= companyId= "
    operation_parameters["infoCompany"]="companyId= "
    operation_parameters["updateCompany"]="companyId= "
    operation_parameters["companiesCompanyIdAgastsCodeGet"]="companyId= code= parent= "
    operation_parameters["companiesCompanyIdAgastsGet"]="companyId= text= agast= parent= X-Pagination-Limit: X-Pagination-Current-Page: X-Pagination-Sort: "
    operation_parameters["createCustomAgast"]="companyId= text= "
    operation_parameters["deleteAgast"]="companyId= code= "
    operation_parameters["updateCustomAgast"]="companyId= code= "
    operation_parameters["companiesCompanyIdNfseCertificateDelete"]="companyId= companyId= "
    operation_parameters["companiesCompanyIdNfseCertificateGet"]="companyId= companyId= peek= "
    operation_parameters["companiesCompanyIdNfseCertificatePost"]="companyId= "
    operation_parameters["companiesCompanyIdNfseCertificatePut"]="companyId= companyId= "
    operation_parameters["companiesCompanyIdIcmsGet"]="companyId= X-Pagination-Limit: X-Pagination-Current-Page: X-Pagination-Sort: "
    operation_parameters["companiesCompanyIdIcmsStateGet"]="companyId= state= "
    operation_parameters["createICMS"]="companyId= "
    operation_parameters["deleteCustomIcmsConfByState"]="companyId= state= "
    operation_parameters["updateCustomIcmsConfByState"]="companyId= state= "
    operation_parameters["companiesCompanyIdItemsCodeCpomCityCodeGet"]="companyId= code= cityCode= "
    operation_parameters["companiesCompanyIdItemsCodeCpomGet"]="companyId= code= X-Pagination-Limit: X-Pagination-Current-Page: X-Pagination-Sort: "
    operation_parameters["createItemCPOM"]="companyId= code= "
    operation_parameters["deleteItemCPOM"]="companyId= code= cityCode= "
    operation_parameters["updateItemCPOM"]="companyId= code= cityCode= "
    operation_parameters["companiesCompanyIdItemsCodeChangeCodePut"]="companyId= code= goods= service= "
    operation_parameters["companiesCompanyIdItemsCodegoodsGet"]="companyId= code= agast= Avalara-Product-Type: "
    operation_parameters["companiesCompanyIdItemsgoodsGet"]="companyId= code= agast= Avalara-Product-Type: X-Pagination-Limit: X-Pagination-Current-Page: X-Pagination-Sort: "
    operation_parameters["createItem"]="companyId= Avalara-Product-Type: "
    operation_parameters["deleteItem"]="companyId= code= Avalara-Product-Type: "
    operation_parameters["updateItem"]="companyId= code= Avalara-Product-Type: "
    operation_parameters["companiesCompanyIdItemsCodeChangeCodePut"]="companyId= code= goods= service= "
    operation_parameters["companiesCompanyIdItemsCodeserviceGet"]="companyId= code= agast= Avalara-Product-Type: "
    operation_parameters["companiesCompanyIdItemsserviceGet"]="companyId= code= agast= Avalara-Product-Type: X-Pagination-Limit: X-Pagination-Current-Page: X-Pagination-Sort: "
    operation_parameters["createItemService"]="companyId= Avalara-Product-Type: "
    operation_parameters["deleteItemService"]="companyId= code= Avalara-Product-Type: "
    operation_parameters["updateItemService"]="companyId= code= Avalara-Product-Type: "
    operation_parameters["companiesCompanyIdLocationsCodeGet"]="companyId= code= "
    operation_parameters["companiesCompanyIdLocationsGet"]="companyId= X-Pagination-Limit: X-Pagination-Current-Page: X-Pagination-Sort: "
    operation_parameters["createLocation"]="companyId= "
    operation_parameters["deleteLocation"]="companyId= code= "
    operation_parameters["updateLocation"]="companyId= code= "
    operation_parameters["companiesCompanyIdProcessCodeGet"]="companyId= code= "
    operation_parameters["companiesCompanyIdProcessGet"]="companyId= X-Pagination-Limit: X-Pagination-Current-Page: X-Pagination-Sort: "
    operation_parameters["createCustomProcessScenario"]="companyId= "
    operation_parameters["deleteCustomProcessScenario"]="companyId= code= "
    operation_parameters["updateCustomProcessScenario"]="companyId= code= "
    operation_parameters["companiesCompanyIdTaxratesGet"]="companyId= X-Pagination-Limit: X-Pagination-Current-Page: X-Pagination-Sort: "
    operation_parameters["companiesCompanyIdTaxratesTaxTypeGet"]="companyId= taxType= "
    operation_parameters["createCustomTaxes"]="companyId= "
    operation_parameters["deleteCustomTaxes"]="companyId= taxType= "
    operation_parameters["updateCustomTaxes"]="companyId= taxType= "
    operation_parameters["calculationsgoodsPurchasePost"]="Authorization: "
    operation_parameters["calculationsgoodsSalesPost"]="Authorization: "
    operation_parameters["transactionsgoodsPurchasePost"]="Authorization: "
    operation_parameters["transactionsgoodsSalesPost"]="Authorization: "
    operation_parameters["invoiceDropContingency"]="state= "
    operation_parameters["invoiceSetContingency"]="state= "
    operation_parameters["invoiceVerifyContingency"]="state= "
    operation_parameters["invoicesNfceKeyGet"]="key= Authorization: "
    operation_parameters["nfePrint"]="key= Authorization: "
    operation_parameters["invoicesSefazDelete"]="Authorization: "
    operation_parameters["invoicesSefazKeyDelete"]="key= Authorization: "
    operation_parameters["invoicesSefazKeyGet"]="key= Authorization: "
    operation_parameters["invoicesSefazKeyLookupGet"]="key= Authorization: "
    operation_parameters["invoicesSefazKeyPut"]="key= Authorization: "
    operation_parameters["invoicesSefazPost"]="Authorization: "
    operation_parameters["invoicesSefazStatusGet"]="Authorization: "
    operation_parameters["invoiceSettings"]=""
    operation_parameters["createReason."]=""
    operation_parameters["deleteReason."]="uuid= "
    operation_parameters["getReason."]="uuid= "
    operation_parameters["listReason"]="companyId= "
    operation_parameters["updateReason."]=""
    operation_parameters["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet"]="accountId= companyCode= transactionType= documentCode= Authorization: "
    operation_parameters["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeTransactionsPost"]="accountId= companyCode= transactionType= documentCode= Authorization: "
    operation_parameters["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeGet"]="accountId= companyCode= transactionType= Authorization: "
    operation_parameters["calculationsservicePaymentPost"]="Authorization: "
    operation_parameters["calculationsservicePurchasePost"]="Authorization: "
    operation_parameters["calculationsserviceReceiptPost"]="Authorization: "
    operation_parameters["calculationsserviceSalesPost"]="Authorization: "
    operation_parameters["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet"]="accountId= companyCode= transactionType= documentCode= Authorization: "
    operation_parameters["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeStateTransitionsPost"]="accountId= companyCode= transactionType= documentCode= Authorization: "
    operation_parameters["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeGet"]="accountId= companyCode= transactionType= Authorization: "
    operation_parameters["transactionsservicePaymentPost"]="Authorization: "
    operation_parameters["transactionsservicePurchasePost"]="Authorization: "
    operation_parameters["transactionsserviceReceiptPost"]="Authorization: "
    operation_parameters["transactionsserviceSalesPost"]="Authorization: "
    operation_parameters["createCfop"]=""
    operation_parameters["deleteCfop"]="code= "
    operation_parameters["getCfop"]="code= "
    operation_parameters["getCfopList"]="suffixcode= date= inactive= "
    operation_parameters["updateCfop"]="code= "
    operation_parameters["createIbptConf"]=""
    operation_parameters["deleteIbptConf"]="code= "
    operation_parameters["getIbptConf"]="code= "
    operation_parameters["getIbptConfList"]="accountId= date= inactive= "
    operation_parameters["updateIbptConf"]="code= "
    operation_parameters["createIcmsconfstate"]="state= "
    operation_parameters["deleteIcmsConf"]="state= code= "
    operation_parameters["getIcmsConfByState"]="state= code= "
    operation_parameters["getIcmsList"]="state= suffixcode= date= inactive= "
    operation_parameters["getIcmsList_0"]="text= state= "
    operation_parameters["updateIcmsconfstate"]="state= code= "
    operation_parameters["createIssConfByCity"]=""
    operation_parameters["deleteIssConf"]="cityCode= "
    operation_parameters["getIssConfByCity"]="cityCode= code= date= inactive= "
    operation_parameters["getIssList"]="suffixcode= date= inactive= "
    operation_parameters["updateIssConfByCity"]="cityCode= "
    operation_parameters["createProcess"]=""
    operation_parameters["deleteProcess"]="code= "
    operation_parameters["getProcess"]="code= "
    operation_parameters["getProcessList"]="accountId= date= inactive= "
    operation_parameters["updateProcess"]="code= "
    
    # An associative array of possible values for enum parameters
    declare -A operation_parameters_enum_values
    operation_parameters_enum_values["companiesCompanyIdIcmsStateGet::state"]=""
    operation_parameters_enum_values["companiesCompanyIdIcmsStateGet::state"]=""
    operation_parameters_enum_values["deleteCustomIcmsConfByState::state"]=""
    operation_parameters_enum_values["deleteCustomIcmsConfByState::state"]=""
    operation_parameters_enum_values["updateCustomIcmsConfByState::state"]=""
    operation_parameters_enum_values["updateCustomIcmsConfByState::state"]=""
    operation_parameters_enum_values["updateCustomIcmsConfByState::state"]=""
    operation_parameters_enum_values["companiesCompanyIdTaxratesTaxTypeGet::taxType"]=""
    operation_parameters_enum_values["companiesCompanyIdTaxratesTaxTypeGet::taxType"]=""
    operation_parameters_enum_values["deleteCustomTaxes::taxType"]=""
    operation_parameters_enum_values["deleteCustomTaxes::taxType"]=""
    operation_parameters_enum_values["updateCustomTaxes::taxType"]=""
    operation_parameters_enum_values["updateCustomTaxes::taxType"]=""
    operation_parameters_enum_values["updateCustomTaxes::taxType"]=""
    operation_parameters_enum_values["invoiceDropContingency::state"]=""
    operation_parameters_enum_values["invoiceSetContingency::state"]=""
    operation_parameters_enum_values["invoiceSetContingency::state"]=""
    operation_parameters_enum_values["invoiceVerifyContingency::state"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeTransactionsPost::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeTransactionsPost::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeTransactionsPost::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeTransactionsPost::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeTransactionsPost::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeGet::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeGet::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeGet::transactionType"]=""
    operation_parameters_enum_values["calculationsAccountAccountIdCompanyCompanyCodeTransactionTypeGet::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeGet::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeStateTransitionsPost::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeStateTransitionsPost::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeStateTransitionsPost::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeStateTransitionsPost::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeStateTransitionsPost::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeDocumentCodeStateTransitionsPost::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeGet::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeGet::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeGet::transactionType"]=""
    operation_parameters_enum_values["transactionsAccountAccountIdCompanyCompanyCodeTransactionTypeGet::transactionType"]=""
    operation_parameters_enum_values["getCfopList::inactive"]="true false"
    operation_parameters_enum_values["getCfopList::inactive"]="true false"
    operation_parameters_enum_values["getCfopList::inactive"]="true false"
    operation_parameters_enum_values["getIbptConfList::inactive"]="true false"
    operation_parameters_enum_values["getIbptConfList::inactive"]="true false"
    operation_parameters_enum_values["getIbptConfList::inactive"]="true false"
    operation_parameters_enum_values["createIcmsconfstate::state"]=""
    operation_parameters_enum_values["createIcmsconfstate::state"]=""
    operation_parameters_enum_values["deleteIcmsConf::state"]=""
    operation_parameters_enum_values["deleteIcmsConf::state"]=""
    operation_parameters_enum_values["getIcmsConfByState::state"]=""
    operation_parameters_enum_values["getIcmsConfByState::state"]=""
    operation_parameters_enum_values["getIcmsList::state"]=""
    operation_parameters_enum_values["getIcmsList::inactive"]="true false"
    operation_parameters_enum_values["getIcmsList::state"]=""
    operation_parameters_enum_values["getIcmsList::inactive"]="true false"
    operation_parameters_enum_values["getIcmsList::state"]=""
    operation_parameters_enum_values["getIcmsList::inactive"]="true false"
    operation_parameters_enum_values["getIcmsList::state"]=""
    operation_parameters_enum_values["getIcmsList::inactive"]="true false"
    operation_parameters_enum_values["updateIcmsconfstate::state"]=""
    operation_parameters_enum_values["updateIcmsconfstate::state"]=""
    operation_parameters_enum_values["updateIcmsconfstate::state"]=""
    operation_parameters_enum_values["getIssConfByCity::inactive"]="true false"
    operation_parameters_enum_values["getIssConfByCity::inactive"]="true false"
    operation_parameters_enum_values["getIssConfByCity::inactive"]="true false"
    operation_parameters_enum_values["getIssConfByCity::inactive"]="true false"
    operation_parameters_enum_values["getIssList::inactive"]="true false"
    operation_parameters_enum_values["getIssList::inactive"]="true false"
    operation_parameters_enum_values["getIssList::inactive"]="true false"
    operation_parameters_enum_values["getProcessList::inactive"]="true false"
    operation_parameters_enum_values["getProcessList::inactive"]="true false"
    operation_parameters_enum_values["getProcessList::inactive"]="true false"

    #
    # Check if the _init_completion function is available, which is 
    # available since bash-completion 1.4
    #
    if declare -F _init_completions >/dev/null 2>&1; then
        _init_completion -s || return
    else
        __osx_init_completion || return
    fi


    # Check if operation is already in the command line provided
    for word in "${words[@]}"; do
        if [[ -n $word && ${operations[$word]} ]]; then
            operation="${word}"
        fi
    done

    if [[ -z $operation ]]; then
        case $prev in
            --ciphers|--connect-timeout|-C|--continue-at|-F|--form|--form-string|\
            --ftp-account|--ftp-alternative-to-user|-P|--ftp-port|-H|--header|-h|\
            --help|--hostpubmd5|--keepalive-time|--krb|--limit-rate|--local-port|\
            --mail-from|--mail-rcpt|--max-filesize|--max-redirs|-m|--max-time|\
            --pass|--proto|--proto-redir|--proxy-user|--proxy1.0|-Q|--quote|-r|\
            --range|-X|--request|--retry|--retry-delay|--retry-max-time|\
            --socks5-gssapi-service|-t|--telnet-option|--tftp-blksize|-z|\
            --time-cond|--url|-u|--user|-A|--user-agent|-V|--version|-w|\
            --write-out|--resolve|--tlsuser|--tlspassword|--about)
                return
                ;;
            -K|--config|-b|--cookie|-c|--cookie-jar|-D|--dump-header|--egd-file|\
            --key|--libcurl|-o|--output|--random-file|-T|--upload-file|--trace|\
            --trace-ascii|--netrc-file)
                _filedir
                return
                ;;
            --cacert|-E|--cert)
                _filedir '@(c?(e)rt|cer|pem|der)'
                return
                ;;
            --capath)
                _filedir -d
                return
                ;;
            --cert-type|--key-type)
                COMPREPLY=( $( compgen -W 'DER PEM ENG' -- "$cur" ) )
                return
                ;;
            --crlfile)
                _filedir crl
                return
                ;;
            -d|--data|--data-ascii|--data-binary|--data-urlencode)
                if [[ $cur == \@* ]]; then
                    cur=${cur:1}
                    _filedir
                    COMPREPLY=( "${COMPREPLY[@]/#/@}" )
                fi
                return
                ;;
            --delegation)
                COMPREPLY=( $( compgen -W 'none policy always' -- "$cur" ) )
                return
                ;;
            --engine)
                COMPREPLY=( $( compgen -W 'list' -- "$cur" ) )
                return
                ;;
            --ftp-method)
                COMPREPLY=( $( compgen -W 'multicwd nocwd singlecwd' -- "$cur" ) )
                return
                ;;
            --ftp-ssl-ccc-mode)
                COMPREPLY=( $( compgen -W 'active passive' -- "$cur" ) )
                return
                ;;
            --interface)
                _available_interfaces -a
                return
                ;;
            -x|--proxy|--socks4|--socks4a|--socks5|--socks5-hostname)
                _known_hosts_real
                return
                ;;
            --pubkey)
                _filedir pub
                return
                ;;
            --stderr)
                COMPREPLY=( $( compgen -W '-' -- "$cur" ) )
                _filedir
                return
                ;;
            --tlsauthtype)
                COMPREPLY=( $( compgen -W 'SRP' -- "$cur" ) )
                return
                ;;
            --host)
                COMPREPLY=( $( compgen -W 'http:// https://' -- "$cur" ) )
                return
                ;;
            -ct|--content-type|-ac|--accept)
                COMPREPLY=( $( compgen -W '${!mime_type_abbreviations[*]}' -- "$cur" ) )
                return
                ;;
        esac
    fi

    #
    # Complete the server address based on ~/.ssh/known_hosts 
    # and ~/.ssh/config
    #
    # \todo Fix - cur matches only '//' when $prev is ':'
    #
    if [[ "$cur" == "http://" || "$cur" == "https://" ]]; then
        COMPREPLY=()
        local comp_ssh_hosts=`cat ~/.ssh/known_hosts | \
                        cut -f 1 -d ' ' | \
                        sed -e s/,.*//g | \
                        grep -v ^# | \
                        uniq | \
                        grep -v "\[" ;
                        cat ~/.ssh/config | \
                        grep "^Host " | \
                        awk '{print $2}'`
        COMPREPLY=( $(compgen -W "${comp_ssh_hosts}" -- $cur))
        return
    fi

    #
    # Complete the  and cURL's arguments
    #
    if [[ $cur == -* ]]; then
        COMPREPLY=( $( compgen -W '$(_parse_help curl) $(_parse_help $1)' -- "$cur" ) )
        return
    fi

    #
    # If the argument starts with a letter this could be either an operation
    # or an operation parameter
    # When $cur is empty, suggest the list of operations by default
    #
    if [[ $cur =~ ^[A-Za-z_0-9]* ]]; then
        # If operation has not been yet selected, suggest the list of operations
        # otherwise suggest arguments of this operation as declared in the 
        # Swagger specification
        if [[ -z $operation ]]; then
            COMPREPLY=( $(compgen -W '${!operations[*]}' -- ${cur}) )
        else
            COMPREPLY=( $(compgen -W '${operation_parameters[$operation]}' -- ${cur}) )
        fi
        return
    fi

} &&
complete -F _ 

# ex: ts=4 sw=4 et filetype=sh