/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import * as models from './models';

export interface Location {
    /**
     * Street Name
     */
    street?: string;

    /**
     * Neighborhood Name
     */
    neighborhood?: string;

    /**
     * Brazilian Zip Code
     */
    zipcode: string;

    /**
     * City Code (IBGE)
     */
    cityCode?: string;

    /**
     * City Name
     */
    cityName?: string;

    state?: models.StateEnum;

    /**
     * Country Code
     */
    countryCode?: string;

    /**
     * Use ISO 3166-1 alpha-3 codes
     */
    country?: string;

    /**
     * House number
     */
    number?: string;

    /**
     * Any other information about the address (Room, Suite, Floor, etc)).
     */
    complement?: string;

    /**
     * Phone number
     */
    phone?: string;

    /**
     * Company ID
     */
    companyId: string;

    /**
     * this property identify the location, it is unique for this company
     */
    code: string;

    /**
     * this property identify the location, it is unique for this company
     */
    type: Location.TypeEnum;

    /**
     * Email
     */
    email?: string;

    /**
     * Federal tax id, CNPJ or CPF
     */
    federalTaxId?: string;

    /**
     * state tax id for this location
     */
    stateTaxId?: string;

    secondaryStateTaxId?: Array<models.LocationSecondaryStateTaxId>;

    /**
     * City Tax ID
     */
    cityTaxId?: string;

    suframa?: string;

    /**
     * Main location activity
     */
    mainActivity?: Location.MainActivityEnum;

    /**
     * - 'edi' # City hall has web service and the integration is automatic - 'xml' # Create RPS specific to City, bat does not have webservice integration - 'rps' # Create a generic RPS, NF is by hands 
     */
    nfseProcessModel?: Location.NfseProcessModelEnum;

}
export namespace Location {
    export enum TypeEnum {
        ShipFrom = <any> 'ShipFrom',
        ShipTo = <any> 'ShipTo',
        ServiceRendered = <any> 'ServiceRendered'
    }
    export enum MainActivityEnum {
        Commerce = <any> 'commerce',
        Industry = <any> 'industry',
        Service = <any> 'service'
    }
    export enum NfseProcessModelEnum {
        Edi = <any> 'edi',
        Xml = <any> 'xml',
        Rps = <any> 'rps'
    }
}
