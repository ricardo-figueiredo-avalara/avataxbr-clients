/* 
 * AvaTax Brazil
 *
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing LegalReasonApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LegalReasonApiTests
    {
        private LegalReasonApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LegalReasonApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LegalReasonApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LegalReasonApi
            //Assert.IsInstanceOfType(typeof(LegalReasonApi), instance, "instance is a LegalReasonApi");
        }

        
        /// <summary>
        /// Test CreateReason_
        /// </summary>
        [Test]
        public void CreateReason_Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LegalReason body = null;
            //var response = instance.CreateReason_(body);
            //Assert.IsInstanceOf<InlineResponse201> (response, "response is InlineResponse201");
        }
        
        /// <summary>
        /// Test DeleteReason_
        /// </summary>
        [Test]
        public void DeleteReason_Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //instance.DeleteReason_(uuid);
            
        }
        
        /// <summary>
        /// Test GetReason_
        /// </summary>
        [Test]
        public void GetReason_Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //var response = instance.GetReason_(uuid);
            //Assert.IsInstanceOf<ProcessScenario> (response, "response is ProcessScenario");
        }
        
        /// <summary>
        /// Test ListReason
        /// </summary>
        [Test]
        public void ListReasonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string companyId = null;
            //var response = instance.ListReason(companyId);
            //Assert.IsInstanceOf<List<LegalReason>> (response, "response is List<LegalReason>");
        }
        
        /// <summary>
        /// Test UpdateReason_
        /// </summary>
        [Test]
        public void UpdateReason_Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LegalReason body = null;
            //instance.UpdateReason_(body);
            
        }
        
    }

}
