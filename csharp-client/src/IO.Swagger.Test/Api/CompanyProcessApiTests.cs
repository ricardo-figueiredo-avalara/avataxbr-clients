/* 
 * BR16 - API
 *
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CompanyProcessApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CompanyProcessApiTests
    {
        private CompanyProcessApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CompanyProcessApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CompanyProcessApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CompanyProcessApi
            //Assert.IsInstanceOfType(typeof(CompanyProcessApi), instance, "instance is a CompanyProcessApi");
        }

        
        /// <summary>
        /// Test CompaniesCompanyIdProcessCodeGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdProcessCodeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //var response = instance.CompaniesCompanyIdProcessCodeGet(companyId, code);
            //Assert.IsInstanceOf<CustomProcessScenario> (response, "response is CustomProcessScenario");
        }
        
        /// <summary>
        /// Test CompaniesCompanyIdProcessGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdProcessGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //int? xPaginationLimit = null;
            //int? xPaginationCurrentPage = null;
            //string xPaginationSort = null;
            //var response = instance.CompaniesCompanyIdProcessGet(companyId, xPaginationLimit, xPaginationCurrentPage, xPaginationSort);
            //Assert.IsInstanceOf<List<CustomProcessScenario>> (response, "response is List<CustomProcessScenario>");
        }
        
        /// <summary>
        /// Test CreateCustomProcessScenario
        /// </summary>
        [Test]
        public void CreateCustomProcessScenarioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //CustomProcessScenario body = null;
            //var response = instance.CreateCustomProcessScenario(companyId, body);
            //Assert.IsInstanceOf<InlineResponse201> (response, "response is InlineResponse201");
        }
        
        /// <summary>
        /// Test DeleteCustomProcessScenario
        /// </summary>
        [Test]
        public void DeleteCustomProcessScenarioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //instance.DeleteCustomProcessScenario(companyId, code);
            
        }
        
        /// <summary>
        /// Test UpdateCustomProcessScenario
        /// </summary>
        [Test]
        public void UpdateCustomProcessScenarioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //CustomProcessScenario body = null;
            //instance.UpdateCustomProcessScenario(companyId, code, body);
            
        }
        
    }

}
