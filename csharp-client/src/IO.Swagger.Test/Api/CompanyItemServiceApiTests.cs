/* 
 * BR16 - API
 *
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CompanyItemServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CompanyItemServiceApiTests
    {
        private CompanyItemServiceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CompanyItemServiceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CompanyItemServiceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CompanyItemServiceApi
            //Assert.IsInstanceOfType(typeof(CompanyItemServiceApi), instance, "instance is a CompanyItemServiceApi");
        }

        
        /// <summary>
        /// Test CompaniesCompanyIdItemsCodeChangeCodePut
        /// </summary>
        [Test]
        public void CompaniesCompanyIdItemsCodeChangeCodePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //Body1 body = null;
            //string goods = null;
            //string service = null;
            //instance.CompaniesCompanyIdItemsCodeChangeCodePut(companyId, code, body, goods, service);
            
        }
        
        /// <summary>
        /// Test CompaniesCompanyIdItemsCodeserviceGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdItemsCodeserviceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //string avalaraProductType = null;
            //string agast = null;
            //var response = instance.CompaniesCompanyIdItemsCodeserviceGet(companyId, code, avalaraProductType, agast);
            //Assert.IsInstanceOf<ItemSimple> (response, "response is ItemSimple");
        }
        
        /// <summary>
        /// Test CompaniesCompanyIdItemsserviceGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdItemsserviceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string avalaraProductType = null;
            //int? xPaginationLimit = null;
            //int? xPaginationCurrentPage = null;
            //string xPaginationSort = null;
            //string code = null;
            //string agast = null;
            //var response = instance.CompaniesCompanyIdItemsserviceGet(companyId, avalaraProductType, xPaginationLimit, xPaginationCurrentPage, xPaginationSort, code, agast);
            //Assert.IsInstanceOf<List<ItemSimple>> (response, "response is List<ItemSimple>");
        }
        
        /// <summary>
        /// Test CreateItemService
        /// </summary>
        [Test]
        public void CreateItemServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //ItemSimple body = null;
            //string avalaraProductType = null;
            //var response = instance.CreateItemService(companyId, body, avalaraProductType);
            //Assert.IsInstanceOf<InlineResponse201> (response, "response is InlineResponse201");
        }
        
        /// <summary>
        /// Test DeleteItemService
        /// </summary>
        [Test]
        public void DeleteItemServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //string avalaraProductType = null;
            //instance.DeleteItemService(companyId, code, avalaraProductType);
            
        }
        
        /// <summary>
        /// Test UpdateItemService
        /// </summary>
        [Test]
        public void UpdateItemServiceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //ItemSimple body = null;
            //string avalaraProductType = null;
            //instance.UpdateItemService(companyId, code, body, avalaraProductType);
            
        }
        
    }

}
