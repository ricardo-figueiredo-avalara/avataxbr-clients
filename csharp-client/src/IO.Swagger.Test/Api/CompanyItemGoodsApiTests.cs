/* 
 * AvaTax Brazil
 *
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CompanyItemGoodsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CompanyItemGoodsApiTests
    {
        private CompanyItemGoodsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CompanyItemGoodsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CompanyItemGoodsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CompanyItemGoodsApi
            //Assert.IsInstanceOfType(typeof(CompanyItemGoodsApi), instance, "instance is a CompanyItemGoodsApi");
        }

        
        /// <summary>
        /// Test CompaniesCompanyIdItemsCodeChangeCodePut
        /// </summary>
        [Test]
        public void CompaniesCompanyIdItemsCodeChangeCodePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //Body1 body = null;
            //string goods = null;
            //string service = null;
            //instance.CompaniesCompanyIdItemsCodeChangeCodePut(companyId, code, body, goods, service);
            
        }
        
        /// <summary>
        /// Test CompaniesCompanyIdItemsCodegoodsGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdItemsCodegoodsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //string avalaraProductType = null;
            //string agast = null;
            //var response = instance.CompaniesCompanyIdItemsCodegoodsGet(companyId, code, avalaraProductType, agast);
            //Assert.IsInstanceOf<ItemGoods> (response, "response is ItemGoods");
        }
        
        /// <summary>
        /// Test CompaniesCompanyIdItemsgoodsGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdItemsgoodsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string avalaraProductType = null;
            //int? xPaginationLimit = null;
            //int? xPaginationCurrentPage = null;
            //string xPaginationSort = null;
            //string code = null;
            //string agast = null;
            //var response = instance.CompaniesCompanyIdItemsgoodsGet(companyId, avalaraProductType, xPaginationLimit, xPaginationCurrentPage, xPaginationSort, code, agast);
            //Assert.IsInstanceOf<List<ItemGoods>> (response, "response is List<ItemGoods>");
        }
        
        /// <summary>
        /// Test CreateItem
        /// </summary>
        [Test]
        public void CreateItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string avalaraProductType = null;
            //ItemGoods body = null;
            //var response = instance.CreateItem(companyId, avalaraProductType, body);
            //Assert.IsInstanceOf<InlineResponse201> (response, "response is InlineResponse201");
        }
        
        /// <summary>
        /// Test DeleteItem
        /// </summary>
        [Test]
        public void DeleteItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //string avalaraProductType = null;
            //instance.DeleteItem(companyId, code, avalaraProductType);
            
        }
        
        /// <summary>
        /// Test UpdateItem
        /// </summary>
        [Test]
        public void UpdateItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string code = null;
            //string avalaraProductType = null;
            //ItemGoods body = null;
            //instance.UpdateItem(companyId, code, avalaraProductType, body);
            
        }
        
    }

}
