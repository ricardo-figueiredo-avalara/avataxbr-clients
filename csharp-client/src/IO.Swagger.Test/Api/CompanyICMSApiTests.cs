/* 
 * BR16 - API
 *
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CompanyICMSApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CompanyICMSApiTests
    {
        private CompanyICMSApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CompanyICMSApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CompanyICMSApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CompanyICMSApi
            //Assert.IsInstanceOfType(typeof(CompanyICMSApi), instance, "instance is a CompanyICMSApi");
        }

        
        /// <summary>
        /// Test CompaniesCompanyIdIcmsGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdIcmsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //int? xPaginationLimit = null;
            //int? xPaginationCurrentPage = null;
            //string xPaginationSort = null;
            //var response = instance.CompaniesCompanyIdIcmsGet(companyId, xPaginationLimit, xPaginationCurrentPage, xPaginationSort);
            //Assert.IsInstanceOf<List<CustomIcmsConfByState>> (response, "response is List<CustomIcmsConfByState>");
        }
        
        /// <summary>
        /// Test CompaniesCompanyIdIcmsStateGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdIcmsStateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string state = null;
            //var response = instance.CompaniesCompanyIdIcmsStateGet(companyId, state);
            //Assert.IsInstanceOf<CustomIcmsConfByState> (response, "response is CustomIcmsConfByState");
        }
        
        /// <summary>
        /// Test CreateICMS
        /// </summary>
        [Test]
        public void CreateICMSTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //CustomIcmsConfByState body = null;
            //var response = instance.CreateICMS(companyId, body);
            //Assert.IsInstanceOf<InlineResponse201> (response, "response is InlineResponse201");
        }
        
        /// <summary>
        /// Test DeleteCustomIcmsConfByState
        /// </summary>
        [Test]
        public void DeleteCustomIcmsConfByStateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string state = null;
            //instance.DeleteCustomIcmsConfByState(companyId, state);
            
        }
        
        /// <summary>
        /// Test UpdateCustomIcmsConfByState
        /// </summary>
        [Test]
        public void UpdateCustomIcmsConfByStateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string state = null;
            //CustomIcmsConfByState body = null;
            //instance.UpdateCustomIcmsConfByState(companyId, state, body);
            
        }
        
    }

}
