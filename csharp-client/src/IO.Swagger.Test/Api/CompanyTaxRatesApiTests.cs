/* 
 * AvaTax Brazil
 *
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CompanyTaxRatesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CompanyTaxRatesApiTests
    {
        private CompanyTaxRatesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CompanyTaxRatesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CompanyTaxRatesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CompanyTaxRatesApi
            //Assert.IsInstanceOfType(typeof(CompanyTaxRatesApi), instance, "instance is a CompanyTaxRatesApi");
        }

        
        /// <summary>
        /// Test CompaniesCompanyIdTaxratesGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdTaxratesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //int? xPaginationLimit = null;
            //int? xPaginationCurrentPage = null;
            //string xPaginationSort = null;
            //var response = instance.CompaniesCompanyIdTaxratesGet(companyId, xPaginationLimit, xPaginationCurrentPage, xPaginationSort);
            //Assert.IsInstanceOf<List<CustomTaxTypeRate>> (response, "response is List<CustomTaxTypeRate>");
        }
        
        /// <summary>
        /// Test CompaniesCompanyIdTaxratesTaxTypeGet
        /// </summary>
        [Test]
        public void CompaniesCompanyIdTaxratesTaxTypeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string taxType = null;
            //var response = instance.CompaniesCompanyIdTaxratesTaxTypeGet(companyId, taxType);
            //Assert.IsInstanceOf<CustomTaxTypeRate> (response, "response is CustomTaxTypeRate");
        }
        
        /// <summary>
        /// Test CreateCustomTaxes
        /// </summary>
        [Test]
        public void CreateCustomTaxesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //CustomTaxTypeRate body = null;
            //var response = instance.CreateCustomTaxes(companyId, body);
            //Assert.IsInstanceOf<InlineResponse201> (response, "response is InlineResponse201");
        }
        
        /// <summary>
        /// Test DeleteCustomTaxes
        /// </summary>
        [Test]
        public void DeleteCustomTaxesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string taxType = null;
            //instance.DeleteCustomTaxes(companyId, taxType);
            
        }
        
        /// <summary>
        /// Test UpdateCustomTaxes
        /// </summary>
        [Test]
        public void UpdateCustomTaxesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? companyId = null;
            //string taxType = null;
            //CustomTaxTypeRate body = null;
            //instance.UpdateCustomTaxes(companyId, taxType, body);
            
        }
        
    }

}
