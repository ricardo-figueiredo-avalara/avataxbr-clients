/* 
 * BR16 - API
 *
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing InvoiceSEFAZApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class InvoiceSEFAZApiTests
    {
        private InvoiceSEFAZApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new InvoiceSEFAZApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InvoiceSEFAZApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' InvoiceSEFAZApi
            //Assert.IsInstanceOfType(typeof(InvoiceSEFAZApi), instance, "instance is a InvoiceSEFAZApi");
        }

        
        /// <summary>
        /// Test InvoicesSefazDelete
        /// </summary>
        [Test]
        public void InvoicesSefazDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //SefazDisableRangeIn body = null;
            //var response = instance.InvoicesSefazDelete(authorization, body);
            //Assert.IsInstanceOf<SefazInvoiceBasicStatus> (response, "response is SefazInvoiceBasicStatus");
        }
        
        /// <summary>
        /// Test InvoicesSefazKeyDelete
        /// </summary>
        [Test]
        public void InvoicesSefazKeyDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string key = null;
            //SefazItDeleteIn body = null;
            //var response = instance.InvoicesSefazKeyDelete(authorization, key, body);
            //Assert.IsInstanceOf<SefazInvoiceBasicStatus> (response, "response is SefazInvoiceBasicStatus");
        }
        
        /// <summary>
        /// Test InvoicesSefazKeyGet
        /// </summary>
        [Test]
        public void InvoicesSefazKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string key = null;
            //var response = instance.InvoicesSefazKeyGet(authorization, key);
            //Assert.IsInstanceOf<SefazItGetOut> (response, "response is SefazItGetOut");
        }
        
        /// <summary>
        /// Test InvoicesSefazKeyLookupGet
        /// </summary>
        [Test]
        public void InvoicesSefazKeyLookupGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string key = null;
            //var response = instance.InvoicesSefazKeyLookupGet(authorization, key);
            //Assert.IsInstanceOf<TransactionForSefazGoodsList> (response, "response is TransactionForSefazGoodsList");
        }
        
        /// <summary>
        /// Test InvoicesSefazKeyPut
        /// </summary>
        [Test]
        public void InvoicesSefazKeyPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string key = null;
            //SefazItPutIn body = null;
            //var response = instance.InvoicesSefazKeyPut(authorization, key, body);
            //Assert.IsInstanceOf<SefazInvoiceBasicStatus> (response, "response is SefazInvoiceBasicStatus");
        }
        
        /// <summary>
        /// Test InvoicesSefazPost
        /// </summary>
        [Test]
        public void InvoicesSefazPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //List<TransactionForSefazGoods> body = null;
            //var response = instance.InvoicesSefazPost(authorization, body);
            //Assert.IsInstanceOf<SefazPostOut> (response, "response is SefazPostOut");
        }
        
        /// <summary>
        /// Test InvoicesSefazStatusGet
        /// </summary>
        [Test]
        public void InvoicesSefazStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //var response = instance.InvoicesSefazStatusGet(authorization);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
