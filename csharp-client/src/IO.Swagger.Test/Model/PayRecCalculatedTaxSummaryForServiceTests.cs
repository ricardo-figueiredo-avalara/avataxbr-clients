/* 
 * AvaTax Brazil
 *
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PayRecCalculatedTaxSummaryForService
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class PayRecCalculatedTaxSummaryForServiceTests
    {
        // TODO uncomment below to declare an instance variable for PayRecCalculatedTaxSummaryForService
        //private PayRecCalculatedTaxSummaryForService instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of PayRecCalculatedTaxSummaryForService
            //instance = new PayRecCalculatedTaxSummaryForService();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PayRecCalculatedTaxSummaryForService
        /// </summary>
        [Test]
        public void PayRecCalculatedTaxSummaryForServiceInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" PayRecCalculatedTaxSummaryForService
            //Assert.IsInstanceOfType<PayRecCalculatedTaxSummaryForService> (instance, "variable 'instance' is a PayRecCalculatedTaxSummaryForService");
        }

        /// <summary>
        /// Test the property 'NumberOfLines'
        /// </summary>
        [Test]
        public void NumberOfLinesTest()
        {
            // TODO unit test for the property 'NumberOfLines'
        }
        /// <summary>
        /// Test the property 'Subtotal'
        /// </summary>
        [Test]
        public void SubtotalTest()
        {
            // TODO unit test for the property 'Subtotal'
        }
        /// <summary>
        /// Test the property 'TotalTax'
        /// </summary>
        [Test]
        public void TotalTaxTest()
        {
            // TODO unit test for the property 'TotalTax'
        }
        /// <summary>
        /// Test the property 'GrandTotal'
        /// </summary>
        [Test]
        public void GrandTotalTest()
        {
            // TODO unit test for the property 'GrandTotal'
        }
        /// <summary>
        /// Test the property 'PccWithholdingModes'
        /// </summary>
        [Test]
        public void PccWithholdingModesTest()
        {
            // TODO unit test for the property 'PccWithholdingModes'
        }
        /// <summary>
        /// Test the property 'TaxByType'
        /// </summary>
        [Test]
        public void TaxByTypeTest()
        {
            // TODO unit test for the property 'TaxByType'
        }

    }

}
