/* 
 * AvaTax Brazil
 *
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Transport
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class TransportTests
    {
        // TODO uncomment below to declare an instance variable for Transport
        //private Transport instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Transport
            //instance = new Transport();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Transport
        /// </summary>
        [Test]
        public void TransportInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Transport
            //Assert.IsInstanceOfType<Transport> (instance, "variable 'instance' is a Transport");
        }

        /// <summary>
        /// Test the property 'ModFreight'
        /// </summary>
        [Test]
        public void ModFreightTest()
        {
            // TODO unit test for the property 'ModFreight'
        }
        /// <summary>
        /// Test the property 'WithholdICMSTransport'
        /// </summary>
        [Test]
        public void WithholdICMSTransportTest()
        {
            // TODO unit test for the property 'WithholdICMSTransport'
        }
        /// <summary>
        /// Test the property 'Volumes'
        /// </summary>
        [Test]
        public void VolumesTest()
        {
            // TODO unit test for the property 'Volumes'
        }
        /// <summary>
        /// Test the property 'Vehicle'
        /// </summary>
        [Test]
        public void VehicleTest()
        {
            // TODO unit test for the property 'Vehicle'
        }

    }

}
