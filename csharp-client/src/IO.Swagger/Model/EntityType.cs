/* 
 * AvaTax Brazil
 *
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Entity Type (business, individual, federal government, state government, city government foreign)
    /// </summary>
    /// <value>Entity Type (business, individual, federal government, state government, city government foreign)</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum EntityType
    {
        
        /// <summary>
        /// Enum Business for "business"
        /// </summary>
        [EnumMember(Value = "business")]
        Business,
        
        /// <summary>
        /// Enum Individual for "individual"
        /// </summary>
        [EnumMember(Value = "individual")]
        Individual,
        
        /// <summary>
        /// Enum FederalGovernment for "federalGovernment"
        /// </summary>
        [EnumMember(Value = "federalGovernment")]
        FederalGovernment,
        
        /// <summary>
        /// Enum StateGovernment for "stateGovernment"
        /// </summary>
        [EnumMember(Value = "stateGovernment")]
        StateGovernment,
        
        /// <summary>
        /// Enum CityGovernment for "cityGovernment"
        /// </summary>
        [EnumMember(Value = "cityGovernment")]
        CityGovernment,
        
        /// <summary>
        /// Enum Foreign for "foreign"
        /// </summary>
        [EnumMember(Value = "foreign")]
        Foreign
    }

}
