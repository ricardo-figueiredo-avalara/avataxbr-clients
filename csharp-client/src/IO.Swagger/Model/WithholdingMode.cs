/* 
 * BR16 - API
 *
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Using the placing reference in PCC for PIS (P), COFINS (C) and COFINS (C).  x = tax is not subject to withholding.  - 'xxx' - 'PCC' - 'PCx' - 'PxC' - 'Pxx' - 'xCC' - 'xxC' - 'xCx' 
    /// </summary>
    /// <value>Using the placing reference in PCC for PIS (P), COFINS (C) and COFINS (C).  x = tax is not subject to withholding.  - 'xxx' - 'PCC' - 'PCx' - 'PxC' - 'Pxx' - 'xCC' - 'xxC' - 'xCx' </value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum WithholdingMode
    {
        
        /// <summary>
        /// Enum Xxx for "xxx"
        /// </summary>
        [EnumMember(Value = "xxx")]
        Xxx,
        
        /// <summary>
        /// Enum PCC for "PCC"
        /// </summary>
        [EnumMember(Value = "PCC")]
        PCC,
        
        /// <summary>
        /// Enum PCx for "PCx"
        /// </summary>
        [EnumMember(Value = "PCx")]
        PCx,
        
        /// <summary>
        /// Enum PxC for "PxC"
        /// </summary>
        [EnumMember(Value = "PxC")]
        PxC,
        
        /// <summary>
        /// Enum Pxx for "Pxx"
        /// </summary>
        [EnumMember(Value = "Pxx")]
        Pxx,
        
        /// <summary>
        /// Enum XCC for "xCC"
        /// </summary>
        [EnumMember(Value = "xCC")]
        XCC,
        
        /// <summary>
        /// Enum XxC for "xxC"
        /// </summary>
        [EnumMember(Value = "xxC")]
        XxC,
        
        /// <summary>
        /// Enum XCx for "xCx"
        /// </summary>
        [EnumMember(Value = "xCx")]
        XCx
    }

}
