/* 
 * BR16 - API
 *
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

package swagger

type LineForSefazGoods struct {

	// This string is a unique identifier for this line in the transaction
	LineCode int32 `json:"lineCode,omitempty"`

	// This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states.
	ItemCode string `json:"itemCode,omitempty"`

	// AGAST CODE for itemCode
	AvalaraGoodsAndServicesType string `json:"avalaraGoodsAndServicesType,omitempty"`

	// This decimal 11 integers and 1 to 4 decimals captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1
	NumberOfItems float64 `json:"numberOfItems,omitempty"`

	// when is return operation this field inform the percentage of returned itens. This decimal max 3 integers and 2 decimals, v >=0.00 and v <= 100.00
	ReturnedPercentageAmount float64 `json:"returnedPercentageAmount,omitempty"`

	// This decimal 11 integers and 1 to 10 decimals captures the unit price of this line.
	LineUnitPrice float64 `json:"lineUnitPrice,omitempty"`

	// In its simplest form lineAmount = (item price * numberOfItems). If taxIncluded is 'true', lineAmount = (item price * numberOfItems + tax).
	LineAmount float64 `json:"lineAmount,omitempty"`

	// This string captures the description of the item represented by this line, will be used LC 116
	ItemDescription string `json:"itemDescription,omitempty"`

	// Discount conditional, This decimal 13 integers and 0 to 2 decimals
	LineTaxedDiscount float64 `json:"lineTaxedDiscount,omitempty"`

	// discount unconditional, This decimal 13 integers and 0 to 2 decimals
	LineUntaxedDiscount float64 `json:"lineUntaxedDiscount,omitempty"`

	// This is a enumeration folowing table
	UseType string `json:"useType,omitempty"`

	// Reference to process configurantion of this transaction, See ProcessScenario definition
	ProcessScenario string `json:"processScenario,omitempty"`

	// Fiscal Operation Code of transport service
	Cfop int32 `json:"cfop,omitempty"`

	// return if this transaction has stock impact for this process or CFOP
	HasStockImpact bool `json:"hasStockImpact,omitempty"`

	// return if this transaction has finantial impact for this process or CFOP
	HasFinantialImpact bool `json:"hasFinantialImpact,omitempty"`

	// This decimal 13 integers and 0 to 2 decimals
	FreightAmount float64 `json:"freightAmount,omitempty"`

	// This decimal 13 integers and 0 to 2 decimals
	InsuranceAmount float64 `json:"insuranceAmount,omitempty"`

	// This decimal 13 integers and 0 to 2 decimals
	OtherCostAmount float64 `json:"otherCostAmount,omitempty"`

	// The item value will compose the invoice total value.
	IndTotType bool `json:"indTotType,omitempty"`

	// order number, information used for B2B control process
	OrderNumber string `json:"orderNumber,omitempty"`

	// number of the item from order number, information used for B2B control process
	OrderItemNumber string `json:"orderItemNumber,omitempty"`

	// Gloal Unique identifier (Importation form)
	FciNumber string `json:"fciNumber,omitempty"`

	// RECOPI number
	RecopiNumber string `json:"recopiNumber,omitempty"`

	// additional information about product (referenced standard, complementary info, etc)
	InfAdProd string `json:"infAdProd,omitempty"`

	Vehicle Vehicle `json:"vehicle,omitempty"`

	Medicine Medicine `json:"medicine,omitempty"`

	Weapon Weapon `json:"weapon,omitempty"`

	Fuel Fuel `json:"fuel,omitempty"`

	// Inform that for this item the Entity referenced is ICMS Substitute
	EntityIsIcmsSubstitute bool `json:"entityIsIcmsSubstitute,omitempty"`

	// Inform that this item has ICMS withheld for transport value service.
	IsTransportIcmsWithheld bool `json:"isTransportIcmsWithheld,omitempty"`

	IcmsTaxRelief LineForGoodsIcmsTaxRelief `json:"icmsTaxRelief,omitempty"`

	// Exportation detail
	Export []LineForGoodsExport `json:"export,omitempty"`

	// Import declaration
	Di []LineForGoodsDi `json:"di,omitempty"`

	CalculatedTax LineForGoodsCalculatedTax `json:"calculatedTax,omitempty"`

	Extend AgastExtendForSefaz `json:"extend,omitempty"`
}
