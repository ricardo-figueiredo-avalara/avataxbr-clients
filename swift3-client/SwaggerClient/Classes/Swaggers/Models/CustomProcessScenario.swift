//
// CustomProcessScenario.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class CustomProcessScenario: JSONEncodable {
    public enum CstIPI: String { 
        case 50 = "50"
        case 51 = "51"
        case 52 = "52"
        case 53 = "53"
        case 54 = "54"
    }
    public enum AccruablePISTaxation: String { 
        case t = "T"
        case z = "Z"
        case e = "E"
        case h = "H"
        case n = "N"
    }
    public enum AccruableCOFINSTaxation: String { 
        case t = "T"
        case z = "Z"
        case e = "E"
        case h = "H"
        case n = "N"
    }
    public enum ModelType: String { 
        case sales = "SALES"
        case purchase = "PURCHASE"
        case salesReturn = "SALES_RETURN"
        case purchaseReturn = "PURCHASE_RETURN"
        case transferReturn = "TRANSFER_RETURN"
        case shipping = "SHIPPING"
        case shippingReturn = "SHIPPING_RETURN"
        case transfer = "TRANSFER"
        case receiptAjuste = "RECEIPT_AJUSTE"
        case transferAjuste = "TRANSFER_AJUSTE"
    }
    public enum WayType: String { 
        case _in = "in"
        case out = "out"
    }
    public enum Goal: String { 
        case normal = "Normal"
        case complementary = "Complementary"
        case voided = "Voided"
        case replacement = "Replacement"
        case _return = "Return"
        case adjustment = "Adjustment"
    }
    /** Process code to Identify this configuration, its is unique by Accounty Id or when standard, its has priority when the code match with the standard code. */
    public var code: String?
    /** Inform that the process has inventory impact. */
    public var stockImpact: Bool?
    /** Inform that the process has financial impact. */
    public var financialImpact: Bool?
    /** Inform if this process is subject to IPI taxation on output process - &#39;50&#39; # Saída Tributada - &#39;51&#39; # Saída Tributável com Alíquota Zero - &#39;52&#39; # Saída Isenta - &#39;53&#39; # Saída Não-Tributada - &#39;54&#39; # Saída Imune  */
    public var cstIPI: CstIPI?
    /** Legal tax classificação for IPI (enquadramento) When the processo has CST IPI 52 or 54, is mandatory inform Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo&#x3D;mCnJajU4BKU&#x3D;  */
    public var ipiLegalTaxClass: String?
    /** Inform if this item by nature is subject to PIS taxation or exempt - &#39;T&#39; # TAXABLE - &#39;Z&#39; # TAXABLE WITH RATE&#x3D;0.00 - &#39;E&#39; # EXEMPT - &#39;H&#39; # SUSPENDED - &#39;N&#39; # NO TAXABLE  */
    public var accruablePISTaxation: AccruablePISTaxation?
    /** When exempt, taxable with zero, suspended, not taxable, this field holds the official code number */
    public var pisExemptLegalReasonCode: String?
    /** When specifi reason, this field has the description */
    public var pisExemptLegalReason: String?
    /** Inform if this item by nature is subject to COFINS taxation or exempt - &#39;T&#39; # TAXABLE - &#39;Z&#39; # TAXABLE WITH RATE&#x3D;0.00 - &#39;E&#39; # EXEMPT - &#39;H&#39; # SUSPENDED - &#39;N&#39; # NO TAXABLE  */
    public var accruableCOFINSTaxation: AccruableCOFINSTaxation?
    /** When exempt, taxable with zero, suspended, not taxable, this field holds the official code number */
    public var cofinsExemptLegalReasonCode: String?
    /** When specifi reason, this field has the description */
    public var cofinsExemptLegalReason: String?
    /** Inform that the process allow IPI credit to Input process */
    public var allowIPIcreditWhenInGoing: Bool?
    /** the map key is state code */
    public var icmsConf: [IcmsTaxConf]?
    /** Process name to Identify this configuration */
    public var name: String?
    public var type: ModelType?
    /** inform if the transaction is an operation to internalizing (receive) item or value */
    public var wayType: WayType?
    public var goal: Goal?
    /** inform that the configuration process overwrites the cfop configuration. */
    public var overWriteCFOP: Bool?
    public var cfops: [CfopConf]?
    /** Company ID */
    public var companyId: UUID?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["code"] = self.code
        nillableDictionary["stockImpact"] = self.stockImpact
        nillableDictionary["financialImpact"] = self.financialImpact
        nillableDictionary["cstIPI"] = self.cstIPI?.rawValue
        nillableDictionary["ipiLegalTaxClass"] = self.ipiLegalTaxClass
        nillableDictionary["accruablePISTaxation"] = self.accruablePISTaxation?.rawValue
        nillableDictionary["pisExemptLegalReasonCode"] = self.pisExemptLegalReasonCode
        nillableDictionary["pisExemptLegalReason"] = self.pisExemptLegalReason
        nillableDictionary["accruableCOFINSTaxation"] = self.accruableCOFINSTaxation?.rawValue
        nillableDictionary["cofinsExemptLegalReasonCode"] = self.cofinsExemptLegalReasonCode
        nillableDictionary["cofinsExemptLegalReason"] = self.cofinsExemptLegalReason
        nillableDictionary["allowIPIcreditWhenInGoing"] = self.allowIPIcreditWhenInGoing
        nillableDictionary["icmsConf"] = self.icmsConf?.encodeToJSON()
        nillableDictionary["name"] = self.name
        nillableDictionary["type"] = self.type?.rawValue
        nillableDictionary["wayType"] = self.wayType?.rawValue
        nillableDictionary["goal"] = self.goal?.rawValue
        nillableDictionary["overWriteCFOP"] = self.overWriteCFOP
        nillableDictionary["cfops"] = self.cfops?.encodeToJSON()
        nillableDictionary["companyId"] = self.companyId?.encodeToJSON()
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
