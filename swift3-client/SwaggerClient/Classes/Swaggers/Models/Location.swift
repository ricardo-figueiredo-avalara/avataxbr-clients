//
// Location.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class Location: JSONEncodable {
    public enum ModelType: String { 
        case shipFrom = "ShipFrom"
        case shipTo = "ShipTo"
        case serviceRendered = "ServiceRendered"
    }
    public enum MainActivity: String { 
        case commerce = "commerce"
        case industry = "industry"
        case service = "service"
    }
    public enum NfseProcessModel: String { 
        case edi = "edi"
        case xml = "xml"
        case rps = "rps"
    }
    /** Street Name */
    public var street: String?
    /** Neighborhood Name */
    public var neighborhood: String?
    /** Brazilian Zip Code */
    public var zipcode: String?
    /** City Code (IBGE) */
    public var cityCode: String?
    /** City Name */
    public var cityName: String?
    public var state: StateEnum?
    /** Country Code */
    public var countryCode: String?
    /** Use ISO 3166-1 alpha-3 codes */
    public var country: String?
    /** House number */
    public var number: String?
    /** Any other information about the address (Room, Suite, Floor, etc)). */
    public var complement: String?
    /** Phone number */
    public var phone: String?
    /** Company ID */
    public var companyId: UUID?
    /** this property identify the location, it is unique for this company */
    public var code: String?
    /** this property identify the location, it is unique for this company */
    public var type: ModelType?
    /** Email */
    public var email: String?
    /** Federal tax id, CNPJ or CPF */
    public var federalTaxId: String?
    /** state tax id for this location */
    public var stateTaxId: String?
    public var secondaryStateTaxId: [LocationSecondaryStateTaxId]?
    /** City Tax ID */
    public var cityTaxId: String?
    public var suframa: String?
    /** Main location activity */
    public var mainActivity: MainActivity?
    /** - &#39;edi&#39; # City hall has web service and the integration is automatic - &#39;xml&#39; # Create RPS specific to City, bat does not have webservice integration - &#39;rps&#39; # Create a generic RPS, NF is by hands  */
    public var nfseProcessModel: NfseProcessModel?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["street"] = self.street
        nillableDictionary["neighborhood"] = self.neighborhood
        nillableDictionary["zipcode"] = self.zipcode
        nillableDictionary["cityCode"] = self.cityCode
        nillableDictionary["cityName"] = self.cityName
        nillableDictionary["state"] = self.state?.encodeToJSON()
        nillableDictionary["countryCode"] = self.countryCode
        nillableDictionary["country"] = self.country
        nillableDictionary["number"] = self.number
        nillableDictionary["complement"] = self.complement
        nillableDictionary["phone"] = self.phone
        nillableDictionary["companyId"] = self.companyId?.encodeToJSON()
        nillableDictionary["code"] = self.code
        nillableDictionary["type"] = self.type?.rawValue
        nillableDictionary["email"] = self.email
        nillableDictionary["federalTaxId"] = self.federalTaxId
        nillableDictionary["stateTaxId"] = self.stateTaxId
        nillableDictionary["secondaryStateTaxId"] = self.secondaryStateTaxId?.encodeToJSON()
        nillableDictionary["cityTaxId"] = self.cityTaxId
        nillableDictionary["suframa"] = self.suframa
        nillableDictionary["mainActivity"] = self.mainActivity?.rawValue
        nillableDictionary["nfseProcessModel"] = self.nfseProcessModel?.rawValue
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
