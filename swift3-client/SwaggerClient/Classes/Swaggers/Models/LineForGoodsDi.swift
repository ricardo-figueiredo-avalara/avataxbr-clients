//
// LineForGoodsDi.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class LineForGoodsDi: JSONEncodable {
    public enum TransportDIType: String { 
        case 1 = "1"
        case 2 = "2"
        case 3 = "3"
        case 4 = "4"
        case 5 = "5"
        case 6 = "6"
        case 7 = "7"
        case 8 = "8"
        case 9 = "9"
        case 10 = "10"
    }
    public enum IntermediateType: String { 
        case 1 = "1"
        case 2 = "2"
        case 3 = "3"
    }
    /** customs value, valor aduaneiro (II Block of NFe) */
    public var customsValue: Double?
    /** Import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E) */
    public var diNumber: String?
    /** Register date of import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E) */
    public var registerDateDI: Date?
    /** Clerance Site Local do desembaraço aduaneiro  */
    public var clearanceSite: String?
    /** Clerance Site State Estado onde ocorrreu o desembaraço aduaneiro  */
    public var clearanceState: StateEnum?
    /** Clerance date */
    public var clearanceDate: Date?
    /** - &#39;1&#39; # Maritima - &#39;2&#39; # Fluvial - &#39;3&#39; # Lacustre - &#39;4&#39; # Aerea - &#39;5&#39; # Postal - &#39;6&#39; # Ferroviaria - &#39;7&#39; # Rodoviaria - &#39;8&#39; # Conduto - &#39;9&#39; # Meios Proprios - &#39;10&#39; # Entrada/Saida Ficta  */
    public var transportDIType: TransportDIType?
    /** Aditional amount to freight to renew merchant marine, This decimal 13 integers and 2 decimals [Valor Adicional ao frete para renovação de marinha mercante]  */
    public var afrmmValue: Double?
    /** - &#39;1&#39; # On One&#39;s Own [1-por conta propria] - &#39;2&#39; # On Behalf And Order [2-por conta e ordem] - &#39;3&#39; # Order [3-encomenda]  */
    public var intermediateType: IntermediateType?
    /** Buyer federal tax id CNPJ do comprador ou encomendante  */
    public var buyerFederalTaxID: String?
    /** Buyer sate Estado do comprador ou encomendante  */
    public var buyerState: StateEnum?
    /** Exporter code */
    public var exporterCode: String?
    /** aditional import declaration */
    public var adi: [LineForGoodsAdi]?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["customsValue"] = self.customsValue
        nillableDictionary["diNumber"] = self.diNumber
        nillableDictionary["registerDateDI"] = self.registerDateDI?.encodeToJSON()
        nillableDictionary["clearanceSite"] = self.clearanceSite
        nillableDictionary["clearanceState"] = self.clearanceState?.encodeToJSON()
        nillableDictionary["clearanceDate"] = self.clearanceDate?.encodeToJSON()
        nillableDictionary["transportDIType"] = self.transportDIType?.rawValue
        nillableDictionary["afrmmValue"] = self.afrmmValue
        nillableDictionary["intermediateType"] = self.intermediateType?.rawValue
        nillableDictionary["buyerFederalTaxID"] = self.buyerFederalTaxID
        nillableDictionary["buyerState"] = self.buyerState?.encodeToJSON()
        nillableDictionary["exporterCode"] = self.exporterCode
        nillableDictionary["adi"] = self.adi?.encodeToJSON()
        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
