//
// TaxConfProcessAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class TaxConfProcessAPI: APIBase {

    public class func mapValuesToQueryItems(values: [String:Any?]) -> [URLQueryItem] {
        return values
            .filter { $0.1 != nil }
            .map { (item: (_key: String, _value: Any?)) -> URLQueryItem in
                URLQueryItem(name: item._key, value:"\(item._value!)")
            }
    }

    /**
     create a new Process Type configuration
     
     - parameter taxconfprocess: (body) The pet JSON you want to post 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createProcess(taxconfprocess: ProcessScenario, completion: @escaping ((_ data: InlineResponse201?,_ error: Error?) -> Void)) {
        createProcessWithRequestBuilder(taxconfprocess: taxconfprocess).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     create a new Process Type configuration
     - POST /taxconf/process
     - examples: [{contentType=application/json, example={
  "id" : 123
}}]
     
     - parameter taxconfprocess: (body) The pet JSON you want to post 

     - returns: RequestBuilder<InlineResponse201> 
     */
    open class func createProcessWithRequestBuilder(taxconfprocess: ProcessScenario) -> RequestBuilder<InlineResponse201> {
        let path = "/taxconf/process"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = taxconfprocess.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)
        

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<InlineResponse201>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: convertedParameters, isBody: true)
    }

    /**
     disable a Process.
     
     - parameter code: (path) Process Code 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteProcess(code: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteProcessWithRequestBuilder(code: code).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     disable a Process.
     - DELETE /taxconf/process/{code}
     
     - parameter code: (path) Process Code 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteProcessWithRequestBuilder(code: String) -> RequestBuilder<Void> {
        var path = "/taxconf/process/{code}"
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     get Process information.
     
     - parameter code: (path) Process Code 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getProcess(code: String, completion: @escaping ((_ data: ProcessScenario?,_ error: Error?) -> Void)) {
        getProcessWithRequestBuilder(code: code).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     get Process information.
     - GET /taxconf/process/{code}
     - This operation return Process Type configuration 
     - examples: [{contentType=application/json, example=""}]
     
     - parameter code: (path) Process Code 

     - returns: RequestBuilder<ProcessScenario> 
     */
    open class func getProcessWithRequestBuilder(code: String) -> RequestBuilder<ProcessScenario> {
        var path = "/taxconf/process/{code}"
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<ProcessScenario>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     retrive list of Process.
     
     - parameter accountId: (query) filter the configuration by accountID, if not informed, only the standard configuration will be returned  (optional)
     - parameter date: (query) When informed return valid version configuration for this date  (optional)
     - parameter inactive: (query) return the inactive versions too  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getProcessList(accountId: String? = nil, date: Date? = nil, inactive: Bool? = nil, completion: @escaping ((_ data: [ProcessScenario]?,_ error: Error?) -> Void)) {
        getProcessListWithRequestBuilder(accountId: accountId, date: date, inactive: inactive).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     retrive list of Process.
     - GET /taxconf/process
     - This operation return Process Type configurations that match with parameters queries 
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - examples: [{contentType=application/json, example=[ "" ]}]
     
     - parameter accountId: (query) filter the configuration by accountID, if not informed, only the standard configuration will be returned  (optional)
     - parameter date: (query) When informed return valid version configuration for this date  (optional)
     - parameter inactive: (query) return the inactive versions too  (optional)

     - returns: RequestBuilder<[ProcessScenario]> 
     */
    open class func getProcessListWithRequestBuilder(accountId: String? = nil, date: Date? = nil, inactive: Bool? = nil) -> RequestBuilder<[ProcessScenario]> {
        let path = "/taxconf/process"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "accountId": accountId,
            "date": date?.encodeToJSON(),
            "inactive": inactive
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<[ProcessScenario]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     update a Process Type configuration
     
     - parameter code: (path) Process Code 
     - parameter taxconfprocess: (body) The pet JSON you want to post 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateProcess(code: String, taxconfprocess: ProcessScenario, completion: @escaping ((_ error: Error?) -> Void)) {
        updateProcessWithRequestBuilder(code: code, taxconfprocess: taxconfprocess).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     update a Process Type configuration
     - PUT /taxconf/process/{code}
     
     - parameter code: (path) Process Code 
     - parameter taxconfprocess: (body) The pet JSON you want to post 

     - returns: RequestBuilder<Void> 
     */
    open class func updateProcessWithRequestBuilder(code: String, taxconfprocess: ProcessScenario) -> RequestBuilder<Void> {
        var path = "/taxconf/process/{code}"
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = taxconfprocess.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)
        

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: convertedParameters, isBody: true)
    }

}
