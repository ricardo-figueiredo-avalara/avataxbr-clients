//
// AuthAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class AuthAPI: APIBase {

    public class func mapValuesToQueryItems(values: [String:Any?]) -> [URLQueryItem] {
        return values
            .filter { $0.1 != nil }
            .map { (item: (_key: String, _value: Any?)) -> URLQueryItem in
                URLQueryItem(name: item._key, value:"\(item._value!)")
            }
    }

    /**
     authorization
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func authPost(completion: @escaping ((_ data: InlineResponse200?,_ error: Error?) -> Void)) {
        authPostWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     authorization
     - POST /auth
     - Authorization: Basic VGVzdDoxMjM=  Generate Base64:  - auth = \"{user}:{password}\"  - base = base64(auth)  - header[\"Authorization\"] = \"Basic \" + base 
     - examples: [{contentType=application/json, example={
  "expired" : "2000-01-23T04:56:07.000+00:00",
  "token" : "aeiou"
}}]

     - returns: RequestBuilder<InlineResponse200> 
     */
    open class func authPostWithRequestBuilder() -> RequestBuilder<InlineResponse200> {
        let path = "/auth"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<InlineResponse200>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
