//
// CompanyItemServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class CompanyItemServiceAPI: APIBase {

    public class func mapValuesToQueryItems(values: [String:Any?]) -> [URLQueryItem] {
        return values
            .filter { $0.1 != nil }
            .map { (item: (_key: String, _value: Any?)) -> URLQueryItem in
                URLQueryItem(name: item._key, value:"\(item._value!)")
            }
    }

    /**

     - parameter companyId: (path) Company ID 
     - parameter code: (path) Item Code 
     - parameter body: (body) Requisition 
     - parameter goods: (query) Provide to apply to goods items. (optional)
     - parameter service: (query) Provide to apply to service items. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func companiesCompanyIdItemsCodeChangeCodePut(companyId: UUID, code: String, body: Body1, goods: String? = nil, service: String? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        companiesCompanyIdItemsCodeChangeCodePutWithRequestBuilder(companyId: companyId, code: code, body: body, goods: goods, service: service).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - PUT /companies/{companyId}/items/{code}/change-code
     - Change the code of a given item. 
     
     - parameter companyId: (path) Company ID 
     - parameter code: (path) Item Code 
     - parameter body: (body) Requisition 
     - parameter goods: (query) Provide to apply to goods items. (optional)
     - parameter service: (query) Provide to apply to service items. (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func companiesCompanyIdItemsCodeChangeCodePutWithRequestBuilder(companyId: UUID, code: String, body: Body1, goods: String? = nil, service: String? = nil) -> RequestBuilder<Void> {
        var path = "/companies/{companyId}/items/{code}/change-code"
        path = path.replacingOccurrences(of: "{companyId}", with: "\(companyId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)
        url?.queryItems = mapValuesToQueryItems(values:[
                "goods": goods, 
                "service": service
        ])
        

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter companyId: (path) Company ID 
     - parameter code: (path) Item Code 
     - parameter agast: (query) Custom Agast Code (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func companiesCompanyIdItemsCodeserviceGet(companyId: UUID, code: String, agast: String? = nil, completion: @escaping ((_ data: ItemSimple?,_ error: Error?) -> Void)) {
        companiesCompanyIdItemsCodeserviceGetWithRequestBuilder(companyId: companyId, code: code, agast: agast).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /companies/{companyId}/items/{code}?service
     - This operation return custom agast configurations that match with parameters queries 
     - examples: [{contentType=application/json, example={
  "companyId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "code" : "aeiou",
  "description" : "aeiou",
  "agast" : "aeiou"
}}]
     
     - parameter companyId: (path) Company ID 
     - parameter code: (path) Item Code 
     - parameter agast: (query) Custom Agast Code (optional)

     - returns: RequestBuilder<ItemSimple> 
     */
    open class func companiesCompanyIdItemsCodeserviceGetWithRequestBuilder(companyId: UUID, code: String, agast: String? = nil) -> RequestBuilder<ItemSimple> {
        var path = "/companies/{companyId}/items/{code}?service"
        path = path.replacingOccurrences(of: "{companyId}", with: "\(companyId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "agast": agast
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<ItemSimple>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter companyId: (path) Company ID 
     - parameter code: (query) Item Code (optional)
     - parameter agast: (query) Custom Agast Code (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func companiesCompanyIdItemsserviceGet(companyId: UUID, code: String? = nil, agast: String? = nil, completion: @escaping ((_ data: [ItemSimple]?,_ error: Error?) -> Void)) {
        companiesCompanyIdItemsserviceGetWithRequestBuilder(companyId: companyId, code: code, agast: agast).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /companies/{companyId}/items?service
     - This operation return custom agast configurations that match with parameters queries 
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - examples: [{contentType=application/json, example=[ {
  "companyId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "code" : "aeiou",
  "description" : "aeiou",
  "agast" : "aeiou"
} ]}]
     
     - parameter companyId: (path) Company ID 
     - parameter code: (query) Item Code (optional)
     - parameter agast: (query) Custom Agast Code (optional)

     - returns: RequestBuilder<[ItemSimple]> 
     */
    open class func companiesCompanyIdItemsserviceGetWithRequestBuilder(companyId: UUID, code: String? = nil, agast: String? = nil) -> RequestBuilder<[ItemSimple]> {
        var path = "/companies/{companyId}/items?service"
        path = path.replacingOccurrences(of: "{companyId}", with: "\(companyId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "code": code,
            "agast": agast
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<[ItemSimple]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create custom agast for one company
     
     - parameter companyId: (path) Company ID 
     - parameter body: (body) Transaction Message 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createItemService(companyId: UUID, body: ItemSimple, completion: @escaping ((_ data: InlineResponse201?,_ error: Error?) -> Void)) {
        createItemServiceWithRequestBuilder(companyId: companyId, body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Create custom agast for one company
     - POST /companies/{companyId}/items?service
     - This method operation create a custom agast for one company 
     - examples: [{contentType=application/json, example={
  "id" : 123
}}]
     
     - parameter companyId: (path) Company ID 
     - parameter body: (body) Transaction Message 

     - returns: RequestBuilder<InlineResponse201> 
     */
    open class func createItemServiceWithRequestBuilder(companyId: UUID, body: ItemSimple) -> RequestBuilder<InlineResponse201> {
        var path = "/companies/{companyId}/items?service"
        path = path.replacingOccurrences(of: "{companyId}", with: "\(companyId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)
        

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<InlineResponse201>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter companyId: (path) Company ID 
     - parameter code: (path) Item Code 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteItemService(companyId: UUID, code: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteItemServiceWithRequestBuilder(companyId: companyId, code: code).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - DELETE /companies/{companyId}/items/{code}?service
     
     - parameter companyId: (path) Company ID 
     - parameter code: (path) Item Code 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteItemServiceWithRequestBuilder(companyId: UUID, code: String) -> RequestBuilder<Void> {
        var path = "/companies/{companyId}/items/{code}?service"
        path = path.replacingOccurrences(of: "{companyId}", with: "\(companyId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Update custom agast for one company
     
     - parameter companyId: (path) Company ID 
     - parameter code: (path) Item Code 
     - parameter body: (body) Transaction Message 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateItemService(companyId: UUID, code: String, body: ItemSimple, completion: @escaping ((_ error: Error?) -> Void)) {
        updateItemServiceWithRequestBuilder(companyId: companyId, code: code, body: body).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Update custom agast for one company
     - PUT /companies/{companyId}/items/{code}?service
     - This method operation create a custom agast for one company 
     
     - parameter companyId: (path) Company ID 
     - parameter code: (path) Item Code 
     - parameter body: (body) Transaction Message 

     - returns: RequestBuilder<Void> 
     */
    open class func updateItemServiceWithRequestBuilder(companyId: UUID, code: String, body: ItemSimple) -> RequestBuilder<Void> {
        var path = "/companies/{companyId}/items/{code}?service"
        path = path.replacingOccurrences(of: "{companyId}", with: "\(companyId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)
        

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: convertedParameters, isBody: true)
    }

}
