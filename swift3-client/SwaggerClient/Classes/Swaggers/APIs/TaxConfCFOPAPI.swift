//
// TaxConfCFOPAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class TaxConfCFOPAPI: APIBase {

    public class func mapValuesToQueryItems(values: [String:Any?]) -> [URLQueryItem] {
        return values
            .filter { $0.1 != nil }
            .map { (item: (_key: String, _value: Any?)) -> URLQueryItem in
                URLQueryItem(name: item._key, value:"\(item._value!)")
            }
    }

    /**
     create a new CFOP configuration
     
     - parameter body: (body) The pet JSON you want to post 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createCfop(body: CfopConf, completion: @escaping ((_ data: InlineResponse201?,_ error: Error?) -> Void)) {
        createCfopWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     create a new CFOP configuration
     - POST /taxconf/cfop
     - examples: [{contentType=application/json, example={
  "id" : 123
}}]
     
     - parameter body: (body) The pet JSON you want to post 

     - returns: RequestBuilder<InlineResponse201> 
     */
    open class func createCfopWithRequestBuilder(body: CfopConf) -> RequestBuilder<InlineResponse201> {
        let path = "/taxconf/cfop"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)
        

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<InlineResponse201>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: convertedParameters, isBody: true)
    }

    /**
     disable a CFOP.
     
     - parameter code: (path) CFOP Code 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteCfop(code: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteCfopWithRequestBuilder(code: code).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     disable a CFOP.
     - DELETE /taxconf/cfop/{code}
     
     - parameter code: (path) CFOP Code 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteCfopWithRequestBuilder(code: String) -> RequestBuilder<Void> {
        var path = "/taxconf/cfop/{code}"
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     get CFOP information.
     
     - parameter code: (path) CFOP Code 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCfop(code: String, completion: @escaping ((_ data: CfopConf?,_ error: Error?) -> Void)) {
        getCfopWithRequestBuilder(code: code).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     get CFOP information.
     - GET /taxconf/cfop/{code}
     - This operation return CFOP configuration 
     - examples: [{contentType=application/json, example=""}]
     
     - parameter code: (path) CFOP Code 

     - returns: RequestBuilder<CfopConf> 
     */
    open class func getCfopWithRequestBuilder(code: String) -> RequestBuilder<CfopConf> {
        var path = "/taxconf/cfop/{code}"
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<CfopConf>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     retrive list of CFOP.
     
     - parameter suffixcode: (query) Identify this CFOP, the CFOP Code has two parts N.XXX where N the prefix is the operation scope type if IN or OUT and if is in state, other state, other country and suffix XXX is the operation type  (optional)
     - parameter date: (query) When informed return valid version configuration for this date  (optional)
     - parameter inactive: (query) return the inactive versions too  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCfopList(suffixcode: String? = nil, date: Date? = nil, inactive: Bool? = nil, completion: @escaping ((_ data: [CfopConf]?,_ error: Error?) -> Void)) {
        getCfopListWithRequestBuilder(suffixcode: suffixcode, date: date, inactive: inactive).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     retrive list of CFOP.
     - GET /taxconf/cfop
     - This operation return CFOP configurations that match with parameters queries 
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - responseHeaders: [X-Pagination-Current-Page(Double), X-Pagination-Limit(Double), X-Pagination-Total-Pages(Double), X-Pagination-Total-Count(Double)]
     - examples: [{contentType=application/json, example=[ "" ]}]
     
     - parameter suffixcode: (query) Identify this CFOP, the CFOP Code has two parts N.XXX where N the prefix is the operation scope type if IN or OUT and if is in state, other state, other country and suffix XXX is the operation type  (optional)
     - parameter date: (query) When informed return valid version configuration for this date  (optional)
     - parameter inactive: (query) return the inactive versions too  (optional)

     - returns: RequestBuilder<[CfopConf]> 
     */
    open class func getCfopListWithRequestBuilder(suffixcode: String? = nil, date: Date? = nil, inactive: Bool? = nil) -> RequestBuilder<[CfopConf]> {
        let path = "/taxconf/cfop"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [
            "suffixcode": suffixcode,
            "date": date?.encodeToJSON(),
            "inactive": inactive
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<[CfopConf]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     update a CFOP configuration
     
     - parameter code: (path) CFOP Code 
     - parameter taxconfcfop: (body) The pet JSON you want to post 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateCfop(code: String, taxconfcfop: CfopConf, completion: @escaping ((_ error: Error?) -> Void)) {
        updateCfopWithRequestBuilder(code: code, taxconfcfop: taxconfcfop).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     update a CFOP configuration
     - PUT /taxconf/cfop/{code}
     
     - parameter code: (path) CFOP Code 
     - parameter taxconfcfop: (body) The pet JSON you want to post 

     - returns: RequestBuilder<Void> 
     */
    open class func updateCfopWithRequestBuilder(code: String, taxconfcfop: CfopConf) -> RequestBuilder<Void> {
        var path = "/taxconf/cfop/{code}"
        path = path.replacingOccurrences(of: "{code}", with: "\(code)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = taxconfcfop.encodeToJSON() as? [String:AnyObject]

        let url = NSURLComponents(string: URLString)
        

        let convertedParameters = APIHelper.convertBoolToString(parameters)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: convertedParameters, isBody: true)
    }

}
