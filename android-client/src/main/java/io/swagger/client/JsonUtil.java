/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import io.swagger.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AccountCompany".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountCompany>>(){}.getType();
    }
    
    if ("AdditionalInformation".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdditionalInformation>>(){}.getType();
    }
    
    if ("AdditionalInformationProcRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<AdditionalInformationProcRef>>(){}.getType();
    }
    
    if ("Address".equalsIgnoreCase(className)) {
      return new TypeToken<List<Address>>(){}.getType();
    }
    
    if ("Agast".equalsIgnoreCase(className)) {
      return new TypeToken<List<Agast>>(){}.getType();
    }
    
    if ("AgastCodeType".equalsIgnoreCase(className)) {
      return new TypeToken<List<AgastCodeType>>(){}.getType();
    }
    
    if ("AgastExtendForSefaz".equalsIgnoreCase(className)) {
      return new TypeToken<List<AgastExtendForSefaz>>(){}.getType();
    }
    
    if ("AgastIcmsConf".equalsIgnoreCase(className)) {
      return new TypeToken<List<AgastIcmsConf>>(){}.getType();
    }
    
    if ("AgastWithholding".equalsIgnoreCase(className)) {
      return new TypeToken<List<AgastWithholding>>(){}.getType();
    }
    
    if ("AgastWithholdingCOFINS".equalsIgnoreCase(className)) {
      return new TypeToken<List<AgastWithholdingCOFINS>>(){}.getType();
    }
    
    if ("AgastWithholdingCSLL".equalsIgnoreCase(className)) {
      return new TypeToken<List<AgastWithholdingCSLL>>(){}.getType();
    }
    
    if ("AgastWithholdingPIS".equalsIgnoreCase(className)) {
      return new TypeToken<List<AgastWithholdingPIS>>(){}.getType();
    }
    
    if ("Body".equalsIgnoreCase(className)) {
      return new TypeToken<List<Body>>(){}.getType();
    }
    
    if ("Body1".equalsIgnoreCase(className)) {
      return new TypeToken<List<Body1>>(){}.getType();
    }
    
    if ("Body2".equalsIgnoreCase(className)) {
      return new TypeToken<List<Body2>>(){}.getType();
    }
    
    if ("Body3".equalsIgnoreCase(className)) {
      return new TypeToken<List<Body3>>(){}.getType();
    }
    
    if ("Body4".equalsIgnoreCase(className)) {
      return new TypeToken<List<Body4>>(){}.getType();
    }
    
    if ("CSTPistCofinsEnum".equalsIgnoreCase(className)) {
      return new TypeToken<List<CSTPistCofinsEnum>>(){}.getType();
    }
    
    if ("CSTTableAEnum".equalsIgnoreCase(className)) {
      return new TypeToken<List<CSTTableAEnum>>(){}.getType();
    }
    
    if ("CSTTableBEnum".equalsIgnoreCase(className)) {
      return new TypeToken<List<CSTTableBEnum>>(){}.getType();
    }
    
    if ("CalcModelEnum".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalcModelEnum>>(){}.getType();
    }
    
    if ("CalculatedTaxSummaryForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculatedTaxSummaryForGoods>>(){}.getType();
    }
    
    if ("CalculatedTaxSummaryForGoodsTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<List<CalculatedTaxSummaryForGoodsTaxByType>>(){}.getType();
    }
    
    if ("CfopConf".equalsIgnoreCase(className)) {
      return new TypeToken<List<CfopConf>>(){}.getType();
    }
    
    if ("Company".equalsIgnoreCase(className)) {
      return new TypeToken<List<Company>>(){}.getType();
    }
    
    if ("CompanyAuthorizedToDownloadNFe".equalsIgnoreCase(className)) {
      return new TypeToken<List<CompanyAuthorizedToDownloadNFe>>(){}.getType();
    }
    
    if ("CompanyConfiguration".equalsIgnoreCase(className)) {
      return new TypeToken<List<CompanyConfiguration>>(){}.getType();
    }
    
    if ("CompanyMailServer".equalsIgnoreCase(className)) {
      return new TypeToken<List<CompanyMailServer>>(){}.getType();
    }
    
    if ("CstIcmsEnum".equalsIgnoreCase(className)) {
      return new TypeToken<List<CstIcmsEnum>>(){}.getType();
    }
    
    if ("CustomAgast".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomAgast>>(){}.getType();
    }
    
    if ("CustomIcmsConfByState".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomIcmsConfByState>>(){}.getType();
    }
    
    if ("CustomProcessScenario".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomProcessScenario>>(){}.getType();
    }
    
    if ("CustomTaxTypeRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomTaxTypeRate>>(){}.getType();
    }
    
    if ("DefaultLocations".equalsIgnoreCase(className)) {
      return new TypeToken<List<DefaultLocations>>(){}.getType();
    }
    
    if ("DetailsCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<List<DetailsCalculatedTax>>(){}.getType();
    }
    
    if ("DetailsCalculatedTaxItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<DetailsCalculatedTaxItem>>(){}.getType();
    }
    
    if ("Entity".equalsIgnoreCase(className)) {
      return new TypeToken<List<Entity>>(){}.getType();
    }
    
    if ("EntityForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<EntityForGoods>>(){}.getType();
    }
    
    if ("EntityInformerForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<EntityInformerForGoods>>(){}.getType();
    }
    
    if ("EntityInformerForGoodsFederalTaxRegime".equalsIgnoreCase(className)) {
      return new TypeToken<List<EntityInformerForGoodsFederalTaxRegime>>(){}.getType();
    }
    
    if ("EntityLocation".equalsIgnoreCase(className)) {
      return new TypeToken<List<EntityLocation>>(){}.getType();
    }
    
    if ("EntityType".equalsIgnoreCase(className)) {
      return new TypeToken<List<EntityType>>(){}.getType();
    }
    
    if ("Error".equalsIgnoreCase(className)) {
      return new TypeToken<List<Error>>(){}.getType();
    }
    
    if ("ExportInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExportInfo>>(){}.getType();
    }
    
    if ("FederalTaxRegime".equalsIgnoreCase(className)) {
      return new TypeToken<List<FederalTaxRegime>>(){}.getType();
    }
    
    if ("Fuel".equalsIgnoreCase(className)) {
      return new TypeToken<List<Fuel>>(){}.getType();
    }
    
    if ("FuelCide".equalsIgnoreCase(className)) {
      return new TypeToken<List<FuelCide>>(){}.getType();
    }
    
    if ("FuelPumpNumber".equalsIgnoreCase(className)) {
      return new TypeToken<List<FuelPumpNumber>>(){}.getType();
    }
    
    if ("HeaderBaseInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<HeaderBaseInfo>>(){}.getType();
    }
    
    if ("HeaderForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<HeaderForGoods>>(){}.getType();
    }
    
    if ("HeaderForGoodsParticipants".equalsIgnoreCase(className)) {
      return new TypeToken<List<HeaderForGoodsParticipants>>(){}.getType();
    }
    
    if ("IbptConf".equalsIgnoreCase(className)) {
      return new TypeToken<List<IbptConf>>(){}.getType();
    }
    
    if ("IcmsConfByState".equalsIgnoreCase(className)) {
      return new TypeToken<List<IcmsConfByState>>(){}.getType();
    }
    
    if ("IcmsConfByStateIcmsSTConf".equalsIgnoreCase(className)) {
      return new TypeToken<List<IcmsConfByStateIcmsSTConf>>(){}.getType();
    }
    
    if ("IcmsConfInterState".equalsIgnoreCase(className)) {
      return new TypeToken<List<IcmsConfInterState>>(){}.getType();
    }
    
    if ("IcmsConfInterStateIcmsSTConf".equalsIgnoreCase(className)) {
      return new TypeToken<List<IcmsConfInterStateIcmsSTConf>>(){}.getType();
    }
    
    if ("IcmsTaxConf".equalsIgnoreCase(className)) {
      return new TypeToken<List<IcmsTaxConf>>(){}.getType();
    }
    
    if ("IcmsTaxConfBase".equalsIgnoreCase(className)) {
      return new TypeToken<List<IcmsTaxConfBase>>(){}.getType();
    }
    
    if ("InformerForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<InformerForGoods>>(){}.getType();
    }
    
    if ("InformerForGoodsCsts".equalsIgnoreCase(className)) {
      return new TypeToken<List<InformerForGoodsCsts>>(){}.getType();
    }
    
    if ("InlineResponse200".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse200>>(){}.getType();
    }
    
    if ("InlineResponse2001".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2001>>(){}.getType();
    }
    
    if ("InlineResponse2002".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2002>>(){}.getType();
    }
    
    if ("InlineResponse2003".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2003>>(){}.getType();
    }
    
    if ("InlineResponse2004".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2004>>(){}.getType();
    }
    
    if ("InlineResponse201".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse201>>(){}.getType();
    }
    
    if ("InstallmentComplete".equalsIgnoreCase(className)) {
      return new TypeToken<List<InstallmentComplete>>(){}.getType();
    }
    
    if ("IpbtConfItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<IpbtConfItem>>(){}.getType();
    }
    
    if ("IssConfByCity".equalsIgnoreCase(className)) {
      return new TypeToken<List<IssConfByCity>>(){}.getType();
    }
    
    if ("IssConfServiceList".equalsIgnoreCase(className)) {
      return new TypeToken<List<IssConfServiceList>>(){}.getType();
    }
    
    if ("IssConfServiceListTaxRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<IssConfServiceListTaxRate>>(){}.getType();
    }
    
    if ("IssConfServiceListTaxRateIbpt".equalsIgnoreCase(className)) {
      return new TypeToken<List<IssConfServiceListTaxRateIbpt>>(){}.getType();
    }
    
    if ("ItemCpom".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemCpom>>(){}.getType();
    }
    
    if ("ItemGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemGoods>>(){}.getType();
    }
    
    if ("ItemSimple".equalsIgnoreCase(className)) {
      return new TypeToken<List<ItemSimple>>(){}.getType();
    }
    
    if ("LegalReason".equalsIgnoreCase(className)) {
      return new TypeToken<List<LegalReason>>(){}.getType();
    }
    
    if ("LegalReasonReferencedProcesses".equalsIgnoreCase(className)) {
      return new TypeToken<List<LegalReasonReferencedProcesses>>(){}.getType();
    }
    
    if ("LegalReasonTaxScope".equalsIgnoreCase(className)) {
      return new TypeToken<List<LegalReasonTaxScope>>(){}.getType();
    }
    
    if ("LineForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineForGoods>>(){}.getType();
    }
    
    if ("LineForGoodsAdi".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineForGoodsAdi>>(){}.getType();
    }
    
    if ("LineForGoodsCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineForGoodsCalculatedTax>>(){}.getType();
    }
    
    if ("LineForGoodsCalculatedTaxTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineForGoodsCalculatedTaxTaxByType>>(){}.getType();
    }
    
    if ("LineForGoodsDi".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineForGoodsDi>>(){}.getType();
    }
    
    if ("LineForGoodsExport".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineForGoodsExport>>(){}.getType();
    }
    
    if ("LineForGoodsIcmsTaxRelief".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineForGoodsIcmsTaxRelief>>(){}.getType();
    }
    
    if ("LineForGoodsIndExport".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineForGoodsIndExport>>(){}.getType();
    }
    
    if ("LineForSefazGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<LineForSefazGoods>>(){}.getType();
    }
    
    if ("Location".equalsIgnoreCase(className)) {
      return new TypeToken<List<Location>>(){}.getType();
    }
    
    if ("LocationSecondaryStateTaxId".equalsIgnoreCase(className)) {
      return new TypeToken<List<LocationSecondaryStateTaxId>>(){}.getType();
    }
    
    if ("Medicine".equalsIgnoreCase(className)) {
      return new TypeToken<List<Medicine>>(){}.getType();
    }
    
    if ("Message".equalsIgnoreCase(className)) {
      return new TypeToken<List<Message>>(){}.getType();
    }
    
    if ("NRef".equalsIgnoreCase(className)) {
      return new TypeToken<List<NRef>>(){}.getType();
    }
    
    if ("NRefRefECF".equalsIgnoreCase(className)) {
      return new TypeToken<List<NRefRefECF>>(){}.getType();
    }
    
    if ("NRefRefFarmerNF".equalsIgnoreCase(className)) {
      return new TypeToken<List<NRefRefFarmerNF>>(){}.getType();
    }
    
    if ("NRefRefNF".equalsIgnoreCase(className)) {
      return new TypeToken<List<NRefRefNF>>(){}.getType();
    }
    
    if ("PayRecCalculatedTaxSummaryForService".equalsIgnoreCase(className)) {
      return new TypeToken<List<PayRecCalculatedTaxSummaryForService>>(){}.getType();
    }
    
    if ("PayRecCalculatedTaxSummaryForServiceTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PayRecCalculatedTaxSummaryForServiceTaxByType>>(){}.getType();
    }
    
    if ("PayRecHeader".equalsIgnoreCase(className)) {
      return new TypeToken<List<PayRecHeader>>(){}.getType();
    }
    
    if ("PayRecLinesIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<PayRecLinesIn>>(){}.getType();
    }
    
    if ("PayRecLinesOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<PayRecLinesOut>>(){}.getType();
    }
    
    if ("Payment".equalsIgnoreCase(className)) {
      return new TypeToken<List<Payment>>(){}.getType();
    }
    
    if ("PaymentBill".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentBill>>(){}.getType();
    }
    
    if ("PaymentCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentCalculatedTax>>(){}.getType();
    }
    
    if ("PaymentInstallment".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentInstallment>>(){}.getType();
    }
    
    if ("PaymentLinesIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentLinesIn>>(){}.getType();
    }
    
    if ("PaymentPaymentMode".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentPaymentMode>>(){}.getType();
    }
    
    if ("PaymentTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentTaxByType>>(){}.getType();
    }
    
    if ("PaymentTerms".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentTerms>>(){}.getType();
    }
    
    if ("PaymentTransactionIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentTransactionIn>>(){}.getType();
    }
    
    if ("PaymentTransactionOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<PaymentTransactionOut>>(){}.getType();
    }
    
    if ("PccWithholdingMode".equalsIgnoreCase(className)) {
      return new TypeToken<List<PccWithholdingMode>>(){}.getType();
    }
    
    if ("PointOfOrderOrigin".equalsIgnoreCase(className)) {
      return new TypeToken<List<PointOfOrderOrigin>>(){}.getType();
    }
    
    if ("ProcessScenario".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProcessScenario>>(){}.getType();
    }
    
    if ("ProcessingInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProcessingInfo>>(){}.getType();
    }
    
    if ("PurchaseCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseCalculatedTax>>(){}.getType();
    }
    
    if ("PurchaseCalculatedTaxSummaryForService".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseCalculatedTaxSummaryForService>>(){}.getType();
    }
    
    if ("PurchaseCalculatedTaxSummaryForServiceTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseCalculatedTaxSummaryForServiceTaxByType>>(){}.getType();
    }
    
    if ("PurchaseDefaultLocations".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseDefaultLocations>>(){}.getType();
    }
    
    if ("PurchaseEntity".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseEntity>>(){}.getType();
    }
    
    if ("PurchaseHeaderIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseHeaderIn>>(){}.getType();
    }
    
    if ("PurchaseHeaderInPayment".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseHeaderInPayment>>(){}.getType();
    }
    
    if ("PurchaseHeaderOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseHeaderOut>>(){}.getType();
    }
    
    if ("PurchaseHeaderOutPayment".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseHeaderOutPayment>>(){}.getType();
    }
    
    if ("PurchaseInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseInfo>>(){}.getType();
    }
    
    if ("PurchaseInstallmentIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseInstallmentIn>>(){}.getType();
    }
    
    if ("PurchaseLinesIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseLinesIn>>(){}.getType();
    }
    
    if ("PurchaseLinesOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseLinesOut>>(){}.getType();
    }
    
    if ("PurchaseTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseTaxByType>>(){}.getType();
    }
    
    if ("PurchaseTaxByTypeDetail".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseTaxByTypeDetail>>(){}.getType();
    }
    
    if ("PurchaseTaxesConfig".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseTaxesConfig>>(){}.getType();
    }
    
    if ("PurchaseTransactionIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseTransactionIn>>(){}.getType();
    }
    
    if ("PurchaseTransactionOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<PurchaseTransactionOut>>(){}.getType();
    }
    
    if ("ReceiptTransactionIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReceiptTransactionIn>>(){}.getType();
    }
    
    if ("ReceiptTransactionOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReceiptTransactionOut>>(){}.getType();
    }
    
    if ("SalesCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesCalculatedTax>>(){}.getType();
    }
    
    if ("SalesCalculatedTaxSummaryForService".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesCalculatedTaxSummaryForService>>(){}.getType();
    }
    
    if ("SalesCalculatedTaxSummaryForServiceTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesCalculatedTaxSummaryForServiceTaxByType>>(){}.getType();
    }
    
    if ("SalesDefaultLocations".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesDefaultLocations>>(){}.getType();
    }
    
    if ("SalesEntity".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesEntity>>(){}.getType();
    }
    
    if ("SalesHeaderIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesHeaderIn>>(){}.getType();
    }
    
    if ("SalesHeaderInPayment".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesHeaderInPayment>>(){}.getType();
    }
    
    if ("SalesHeaderOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesHeaderOut>>(){}.getType();
    }
    
    if ("SalesHeaderOutPayment".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesHeaderOutPayment>>(){}.getType();
    }
    
    if ("SalesInstallmentIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesInstallmentIn>>(){}.getType();
    }
    
    if ("SalesLinesIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesLinesIn>>(){}.getType();
    }
    
    if ("SalesLinesInTaxDeductions".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesLinesInTaxDeductions>>(){}.getType();
    }
    
    if ("SalesLinesOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesLinesOut>>(){}.getType();
    }
    
    if ("SalesLinesOutTaxDeductions".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesLinesOutTaxDeductions>>(){}.getType();
    }
    
    if ("SalesTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesTaxByType>>(){}.getType();
    }
    
    if ("SalesTaxByTypeDetail".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesTaxByTypeDetail>>(){}.getType();
    }
    
    if ("SalesTaxesConfig".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesTaxesConfig>>(){}.getType();
    }
    
    if ("SalesTransactionIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesTransactionIn>>(){}.getType();
    }
    
    if ("SalesTransactionOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<SalesTransactionOut>>(){}.getType();
    }
    
    if ("SefazDisableRangeIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<SefazDisableRangeIn>>(){}.getType();
    }
    
    if ("SefazInvoiceBasicStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<SefazInvoiceBasicStatus>>(){}.getType();
    }
    
    if ("SefazInvoiceStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<SefazInvoiceStatus>>(){}.getType();
    }
    
    if ("SefazItDeleteIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<SefazItDeleteIn>>(){}.getType();
    }
    
    if ("SefazItGetOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<SefazItGetOut>>(){}.getType();
    }
    
    if ("SefazItPutIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<SefazItPutIn>>(){}.getType();
    }
    
    if ("SefazPostOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<SefazPostOut>>(){}.getType();
    }
    
    if ("ServiceItemTaxRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceItemTaxRate>>(){}.getType();
    }
    
    if ("ServiceItemTaxRatePeriod".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceItemTaxRatePeriod>>(){}.getType();
    }
    
    if ("ServiceRendered".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceRendered>>(){}.getType();
    }
    
    if ("SimpleAddress".equalsIgnoreCase(className)) {
      return new TypeToken<List<SimpleAddress>>(){}.getType();
    }
    
    if ("StateEnum".equalsIgnoreCase(className)) {
      return new TypeToken<List<StateEnum>>(){}.getType();
    }
    
    if ("StateTransition".equalsIgnoreCase(className)) {
      return new TypeToken<List<StateTransition>>(){}.getType();
    }
    
    if ("TaxByTypeSummaryForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxByTypeSummaryForGoods>>(){}.getType();
    }
    
    if ("TaxByTypeSummaryForService".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxByTypeSummaryForService>>(){}.getType();
    }
    
    if ("TaxByTypeSummaryJurisdiction".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxByTypeSummaryJurisdiction>>(){}.getType();
    }
    
    if ("TaxByTypeSummaryJurisdictionForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxByTypeSummaryJurisdictionForGoods>>(){}.getType();
    }
    
    if ("TaxByTypeTax".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxByTypeTax>>(){}.getType();
    }
    
    if ("TaxConf".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxConf>>(){}.getType();
    }
    
    if ("TaxType".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxType>>(){}.getType();
    }
    
    if ("TaxTypeRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxTypeRate>>(){}.getType();
    }
    
    if ("TransactionForGoodsIn".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransactionForGoodsIn>>(){}.getType();
    }
    
    if ("TransactionForGoodsOut".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransactionForGoodsOut>>(){}.getType();
    }
    
    if ("TransactionForSefazGoods".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransactionForSefazGoods>>(){}.getType();
    }
    
    if ("TransactionForSefazGoodsList".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransactionForSefazGoodsList>>(){}.getType();
    }
    
    if ("Transport".equalsIgnoreCase(className)) {
      return new TypeToken<List<Transport>>(){}.getType();
    }
    
    if ("TransportVolumes".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransportVolumes>>(){}.getType();
    }
    
    if ("ValidationError".equalsIgnoreCase(className)) {
      return new TypeToken<List<ValidationError>>(){}.getType();
    }
    
    if ("Vehicle".equalsIgnoreCase(className)) {
      return new TypeToken<List<Vehicle>>(){}.getType();
    }
    
    if ("VehicleID".equalsIgnoreCase(className)) {
      return new TypeToken<List<VehicleID>>(){}.getType();
    }
    
    if ("VehicleTransp".equalsIgnoreCase(className)) {
      return new TypeToken<List<VehicleTransp>>(){}.getType();
    }
    
    if ("Weapon".equalsIgnoreCase(className)) {
      return new TypeToken<List<Weapon>>(){}.getType();
    }
    
    if ("WithholdingMode".equalsIgnoreCase(className)) {
      return new TypeToken<List<WithholdingMode>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AccountCompany".equalsIgnoreCase(className)) {
      return new TypeToken<AccountCompany>(){}.getType();
    }
    
    if ("AdditionalInformation".equalsIgnoreCase(className)) {
      return new TypeToken<AdditionalInformation>(){}.getType();
    }
    
    if ("AdditionalInformationProcRef".equalsIgnoreCase(className)) {
      return new TypeToken<AdditionalInformationProcRef>(){}.getType();
    }
    
    if ("Address".equalsIgnoreCase(className)) {
      return new TypeToken<Address>(){}.getType();
    }
    
    if ("Agast".equalsIgnoreCase(className)) {
      return new TypeToken<Agast>(){}.getType();
    }
    
    if ("AgastCodeType".equalsIgnoreCase(className)) {
      return new TypeToken<AgastCodeType>(){}.getType();
    }
    
    if ("AgastExtendForSefaz".equalsIgnoreCase(className)) {
      return new TypeToken<AgastExtendForSefaz>(){}.getType();
    }
    
    if ("AgastIcmsConf".equalsIgnoreCase(className)) {
      return new TypeToken<AgastIcmsConf>(){}.getType();
    }
    
    if ("AgastWithholding".equalsIgnoreCase(className)) {
      return new TypeToken<AgastWithholding>(){}.getType();
    }
    
    if ("AgastWithholdingCOFINS".equalsIgnoreCase(className)) {
      return new TypeToken<AgastWithholdingCOFINS>(){}.getType();
    }
    
    if ("AgastWithholdingCSLL".equalsIgnoreCase(className)) {
      return new TypeToken<AgastWithholdingCSLL>(){}.getType();
    }
    
    if ("AgastWithholdingPIS".equalsIgnoreCase(className)) {
      return new TypeToken<AgastWithholdingPIS>(){}.getType();
    }
    
    if ("Body".equalsIgnoreCase(className)) {
      return new TypeToken<Body>(){}.getType();
    }
    
    if ("Body1".equalsIgnoreCase(className)) {
      return new TypeToken<Body1>(){}.getType();
    }
    
    if ("Body2".equalsIgnoreCase(className)) {
      return new TypeToken<Body2>(){}.getType();
    }
    
    if ("Body3".equalsIgnoreCase(className)) {
      return new TypeToken<Body3>(){}.getType();
    }
    
    if ("Body4".equalsIgnoreCase(className)) {
      return new TypeToken<Body4>(){}.getType();
    }
    
    if ("CSTPistCofinsEnum".equalsIgnoreCase(className)) {
      return new TypeToken<CSTPistCofinsEnum>(){}.getType();
    }
    
    if ("CSTTableAEnum".equalsIgnoreCase(className)) {
      return new TypeToken<CSTTableAEnum>(){}.getType();
    }
    
    if ("CSTTableBEnum".equalsIgnoreCase(className)) {
      return new TypeToken<CSTTableBEnum>(){}.getType();
    }
    
    if ("CalcModelEnum".equalsIgnoreCase(className)) {
      return new TypeToken<CalcModelEnum>(){}.getType();
    }
    
    if ("CalculatedTaxSummaryForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<CalculatedTaxSummaryForGoods>(){}.getType();
    }
    
    if ("CalculatedTaxSummaryForGoodsTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<CalculatedTaxSummaryForGoodsTaxByType>(){}.getType();
    }
    
    if ("CfopConf".equalsIgnoreCase(className)) {
      return new TypeToken<CfopConf>(){}.getType();
    }
    
    if ("Company".equalsIgnoreCase(className)) {
      return new TypeToken<Company>(){}.getType();
    }
    
    if ("CompanyAuthorizedToDownloadNFe".equalsIgnoreCase(className)) {
      return new TypeToken<CompanyAuthorizedToDownloadNFe>(){}.getType();
    }
    
    if ("CompanyConfiguration".equalsIgnoreCase(className)) {
      return new TypeToken<CompanyConfiguration>(){}.getType();
    }
    
    if ("CompanyMailServer".equalsIgnoreCase(className)) {
      return new TypeToken<CompanyMailServer>(){}.getType();
    }
    
    if ("CstIcmsEnum".equalsIgnoreCase(className)) {
      return new TypeToken<CstIcmsEnum>(){}.getType();
    }
    
    if ("CustomAgast".equalsIgnoreCase(className)) {
      return new TypeToken<CustomAgast>(){}.getType();
    }
    
    if ("CustomIcmsConfByState".equalsIgnoreCase(className)) {
      return new TypeToken<CustomIcmsConfByState>(){}.getType();
    }
    
    if ("CustomProcessScenario".equalsIgnoreCase(className)) {
      return new TypeToken<CustomProcessScenario>(){}.getType();
    }
    
    if ("CustomTaxTypeRate".equalsIgnoreCase(className)) {
      return new TypeToken<CustomTaxTypeRate>(){}.getType();
    }
    
    if ("DefaultLocations".equalsIgnoreCase(className)) {
      return new TypeToken<DefaultLocations>(){}.getType();
    }
    
    if ("DetailsCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<DetailsCalculatedTax>(){}.getType();
    }
    
    if ("DetailsCalculatedTaxItem".equalsIgnoreCase(className)) {
      return new TypeToken<DetailsCalculatedTaxItem>(){}.getType();
    }
    
    if ("Entity".equalsIgnoreCase(className)) {
      return new TypeToken<Entity>(){}.getType();
    }
    
    if ("EntityForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<EntityForGoods>(){}.getType();
    }
    
    if ("EntityInformerForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<EntityInformerForGoods>(){}.getType();
    }
    
    if ("EntityInformerForGoodsFederalTaxRegime".equalsIgnoreCase(className)) {
      return new TypeToken<EntityInformerForGoodsFederalTaxRegime>(){}.getType();
    }
    
    if ("EntityLocation".equalsIgnoreCase(className)) {
      return new TypeToken<EntityLocation>(){}.getType();
    }
    
    if ("EntityType".equalsIgnoreCase(className)) {
      return new TypeToken<EntityType>(){}.getType();
    }
    
    if ("Error".equalsIgnoreCase(className)) {
      return new TypeToken<Error>(){}.getType();
    }
    
    if ("ExportInfo".equalsIgnoreCase(className)) {
      return new TypeToken<ExportInfo>(){}.getType();
    }
    
    if ("FederalTaxRegime".equalsIgnoreCase(className)) {
      return new TypeToken<FederalTaxRegime>(){}.getType();
    }
    
    if ("Fuel".equalsIgnoreCase(className)) {
      return new TypeToken<Fuel>(){}.getType();
    }
    
    if ("FuelCide".equalsIgnoreCase(className)) {
      return new TypeToken<FuelCide>(){}.getType();
    }
    
    if ("FuelPumpNumber".equalsIgnoreCase(className)) {
      return new TypeToken<FuelPumpNumber>(){}.getType();
    }
    
    if ("HeaderBaseInfo".equalsIgnoreCase(className)) {
      return new TypeToken<HeaderBaseInfo>(){}.getType();
    }
    
    if ("HeaderForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<HeaderForGoods>(){}.getType();
    }
    
    if ("HeaderForGoodsParticipants".equalsIgnoreCase(className)) {
      return new TypeToken<HeaderForGoodsParticipants>(){}.getType();
    }
    
    if ("IbptConf".equalsIgnoreCase(className)) {
      return new TypeToken<IbptConf>(){}.getType();
    }
    
    if ("IcmsConfByState".equalsIgnoreCase(className)) {
      return new TypeToken<IcmsConfByState>(){}.getType();
    }
    
    if ("IcmsConfByStateIcmsSTConf".equalsIgnoreCase(className)) {
      return new TypeToken<IcmsConfByStateIcmsSTConf>(){}.getType();
    }
    
    if ("IcmsConfInterState".equalsIgnoreCase(className)) {
      return new TypeToken<IcmsConfInterState>(){}.getType();
    }
    
    if ("IcmsConfInterStateIcmsSTConf".equalsIgnoreCase(className)) {
      return new TypeToken<IcmsConfInterStateIcmsSTConf>(){}.getType();
    }
    
    if ("IcmsTaxConf".equalsIgnoreCase(className)) {
      return new TypeToken<IcmsTaxConf>(){}.getType();
    }
    
    if ("IcmsTaxConfBase".equalsIgnoreCase(className)) {
      return new TypeToken<IcmsTaxConfBase>(){}.getType();
    }
    
    if ("InformerForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<InformerForGoods>(){}.getType();
    }
    
    if ("InformerForGoodsCsts".equalsIgnoreCase(className)) {
      return new TypeToken<InformerForGoodsCsts>(){}.getType();
    }
    
    if ("InlineResponse200".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse200>(){}.getType();
    }
    
    if ("InlineResponse2001".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2001>(){}.getType();
    }
    
    if ("InlineResponse2002".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2002>(){}.getType();
    }
    
    if ("InlineResponse2003".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2003>(){}.getType();
    }
    
    if ("InlineResponse2004".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2004>(){}.getType();
    }
    
    if ("InlineResponse201".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse201>(){}.getType();
    }
    
    if ("InstallmentComplete".equalsIgnoreCase(className)) {
      return new TypeToken<InstallmentComplete>(){}.getType();
    }
    
    if ("IpbtConfItem".equalsIgnoreCase(className)) {
      return new TypeToken<IpbtConfItem>(){}.getType();
    }
    
    if ("IssConfByCity".equalsIgnoreCase(className)) {
      return new TypeToken<IssConfByCity>(){}.getType();
    }
    
    if ("IssConfServiceList".equalsIgnoreCase(className)) {
      return new TypeToken<IssConfServiceList>(){}.getType();
    }
    
    if ("IssConfServiceListTaxRate".equalsIgnoreCase(className)) {
      return new TypeToken<IssConfServiceListTaxRate>(){}.getType();
    }
    
    if ("IssConfServiceListTaxRateIbpt".equalsIgnoreCase(className)) {
      return new TypeToken<IssConfServiceListTaxRateIbpt>(){}.getType();
    }
    
    if ("ItemCpom".equalsIgnoreCase(className)) {
      return new TypeToken<ItemCpom>(){}.getType();
    }
    
    if ("ItemGoods".equalsIgnoreCase(className)) {
      return new TypeToken<ItemGoods>(){}.getType();
    }
    
    if ("ItemSimple".equalsIgnoreCase(className)) {
      return new TypeToken<ItemSimple>(){}.getType();
    }
    
    if ("LegalReason".equalsIgnoreCase(className)) {
      return new TypeToken<LegalReason>(){}.getType();
    }
    
    if ("LegalReasonReferencedProcesses".equalsIgnoreCase(className)) {
      return new TypeToken<LegalReasonReferencedProcesses>(){}.getType();
    }
    
    if ("LegalReasonTaxScope".equalsIgnoreCase(className)) {
      return new TypeToken<LegalReasonTaxScope>(){}.getType();
    }
    
    if ("LineForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<LineForGoods>(){}.getType();
    }
    
    if ("LineForGoodsAdi".equalsIgnoreCase(className)) {
      return new TypeToken<LineForGoodsAdi>(){}.getType();
    }
    
    if ("LineForGoodsCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<LineForGoodsCalculatedTax>(){}.getType();
    }
    
    if ("LineForGoodsCalculatedTaxTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<LineForGoodsCalculatedTaxTaxByType>(){}.getType();
    }
    
    if ("LineForGoodsDi".equalsIgnoreCase(className)) {
      return new TypeToken<LineForGoodsDi>(){}.getType();
    }
    
    if ("LineForGoodsExport".equalsIgnoreCase(className)) {
      return new TypeToken<LineForGoodsExport>(){}.getType();
    }
    
    if ("LineForGoodsIcmsTaxRelief".equalsIgnoreCase(className)) {
      return new TypeToken<LineForGoodsIcmsTaxRelief>(){}.getType();
    }
    
    if ("LineForGoodsIndExport".equalsIgnoreCase(className)) {
      return new TypeToken<LineForGoodsIndExport>(){}.getType();
    }
    
    if ("LineForSefazGoods".equalsIgnoreCase(className)) {
      return new TypeToken<LineForSefazGoods>(){}.getType();
    }
    
    if ("Location".equalsIgnoreCase(className)) {
      return new TypeToken<Location>(){}.getType();
    }
    
    if ("LocationSecondaryStateTaxId".equalsIgnoreCase(className)) {
      return new TypeToken<LocationSecondaryStateTaxId>(){}.getType();
    }
    
    if ("Medicine".equalsIgnoreCase(className)) {
      return new TypeToken<Medicine>(){}.getType();
    }
    
    if ("Message".equalsIgnoreCase(className)) {
      return new TypeToken<Message>(){}.getType();
    }
    
    if ("NRef".equalsIgnoreCase(className)) {
      return new TypeToken<NRef>(){}.getType();
    }
    
    if ("NRefRefECF".equalsIgnoreCase(className)) {
      return new TypeToken<NRefRefECF>(){}.getType();
    }
    
    if ("NRefRefFarmerNF".equalsIgnoreCase(className)) {
      return new TypeToken<NRefRefFarmerNF>(){}.getType();
    }
    
    if ("NRefRefNF".equalsIgnoreCase(className)) {
      return new TypeToken<NRefRefNF>(){}.getType();
    }
    
    if ("PayRecCalculatedTaxSummaryForService".equalsIgnoreCase(className)) {
      return new TypeToken<PayRecCalculatedTaxSummaryForService>(){}.getType();
    }
    
    if ("PayRecCalculatedTaxSummaryForServiceTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<PayRecCalculatedTaxSummaryForServiceTaxByType>(){}.getType();
    }
    
    if ("PayRecHeader".equalsIgnoreCase(className)) {
      return new TypeToken<PayRecHeader>(){}.getType();
    }
    
    if ("PayRecLinesIn".equalsIgnoreCase(className)) {
      return new TypeToken<PayRecLinesIn>(){}.getType();
    }
    
    if ("PayRecLinesOut".equalsIgnoreCase(className)) {
      return new TypeToken<PayRecLinesOut>(){}.getType();
    }
    
    if ("Payment".equalsIgnoreCase(className)) {
      return new TypeToken<Payment>(){}.getType();
    }
    
    if ("PaymentBill".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentBill>(){}.getType();
    }
    
    if ("PaymentCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentCalculatedTax>(){}.getType();
    }
    
    if ("PaymentInstallment".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentInstallment>(){}.getType();
    }
    
    if ("PaymentLinesIn".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentLinesIn>(){}.getType();
    }
    
    if ("PaymentPaymentMode".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentPaymentMode>(){}.getType();
    }
    
    if ("PaymentTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentTaxByType>(){}.getType();
    }
    
    if ("PaymentTerms".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentTerms>(){}.getType();
    }
    
    if ("PaymentTransactionIn".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentTransactionIn>(){}.getType();
    }
    
    if ("PaymentTransactionOut".equalsIgnoreCase(className)) {
      return new TypeToken<PaymentTransactionOut>(){}.getType();
    }
    
    if ("PccWithholdingMode".equalsIgnoreCase(className)) {
      return new TypeToken<PccWithholdingMode>(){}.getType();
    }
    
    if ("PointOfOrderOrigin".equalsIgnoreCase(className)) {
      return new TypeToken<PointOfOrderOrigin>(){}.getType();
    }
    
    if ("ProcessScenario".equalsIgnoreCase(className)) {
      return new TypeToken<ProcessScenario>(){}.getType();
    }
    
    if ("ProcessingInfo".equalsIgnoreCase(className)) {
      return new TypeToken<ProcessingInfo>(){}.getType();
    }
    
    if ("PurchaseCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseCalculatedTax>(){}.getType();
    }
    
    if ("PurchaseCalculatedTaxSummaryForService".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseCalculatedTaxSummaryForService>(){}.getType();
    }
    
    if ("PurchaseCalculatedTaxSummaryForServiceTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseCalculatedTaxSummaryForServiceTaxByType>(){}.getType();
    }
    
    if ("PurchaseDefaultLocations".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseDefaultLocations>(){}.getType();
    }
    
    if ("PurchaseEntity".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseEntity>(){}.getType();
    }
    
    if ("PurchaseHeaderIn".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseHeaderIn>(){}.getType();
    }
    
    if ("PurchaseHeaderInPayment".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseHeaderInPayment>(){}.getType();
    }
    
    if ("PurchaseHeaderOut".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseHeaderOut>(){}.getType();
    }
    
    if ("PurchaseHeaderOutPayment".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseHeaderOutPayment>(){}.getType();
    }
    
    if ("PurchaseInfo".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseInfo>(){}.getType();
    }
    
    if ("PurchaseInstallmentIn".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseInstallmentIn>(){}.getType();
    }
    
    if ("PurchaseLinesIn".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseLinesIn>(){}.getType();
    }
    
    if ("PurchaseLinesOut".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseLinesOut>(){}.getType();
    }
    
    if ("PurchaseTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseTaxByType>(){}.getType();
    }
    
    if ("PurchaseTaxByTypeDetail".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseTaxByTypeDetail>(){}.getType();
    }
    
    if ("PurchaseTaxesConfig".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseTaxesConfig>(){}.getType();
    }
    
    if ("PurchaseTransactionIn".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseTransactionIn>(){}.getType();
    }
    
    if ("PurchaseTransactionOut".equalsIgnoreCase(className)) {
      return new TypeToken<PurchaseTransactionOut>(){}.getType();
    }
    
    if ("ReceiptTransactionIn".equalsIgnoreCase(className)) {
      return new TypeToken<ReceiptTransactionIn>(){}.getType();
    }
    
    if ("ReceiptTransactionOut".equalsIgnoreCase(className)) {
      return new TypeToken<ReceiptTransactionOut>(){}.getType();
    }
    
    if ("SalesCalculatedTax".equalsIgnoreCase(className)) {
      return new TypeToken<SalesCalculatedTax>(){}.getType();
    }
    
    if ("SalesCalculatedTaxSummaryForService".equalsIgnoreCase(className)) {
      return new TypeToken<SalesCalculatedTaxSummaryForService>(){}.getType();
    }
    
    if ("SalesCalculatedTaxSummaryForServiceTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<SalesCalculatedTaxSummaryForServiceTaxByType>(){}.getType();
    }
    
    if ("SalesDefaultLocations".equalsIgnoreCase(className)) {
      return new TypeToken<SalesDefaultLocations>(){}.getType();
    }
    
    if ("SalesEntity".equalsIgnoreCase(className)) {
      return new TypeToken<SalesEntity>(){}.getType();
    }
    
    if ("SalesHeaderIn".equalsIgnoreCase(className)) {
      return new TypeToken<SalesHeaderIn>(){}.getType();
    }
    
    if ("SalesHeaderInPayment".equalsIgnoreCase(className)) {
      return new TypeToken<SalesHeaderInPayment>(){}.getType();
    }
    
    if ("SalesHeaderOut".equalsIgnoreCase(className)) {
      return new TypeToken<SalesHeaderOut>(){}.getType();
    }
    
    if ("SalesHeaderOutPayment".equalsIgnoreCase(className)) {
      return new TypeToken<SalesHeaderOutPayment>(){}.getType();
    }
    
    if ("SalesInstallmentIn".equalsIgnoreCase(className)) {
      return new TypeToken<SalesInstallmentIn>(){}.getType();
    }
    
    if ("SalesLinesIn".equalsIgnoreCase(className)) {
      return new TypeToken<SalesLinesIn>(){}.getType();
    }
    
    if ("SalesLinesInTaxDeductions".equalsIgnoreCase(className)) {
      return new TypeToken<SalesLinesInTaxDeductions>(){}.getType();
    }
    
    if ("SalesLinesOut".equalsIgnoreCase(className)) {
      return new TypeToken<SalesLinesOut>(){}.getType();
    }
    
    if ("SalesLinesOutTaxDeductions".equalsIgnoreCase(className)) {
      return new TypeToken<SalesLinesOutTaxDeductions>(){}.getType();
    }
    
    if ("SalesTaxByType".equalsIgnoreCase(className)) {
      return new TypeToken<SalesTaxByType>(){}.getType();
    }
    
    if ("SalesTaxByTypeDetail".equalsIgnoreCase(className)) {
      return new TypeToken<SalesTaxByTypeDetail>(){}.getType();
    }
    
    if ("SalesTaxesConfig".equalsIgnoreCase(className)) {
      return new TypeToken<SalesTaxesConfig>(){}.getType();
    }
    
    if ("SalesTransactionIn".equalsIgnoreCase(className)) {
      return new TypeToken<SalesTransactionIn>(){}.getType();
    }
    
    if ("SalesTransactionOut".equalsIgnoreCase(className)) {
      return new TypeToken<SalesTransactionOut>(){}.getType();
    }
    
    if ("SefazDisableRangeIn".equalsIgnoreCase(className)) {
      return new TypeToken<SefazDisableRangeIn>(){}.getType();
    }
    
    if ("SefazInvoiceBasicStatus".equalsIgnoreCase(className)) {
      return new TypeToken<SefazInvoiceBasicStatus>(){}.getType();
    }
    
    if ("SefazInvoiceStatus".equalsIgnoreCase(className)) {
      return new TypeToken<SefazInvoiceStatus>(){}.getType();
    }
    
    if ("SefazItDeleteIn".equalsIgnoreCase(className)) {
      return new TypeToken<SefazItDeleteIn>(){}.getType();
    }
    
    if ("SefazItGetOut".equalsIgnoreCase(className)) {
      return new TypeToken<SefazItGetOut>(){}.getType();
    }
    
    if ("SefazItPutIn".equalsIgnoreCase(className)) {
      return new TypeToken<SefazItPutIn>(){}.getType();
    }
    
    if ("SefazPostOut".equalsIgnoreCase(className)) {
      return new TypeToken<SefazPostOut>(){}.getType();
    }
    
    if ("ServiceItemTaxRate".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceItemTaxRate>(){}.getType();
    }
    
    if ("ServiceItemTaxRatePeriod".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceItemTaxRatePeriod>(){}.getType();
    }
    
    if ("ServiceRendered".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceRendered>(){}.getType();
    }
    
    if ("SimpleAddress".equalsIgnoreCase(className)) {
      return new TypeToken<SimpleAddress>(){}.getType();
    }
    
    if ("StateEnum".equalsIgnoreCase(className)) {
      return new TypeToken<StateEnum>(){}.getType();
    }
    
    if ("StateTransition".equalsIgnoreCase(className)) {
      return new TypeToken<StateTransition>(){}.getType();
    }
    
    if ("TaxByTypeSummaryForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<TaxByTypeSummaryForGoods>(){}.getType();
    }
    
    if ("TaxByTypeSummaryForService".equalsIgnoreCase(className)) {
      return new TypeToken<TaxByTypeSummaryForService>(){}.getType();
    }
    
    if ("TaxByTypeSummaryJurisdiction".equalsIgnoreCase(className)) {
      return new TypeToken<TaxByTypeSummaryJurisdiction>(){}.getType();
    }
    
    if ("TaxByTypeSummaryJurisdictionForGoods".equalsIgnoreCase(className)) {
      return new TypeToken<TaxByTypeSummaryJurisdictionForGoods>(){}.getType();
    }
    
    if ("TaxByTypeTax".equalsIgnoreCase(className)) {
      return new TypeToken<TaxByTypeTax>(){}.getType();
    }
    
    if ("TaxConf".equalsIgnoreCase(className)) {
      return new TypeToken<TaxConf>(){}.getType();
    }
    
    if ("TaxType".equalsIgnoreCase(className)) {
      return new TypeToken<TaxType>(){}.getType();
    }
    
    if ("TaxTypeRate".equalsIgnoreCase(className)) {
      return new TypeToken<TaxTypeRate>(){}.getType();
    }
    
    if ("TransactionForGoodsIn".equalsIgnoreCase(className)) {
      return new TypeToken<TransactionForGoodsIn>(){}.getType();
    }
    
    if ("TransactionForGoodsOut".equalsIgnoreCase(className)) {
      return new TypeToken<TransactionForGoodsOut>(){}.getType();
    }
    
    if ("TransactionForSefazGoods".equalsIgnoreCase(className)) {
      return new TypeToken<TransactionForSefazGoods>(){}.getType();
    }
    
    if ("TransactionForSefazGoodsList".equalsIgnoreCase(className)) {
      return new TypeToken<TransactionForSefazGoodsList>(){}.getType();
    }
    
    if ("Transport".equalsIgnoreCase(className)) {
      return new TypeToken<Transport>(){}.getType();
    }
    
    if ("TransportVolumes".equalsIgnoreCase(className)) {
      return new TypeToken<TransportVolumes>(){}.getType();
    }
    
    if ("ValidationError".equalsIgnoreCase(className)) {
      return new TypeToken<ValidationError>(){}.getType();
    }
    
    if ("Vehicle".equalsIgnoreCase(className)) {
      return new TypeToken<Vehicle>(){}.getType();
    }
    
    if ("VehicleID".equalsIgnoreCase(className)) {
      return new TypeToken<VehicleID>(){}.getType();
    }
    
    if ("VehicleTransp".equalsIgnoreCase(className)) {
      return new TypeToken<VehicleTransp>(){}.getType();
    }
    
    if ("Weapon".equalsIgnoreCase(className)) {
      return new TypeToken<Weapon>(){}.getType();
    }
    
    if ("WithholdingMode".equalsIgnoreCase(className)) {
      return new TypeToken<WithholdingMode>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
