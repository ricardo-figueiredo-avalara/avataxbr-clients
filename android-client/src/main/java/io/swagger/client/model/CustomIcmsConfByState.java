/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.IcmsConfByState;
import io.swagger.client.model.IcmsConfByStateIcmsSTConf;
import io.swagger.client.model.IcmsConfInterState;
import io.swagger.client.model.StateEnum;
import java.util.*;
import java.util.Date;
import java.util.UUID;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CustomIcmsConfByState {
  
  @SerializedName("code")
  private String code = null;
  @SerializedName("state")
  private StateEnum state = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("startDate")
  private Date startDate = null;
  @SerializedName("expirationDate")
  private Date expirationDate = null;
  @SerializedName("inactive")
  private Boolean inactive = null;
  @SerializedName("subjectToST")
  private Boolean subjectToST = null;
  public enum IcmsCSTEnum {
     00,  20,  40,  41,  50, 
  };
  @SerializedName("icmsCST")
  private IcmsCSTEnum icmsCST = null;
  public enum CalcModeEnum {
     BYMVARATE,  SRP,  MMSRP,  OPERATIONAMOUNT, 
  };
  @SerializedName("calcMode")
  private CalcModeEnum calcMode = null;
  @SerializedName("discountRateForMonoPhase")
  private Double discountRateForMonoPhase = null;
  @SerializedName("rate")
  private Double rate = null;
  @SerializedName("icmsBaseDiscount")
  private Double icmsBaseDiscount = null;
  @SerializedName("msrp")
  private Double msrp = null;
  @SerializedName("mvaRate")
  private Double mvaRate = null;
  @SerializedName("msrpUnit")
  private String msrpUnit = null;
  @SerializedName("icmsLegalReason")
  private String icmsLegalReason = null;
  @SerializedName("fcpRate")
  private Double fcpRate = null;
  @SerializedName("icmsSTConf")
  private IcmsConfByStateIcmsSTConf icmsSTConf = null;
  @SerializedName("icmsInterStateConf")
  private List<IcmsConfInterState> icmsInterStateConf = null;
  @SerializedName("companyId")
  private UUID companyId = null;

  /**
   * Identify the IcmsConfState in namespace
   **/
  @ApiModelProperty(required = true, value = "Identify the IcmsConfState in namespace")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public StateEnum getState() {
    return state;
  }
  public void setState(StateEnum state) {
    this.state = state;
  }

  /**
   * name for this configuration
   **/
  @ApiModelProperty(value = "name for this configuration")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * date when this configuration values starts
   **/
  @ApiModelProperty(value = "date when this configuration values starts")
  public Date getStartDate() {
    return startDate;
  }
  public void setStartDate(Date startDate) {
    this.startDate = startDate;
  }

  /**
   * date when this configuration values expire
   **/
  @ApiModelProperty(value = "date when this configuration values expire")
  public Date getExpirationDate() {
    return expirationDate;
  }
  public void setExpirationDate(Date expirationDate) {
    this.expirationDate = expirationDate;
  }

  /**
   * set this configuration to Inactive
   **/
  @ApiModelProperty(value = "set this configuration to Inactive")
  public Boolean getInactive() {
    return inactive;
  }
  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }

  /**
   * inform that the item linked to this configuration is subject to ICMS ST on this state
   **/
  @ApiModelProperty(value = "inform that the item linked to this configuration is subject to ICMS ST on this state")
  public Boolean getSubjectToST() {
    return subjectToST;
  }
  public void setSubjectToST(Boolean subjectToST) {
    this.subjectToST = subjectToST;
  }

  /**
   * On sales process inform the CST hat the item linked to this configuration is subject to for the own ICMS - '00' # TAXABLE - '20' # TAXABLE WITH BASE DISCOUNT - '40' # EXEMPT - '41' # NOT TAXABLE - '50' # SUSPENDED 
   **/
  @ApiModelProperty(value = "On sales process inform the CST hat the item linked to this configuration is subject to for the own ICMS - '00' # TAXABLE - '20' # TAXABLE WITH BASE DISCOUNT - '40' # EXEMPT - '41' # NOT TAXABLE - '50' # SUSPENDED ")
  public IcmsCSTEnum getIcmsCST() {
    return icmsCST;
  }
  public void setIcmsCST(IcmsCSTEnum icmsCST) {
    this.icmsCST = icmsCST;
  }

  /**
   * how this ICMS will be calculed for itens linked to this configuration
   **/
  @ApiModelProperty(value = "how this ICMS will be calculed for itens linked to this configuration")
  public CalcModeEnum getCalcMode() {
    return calcMode;
  }
  public void setCalcMode(CalcModeEnum calcMode) {
    this.calcMode = calcMode;
  }

  /**
   * discount if the item is subject to monophase PIS/COFINS for transactions inside state
   **/
  @ApiModelProperty(value = "discount if the item is subject to monophase PIS/COFINS for transactions inside state")
  public Double getDiscountRateForMonoPhase() {
    return discountRateForMonoPhase;
  }
  public void setDiscountRateForMonoPhase(Double discountRateForMonoPhase) {
    this.discountRateForMonoPhase = discountRateForMonoPhase;
  }

  /**
   * ICMS rate
   **/
  @ApiModelProperty(value = "ICMS rate")
  public Double getRate() {
    return rate;
  }
  public void setRate(Double rate) {
    this.rate = rate;
  }

  /**
   * ICMS rate
   **/
  @ApiModelProperty(value = "ICMS rate")
  public Double getIcmsBaseDiscount() {
    return icmsBaseDiscount;
  }
  public void setIcmsBaseDiscount(Double icmsBaseDiscount) {
    this.icmsBaseDiscount = icmsBaseDiscount;
  }

  /**
   * SRP or MMSRP amount base for this icms configuration
   **/
  @ApiModelProperty(value = "SRP or MMSRP amount base for this icms configuration")
  public Double getMsrp() {
    return msrp;
  }
  public void setMsrp(Double msrp) {
    this.msrp = msrp;
  }

  /**
   * ICMS mva rate to define calc base
   **/
  @ApiModelProperty(value = "ICMS mva rate to define calc base")
  public Double getMvaRate() {
    return mvaRate;
  }
  public void setMvaRate(Double mvaRate) {
    this.mvaRate = mvaRate;
  }

  /**
   * unit used to SRP amount value
   **/
  @ApiModelProperty(value = "unit used to SRP amount value")
  public String getMsrpUnit() {
    return msrpUnit;
  }
  public void setMsrpUnit(String msrpUnit) {
    this.msrpUnit = msrpUnit;
  }

  /**
   * Code for the ICM legal reason, this message will be placed on invoice.
   **/
  @ApiModelProperty(value = "Code for the ICM legal reason, this message will be placed on invoice.")
  public String getIcmsLegalReason() {
    return icmsLegalReason;
  }
  public void setIcmsLegalReason(String icmsLegalReason) {
    this.icmsLegalReason = icmsLegalReason;
  }

  /**
   * Fundo de Combate à pobreza / Fund Against Poverty
   **/
  @ApiModelProperty(value = "Fundo de Combate à pobreza / Fund Against Poverty")
  public Double getFcpRate() {
    return fcpRate;
  }
  public void setFcpRate(Double fcpRate) {
    this.fcpRate = fcpRate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public IcmsConfByStateIcmsSTConf getIcmsSTConf() {
    return icmsSTConf;
  }
  public void setIcmsSTConf(IcmsConfByStateIcmsSTConf icmsSTConf) {
    this.icmsSTConf = icmsSTConf;
  }

  /**
   * the map key is state code
   **/
  @ApiModelProperty(value = "the map key is state code")
  public List<IcmsConfInterState> getIcmsInterStateConf() {
    return icmsInterStateConf;
  }
  public void setIcmsInterStateConf(List<IcmsConfInterState> icmsInterStateConf) {
    this.icmsInterStateConf = icmsInterStateConf;
  }

  /**
   * Company ID
   **/
  @ApiModelProperty(required = true, value = "Company ID")
  public UUID getCompanyId() {
    return companyId;
  }
  public void setCompanyId(UUID companyId) {
    this.companyId = companyId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomIcmsConfByState customIcmsConfByState = (CustomIcmsConfByState) o;
    return (this.code == null ? customIcmsConfByState.code == null : this.code.equals(customIcmsConfByState.code)) &&
        (this.state == null ? customIcmsConfByState.state == null : this.state.equals(customIcmsConfByState.state)) &&
        (this.name == null ? customIcmsConfByState.name == null : this.name.equals(customIcmsConfByState.name)) &&
        (this.startDate == null ? customIcmsConfByState.startDate == null : this.startDate.equals(customIcmsConfByState.startDate)) &&
        (this.expirationDate == null ? customIcmsConfByState.expirationDate == null : this.expirationDate.equals(customIcmsConfByState.expirationDate)) &&
        (this.inactive == null ? customIcmsConfByState.inactive == null : this.inactive.equals(customIcmsConfByState.inactive)) &&
        (this.subjectToST == null ? customIcmsConfByState.subjectToST == null : this.subjectToST.equals(customIcmsConfByState.subjectToST)) &&
        (this.icmsCST == null ? customIcmsConfByState.icmsCST == null : this.icmsCST.equals(customIcmsConfByState.icmsCST)) &&
        (this.calcMode == null ? customIcmsConfByState.calcMode == null : this.calcMode.equals(customIcmsConfByState.calcMode)) &&
        (this.discountRateForMonoPhase == null ? customIcmsConfByState.discountRateForMonoPhase == null : this.discountRateForMonoPhase.equals(customIcmsConfByState.discountRateForMonoPhase)) &&
        (this.rate == null ? customIcmsConfByState.rate == null : this.rate.equals(customIcmsConfByState.rate)) &&
        (this.icmsBaseDiscount == null ? customIcmsConfByState.icmsBaseDiscount == null : this.icmsBaseDiscount.equals(customIcmsConfByState.icmsBaseDiscount)) &&
        (this.msrp == null ? customIcmsConfByState.msrp == null : this.msrp.equals(customIcmsConfByState.msrp)) &&
        (this.mvaRate == null ? customIcmsConfByState.mvaRate == null : this.mvaRate.equals(customIcmsConfByState.mvaRate)) &&
        (this.msrpUnit == null ? customIcmsConfByState.msrpUnit == null : this.msrpUnit.equals(customIcmsConfByState.msrpUnit)) &&
        (this.icmsLegalReason == null ? customIcmsConfByState.icmsLegalReason == null : this.icmsLegalReason.equals(customIcmsConfByState.icmsLegalReason)) &&
        (this.fcpRate == null ? customIcmsConfByState.fcpRate == null : this.fcpRate.equals(customIcmsConfByState.fcpRate)) &&
        (this.icmsSTConf == null ? customIcmsConfByState.icmsSTConf == null : this.icmsSTConf.equals(customIcmsConfByState.icmsSTConf)) &&
        (this.icmsInterStateConf == null ? customIcmsConfByState.icmsInterStateConf == null : this.icmsInterStateConf.equals(customIcmsConfByState.icmsInterStateConf)) &&
        (this.companyId == null ? customIcmsConfByState.companyId == null : this.companyId.equals(customIcmsConfByState.companyId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.state == null ? 0: this.state.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.startDate == null ? 0: this.startDate.hashCode());
    result = 31 * result + (this.expirationDate == null ? 0: this.expirationDate.hashCode());
    result = 31 * result + (this.inactive == null ? 0: this.inactive.hashCode());
    result = 31 * result + (this.subjectToST == null ? 0: this.subjectToST.hashCode());
    result = 31 * result + (this.icmsCST == null ? 0: this.icmsCST.hashCode());
    result = 31 * result + (this.calcMode == null ? 0: this.calcMode.hashCode());
    result = 31 * result + (this.discountRateForMonoPhase == null ? 0: this.discountRateForMonoPhase.hashCode());
    result = 31 * result + (this.rate == null ? 0: this.rate.hashCode());
    result = 31 * result + (this.icmsBaseDiscount == null ? 0: this.icmsBaseDiscount.hashCode());
    result = 31 * result + (this.msrp == null ? 0: this.msrp.hashCode());
    result = 31 * result + (this.mvaRate == null ? 0: this.mvaRate.hashCode());
    result = 31 * result + (this.msrpUnit == null ? 0: this.msrpUnit.hashCode());
    result = 31 * result + (this.icmsLegalReason == null ? 0: this.icmsLegalReason.hashCode());
    result = 31 * result + (this.fcpRate == null ? 0: this.fcpRate.hashCode());
    result = 31 * result + (this.icmsSTConf == null ? 0: this.icmsSTConf.hashCode());
    result = 31 * result + (this.icmsInterStateConf == null ? 0: this.icmsInterStateConf.hashCode());
    result = 31 * result + (this.companyId == null ? 0: this.companyId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomIcmsConfByState {\n");
    
    sb.append("  code: ").append(code).append("\n");
    sb.append("  state: ").append(state).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  startDate: ").append(startDate).append("\n");
    sb.append("  expirationDate: ").append(expirationDate).append("\n");
    sb.append("  inactive: ").append(inactive).append("\n");
    sb.append("  subjectToST: ").append(subjectToST).append("\n");
    sb.append("  icmsCST: ").append(icmsCST).append("\n");
    sb.append("  calcMode: ").append(calcMode).append("\n");
    sb.append("  discountRateForMonoPhase: ").append(discountRateForMonoPhase).append("\n");
    sb.append("  rate: ").append(rate).append("\n");
    sb.append("  icmsBaseDiscount: ").append(icmsBaseDiscount).append("\n");
    sb.append("  msrp: ").append(msrp).append("\n");
    sb.append("  mvaRate: ").append(mvaRate).append("\n");
    sb.append("  msrpUnit: ").append(msrpUnit).append("\n");
    sb.append("  icmsLegalReason: ").append(icmsLegalReason).append("\n");
    sb.append("  fcpRate: ").append(fcpRate).append("\n");
    sb.append("  icmsSTConf: ").append(icmsSTConf).append("\n");
    sb.append("  icmsInterStateConf: ").append(icmsInterStateConf).append("\n");
    sb.append("  companyId: ").append(companyId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
