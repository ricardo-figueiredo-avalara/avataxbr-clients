/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.StateEnum;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class IcmsTaxConfBase {
  
  @SerializedName("state")
  private StateEnum state = null;
  public enum IcmsCSTEnum {
     00,  20,  40,  41,  50, 
  };
  @SerializedName("icmsCST")
  private IcmsCSTEnum icmsCST = null;
  @SerializedName("messageCode")
  private String messageCode = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public StateEnum getState() {
    return state;
  }
  public void setState(StateEnum state) {
    this.state = state;
  }

  /**
   * On sales process inform the CST hat the item linked to this configuration is subject to - '00' # TAXABLE - '20' # TAXABLE WITH BASE DISCOUNT - '40' # EXEMPT - '41' # NOT TAXABLE - '50' # SUSPENDED 
   **/
  @ApiModelProperty(value = "On sales process inform the CST hat the item linked to this configuration is subject to - '00' # TAXABLE - '20' # TAXABLE WITH BASE DISCOUNT - '40' # EXEMPT - '41' # NOT TAXABLE - '50' # SUSPENDED ")
  public IcmsCSTEnum getIcmsCST() {
    return icmsCST;
  }
  public void setIcmsCST(IcmsCSTEnum icmsCST) {
    this.icmsCST = icmsCST;
  }

  /**
   * Message to add to NF when this configuration is used
   **/
  @ApiModelProperty(value = "Message to add to NF when this configuration is used")
  public String getMessageCode() {
    return messageCode;
  }
  public void setMessageCode(String messageCode) {
    this.messageCode = messageCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IcmsTaxConfBase icmsTaxConfBase = (IcmsTaxConfBase) o;
    return (this.state == null ? icmsTaxConfBase.state == null : this.state.equals(icmsTaxConfBase.state)) &&
        (this.icmsCST == null ? icmsTaxConfBase.icmsCST == null : this.icmsCST.equals(icmsTaxConfBase.icmsCST)) &&
        (this.messageCode == null ? icmsTaxConfBase.messageCode == null : this.messageCode.equals(icmsTaxConfBase.messageCode));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.state == null ? 0: this.state.hashCode());
    result = 31 * result + (this.icmsCST == null ? 0: this.icmsCST.hashCode());
    result = 31 * result + (this.messageCode == null ? 0: this.messageCode.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class IcmsTaxConfBase {\n");
    
    sb.append("  state: ").append(state).append("\n");
    sb.append("  icmsCST: ").append(icmsCST).append("\n");
    sb.append("  messageCode: ").append(messageCode).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
