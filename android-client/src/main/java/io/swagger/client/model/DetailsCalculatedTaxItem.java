/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.DetailsCalculatedTax;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class DetailsCalculatedTaxItem {
  
  @SerializedName("locationType")
  private String locationType = null;
  @SerializedName("jurisdictionName")
  private String jurisdictionName = null;
  public enum JurisdictionTypeEnum {
     city,  state,  country, 
  };
  @SerializedName("jurisdictionType")
  private JurisdictionTypeEnum jurisdictionType = null;
  public enum TaxTypeEnum {
     icms,  icmsSt,  icmsStSd,  icmsPartOwn,  icmsPartDest,  icmsDifaFCP,  icmsDifaDest,  icmsDifaRemet,  icmsRf,  icmsDeson,  icmsCredsn,  pis,  pisSt,  cofins,  cofinsSt,  ipi,  ipiReturned,  ii,  iof,  aproxtribState,  aproxtribFed,  aproxtrib, 
  };
  @SerializedName("taxType")
  private TaxTypeEnum taxType = null;
  @SerializedName("rateType")
  private String rateType = null;
  @SerializedName("scenario")
  private String scenario = null;
  @SerializedName("subtotalTaxable")
  private Double subtotalTaxable = null;
  @SerializedName("rate")
  private Double rate = null;
  @SerializedName("tax")
  private Double tax = null;
  @SerializedName("exemptionCode")
  private String exemptionCode = null;
  @SerializedName("significantLocations")
  private List<String> significantLocations = null;
  public enum TaxRuleTypeEnum {
     SELLER,  BUYER,  TRANSACTION,  ITEM,  TAX, 
  };
  @SerializedName("taxRuleType")
  private TaxRuleTypeEnum taxRuleType = null;
  @SerializedName("source")
  private Integer source = null;
  @SerializedName("cstB")
  private String cstB = null;
  @SerializedName("modBC")
  private String modBC = null;
  @SerializedName("cst")
  private String cst = null;

  /**
   * This string captures the applicable location type. Location used for calc. Buyer or Seller
   **/
  @ApiModelProperty(value = "This string captures the applicable location type. Location used for calc. Buyer or Seller")
  public String getLocationType() {
    return locationType;
  }
  public void setLocationType(String locationType) {
    this.locationType = locationType;
  }

  /**
   * Jurisdiction used for calctax amount
   **/
  @ApiModelProperty(value = "Jurisdiction used for calctax amount")
  public String getJurisdictionName() {
    return jurisdictionName;
  }
  public void setJurisdictionName(String jurisdictionName) {
    this.jurisdictionName = jurisdictionName;
  }

  /**
   * Type of jurisdiction
   **/
  @ApiModelProperty(value = "Type of jurisdiction")
  public JurisdictionTypeEnum getJurisdictionType() {
    return jurisdictionType;
  }
  public void setJurisdictionType(JurisdictionTypeEnum jurisdictionType) {
    this.jurisdictionType = jurisdictionType;
  }

  /**
   * Tax identificator
   **/
  @ApiModelProperty(value = "Tax identificator")
  public TaxTypeEnum getTaxType() {
    return taxType;
  }
  public void setTaxType(TaxTypeEnum taxType) {
    this.taxType = taxType;
  }

  /**
   * Name of configuration rate
   **/
  @ApiModelProperty(value = "Name of configuration rate")
  public String getRateType() {
    return rateType;
  }
  public void setRateType(String rateType) {
    this.rateType = rateType;
  }

  /**
   * This string captures the transaction scenario used to calculate the tax for this tax type. Scenarios are specific to the tax type. This field provides information about how the tax engine interpreted the transaction information that was passed in.
   **/
  @ApiModelProperty(value = "This string captures the transaction scenario used to calculate the tax for this tax type. Scenarios are specific to the tax type. This field provides information about how the tax engine interpreted the transaction information that was passed in.")
  public String getScenario() {
    return scenario;
  }
  public void setScenario(String scenario) {
    this.scenario = scenario;
  }

  /**
   * This decimal captures how much of the lineAmount was taxable by this tax, calc base
   **/
  @ApiModelProperty(value = "This decimal captures how much of the lineAmount was taxable by this tax, calc base")
  public Double getSubtotalTaxable() {
    return subtotalTaxable;
  }
  public void setSubtotalTaxable(Double subtotalTaxable) {
    this.subtotalTaxable = subtotalTaxable;
  }

  /**
   * This decimal captures the tax rate for this tax.3.00 (3%)
   **/
  @ApiModelProperty(value = "This decimal captures the tax rate for this tax.3.00 (3%)")
  public Double getRate() {
    return rate;
  }
  public void setRate(Double rate) {
    this.rate = rate;
  }

  /**
   * This decimal captures how much of the lineAmount was taxable by this tax
   **/
  @ApiModelProperty(value = "This decimal captures how much of the lineAmount was taxable by this tax")
  public Double getTax() {
    return tax;
  }
  public void setTax(Double tax) {
    this.tax = tax;
  }

  /**
   * This string is required if is exempt
   **/
  @ApiModelProperty(value = "This string is required if is exempt")
  public String getExemptionCode() {
    return exemptionCode;
  }
  public void setExemptionCode(String exemptionCode) {
    this.exemptionCode = exemptionCode;
  }

  /**
   * This element captures the list of locations that contributed to the tax determination. for Service is Buyer and Seller Address
   **/
  @ApiModelProperty(value = "This element captures the list of locations that contributed to the tax determination. for Service is Buyer and Seller Address")
  public List<String> getSignificantLocations() {
    return significantLocations;
  }
  public void setSignificantLocations(List<String> significantLocations) {
    this.significantLocations = significantLocations;
  }

  /**
   * This string with type of rule
   **/
  @ApiModelProperty(value = "This string with type of rule")
  public TaxRuleTypeEnum getTaxRuleType() {
    return taxRuleType;
  }
  public void setTaxRuleType(TaxRuleTypeEnum taxRuleType) {
    this.taxRuleType = taxRuleType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getSource() {
    return source;
  }
  public void setSource(Integer source) {
    this.source = source;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCstB() {
    return cstB;
  }
  public void setCstB(String cstB) {
    this.cstB = cstB;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getModBC() {
    return modBC;
  }
  public void setModBC(String modBC) {
    this.modBC = modBC;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCst() {
    return cst;
  }
  public void setCst(String cst) {
    this.cst = cst;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailsCalculatedTaxItem detailsCalculatedTaxItem = (DetailsCalculatedTaxItem) o;
    return (this.locationType == null ? detailsCalculatedTaxItem.locationType == null : this.locationType.equals(detailsCalculatedTaxItem.locationType)) &&
        (this.jurisdictionName == null ? detailsCalculatedTaxItem.jurisdictionName == null : this.jurisdictionName.equals(detailsCalculatedTaxItem.jurisdictionName)) &&
        (this.jurisdictionType == null ? detailsCalculatedTaxItem.jurisdictionType == null : this.jurisdictionType.equals(detailsCalculatedTaxItem.jurisdictionType)) &&
        (this.taxType == null ? detailsCalculatedTaxItem.taxType == null : this.taxType.equals(detailsCalculatedTaxItem.taxType)) &&
        (this.rateType == null ? detailsCalculatedTaxItem.rateType == null : this.rateType.equals(detailsCalculatedTaxItem.rateType)) &&
        (this.scenario == null ? detailsCalculatedTaxItem.scenario == null : this.scenario.equals(detailsCalculatedTaxItem.scenario)) &&
        (this.subtotalTaxable == null ? detailsCalculatedTaxItem.subtotalTaxable == null : this.subtotalTaxable.equals(detailsCalculatedTaxItem.subtotalTaxable)) &&
        (this.rate == null ? detailsCalculatedTaxItem.rate == null : this.rate.equals(detailsCalculatedTaxItem.rate)) &&
        (this.tax == null ? detailsCalculatedTaxItem.tax == null : this.tax.equals(detailsCalculatedTaxItem.tax)) &&
        (this.exemptionCode == null ? detailsCalculatedTaxItem.exemptionCode == null : this.exemptionCode.equals(detailsCalculatedTaxItem.exemptionCode)) &&
        (this.significantLocations == null ? detailsCalculatedTaxItem.significantLocations == null : this.significantLocations.equals(detailsCalculatedTaxItem.significantLocations)) &&
        (this.taxRuleType == null ? detailsCalculatedTaxItem.taxRuleType == null : this.taxRuleType.equals(detailsCalculatedTaxItem.taxRuleType)) &&
        (this.source == null ? detailsCalculatedTaxItem.source == null : this.source.equals(detailsCalculatedTaxItem.source)) &&
        (this.cstB == null ? detailsCalculatedTaxItem.cstB == null : this.cstB.equals(detailsCalculatedTaxItem.cstB)) &&
        (this.modBC == null ? detailsCalculatedTaxItem.modBC == null : this.modBC.equals(detailsCalculatedTaxItem.modBC)) &&
        (this.cst == null ? detailsCalculatedTaxItem.cst == null : this.cst.equals(detailsCalculatedTaxItem.cst));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.locationType == null ? 0: this.locationType.hashCode());
    result = 31 * result + (this.jurisdictionName == null ? 0: this.jurisdictionName.hashCode());
    result = 31 * result + (this.jurisdictionType == null ? 0: this.jurisdictionType.hashCode());
    result = 31 * result + (this.taxType == null ? 0: this.taxType.hashCode());
    result = 31 * result + (this.rateType == null ? 0: this.rateType.hashCode());
    result = 31 * result + (this.scenario == null ? 0: this.scenario.hashCode());
    result = 31 * result + (this.subtotalTaxable == null ? 0: this.subtotalTaxable.hashCode());
    result = 31 * result + (this.rate == null ? 0: this.rate.hashCode());
    result = 31 * result + (this.tax == null ? 0: this.tax.hashCode());
    result = 31 * result + (this.exemptionCode == null ? 0: this.exemptionCode.hashCode());
    result = 31 * result + (this.significantLocations == null ? 0: this.significantLocations.hashCode());
    result = 31 * result + (this.taxRuleType == null ? 0: this.taxRuleType.hashCode());
    result = 31 * result + (this.source == null ? 0: this.source.hashCode());
    result = 31 * result + (this.cstB == null ? 0: this.cstB.hashCode());
    result = 31 * result + (this.modBC == null ? 0: this.modBC.hashCode());
    result = 31 * result + (this.cst == null ? 0: this.cst.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailsCalculatedTaxItem {\n");
    
    sb.append("  locationType: ").append(locationType).append("\n");
    sb.append("  jurisdictionName: ").append(jurisdictionName).append("\n");
    sb.append("  jurisdictionType: ").append(jurisdictionType).append("\n");
    sb.append("  taxType: ").append(taxType).append("\n");
    sb.append("  rateType: ").append(rateType).append("\n");
    sb.append("  scenario: ").append(scenario).append("\n");
    sb.append("  subtotalTaxable: ").append(subtotalTaxable).append("\n");
    sb.append("  rate: ").append(rate).append("\n");
    sb.append("  tax: ").append(tax).append("\n");
    sb.append("  exemptionCode: ").append(exemptionCode).append("\n");
    sb.append("  significantLocations: ").append(significantLocations).append("\n");
    sb.append("  taxRuleType: ").append(taxRuleType).append("\n");
    sb.append("  source: ").append(source).append("\n");
    sb.append("  cstB: ").append(cstB).append("\n");
    sb.append("  modBC: ").append(modBC).append("\n");
    sb.append("  cst: ").append(cst).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
