/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.LineForGoodsAdi;
import io.swagger.client.model.StateEnum;
import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class LineForGoodsDi {
  
  @SerializedName("customsValue")
  private Double customsValue = null;
  @SerializedName("diNumber")
  private String diNumber = null;
  @SerializedName("registerDateDI")
  private Date registerDateDI = null;
  @SerializedName("clearanceSite")
  private String clearanceSite = null;
  @SerializedName("clearanceState")
  private StateEnum clearanceState = null;
  @SerializedName("clearanceDate")
  private Date clearanceDate = null;
  public enum TransportDITypeEnum {
     1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 
  };
  @SerializedName("transportDIType")
  private TransportDITypeEnum transportDIType = null;
  @SerializedName("afrmmValue")
  private Double afrmmValue = null;
  public enum IntermediateTypeEnum {
     1,  2,  3, 
  };
  @SerializedName("intermediateType")
  private IntermediateTypeEnum intermediateType = null;
  @SerializedName("buyerFederalTaxID")
  private String buyerFederalTaxID = null;
  @SerializedName("buyerState")
  private StateEnum buyerState = null;
  @SerializedName("exporterCode")
  private String exporterCode = null;
  @SerializedName("adi")
  private List<LineForGoodsAdi> adi = null;

  /**
   * customs value, valor aduaneiro (II Block of NFe)
   **/
  @ApiModelProperty(value = "customs value, valor aduaneiro (II Block of NFe)")
  public Double getCustomsValue() {
    return customsValue;
  }
  public void setCustomsValue(Double customsValue) {
    this.customsValue = customsValue;
  }

  /**
   * Import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)
   **/
  @ApiModelProperty(required = true, value = "Import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)")
  public String getDiNumber() {
    return diNumber;
  }
  public void setDiNumber(String diNumber) {
    this.diNumber = diNumber;
  }

  /**
   * Register date of import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)
   **/
  @ApiModelProperty(required = true, value = "Register date of import declaration number, DI/DSI/DA/DRI-E (DI/DSI/DA/DRI-E)")
  public Date getRegisterDateDI() {
    return registerDateDI;
  }
  public void setRegisterDateDI(Date registerDateDI) {
    this.registerDateDI = registerDateDI;
  }

  /**
   * Clerance Site Local do desembaraço aduaneiro 
   **/
  @ApiModelProperty(required = true, value = "Clerance Site Local do desembaraço aduaneiro ")
  public String getClearanceSite() {
    return clearanceSite;
  }
  public void setClearanceSite(String clearanceSite) {
    this.clearanceSite = clearanceSite;
  }

  /**
   * Clerance Site State Estado onde ocorrreu o desembaraço aduaneiro 
   **/
  @ApiModelProperty(required = true, value = "Clerance Site State Estado onde ocorrreu o desembaraço aduaneiro ")
  public StateEnum getClearanceState() {
    return clearanceState;
  }
  public void setClearanceState(StateEnum clearanceState) {
    this.clearanceState = clearanceState;
  }

  /**
   * Clerance date
   **/
  @ApiModelProperty(value = "Clerance date")
  public Date getClearanceDate() {
    return clearanceDate;
  }
  public void setClearanceDate(Date clearanceDate) {
    this.clearanceDate = clearanceDate;
  }

  /**
   * - '1' # Maritima - '2' # Fluvial - '3' # Lacustre - '4' # Aerea - '5' # Postal - '6' # Ferroviaria - '7' # Rodoviaria - '8' # Conduto - '9' # Meios Proprios - '10' # Entrada/Saida Ficta 
   **/
  @ApiModelProperty(required = true, value = "- '1' # Maritima - '2' # Fluvial - '3' # Lacustre - '4' # Aerea - '5' # Postal - '6' # Ferroviaria - '7' # Rodoviaria - '8' # Conduto - '9' # Meios Proprios - '10' # Entrada/Saida Ficta ")
  public TransportDITypeEnum getTransportDIType() {
    return transportDIType;
  }
  public void setTransportDIType(TransportDITypeEnum transportDIType) {
    this.transportDIType = transportDIType;
  }

  /**
   * Aditional amount to freight to renew merchant marine, This decimal 13 integers and 2 decimals [Valor Adicional ao frete para renovação de marinha mercante] 
   **/
  @ApiModelProperty(value = "Aditional amount to freight to renew merchant marine, This decimal 13 integers and 2 decimals [Valor Adicional ao frete para renovação de marinha mercante] ")
  public Double getAfrmmValue() {
    return afrmmValue;
  }
  public void setAfrmmValue(Double afrmmValue) {
    this.afrmmValue = afrmmValue;
  }

  /**
   * - '1' # On One's Own [1-por conta propria] - '2' # On Behalf And Order [2-por conta e ordem] - '3' # Order [3-encomenda] 
   **/
  @ApiModelProperty(required = true, value = "- '1' # On One's Own [1-por conta propria] - '2' # On Behalf And Order [2-por conta e ordem] - '3' # Order [3-encomenda] ")
  public IntermediateTypeEnum getIntermediateType() {
    return intermediateType;
  }
  public void setIntermediateType(IntermediateTypeEnum intermediateType) {
    this.intermediateType = intermediateType;
  }

  /**
   * Buyer federal tax id CNPJ do comprador ou encomendante 
   **/
  @ApiModelProperty(value = "Buyer federal tax id CNPJ do comprador ou encomendante ")
  public String getBuyerFederalTaxID() {
    return buyerFederalTaxID;
  }
  public void setBuyerFederalTaxID(String buyerFederalTaxID) {
    this.buyerFederalTaxID = buyerFederalTaxID;
  }

  /**
   * Buyer sate Estado do comprador ou encomendante 
   **/
  @ApiModelProperty(value = "Buyer sate Estado do comprador ou encomendante ")
  public StateEnum getBuyerState() {
    return buyerState;
  }
  public void setBuyerState(StateEnum buyerState) {
    this.buyerState = buyerState;
  }

  /**
   * Exporter code
   **/
  @ApiModelProperty(value = "Exporter code")
  public String getExporterCode() {
    return exporterCode;
  }
  public void setExporterCode(String exporterCode) {
    this.exporterCode = exporterCode;
  }

  /**
   * aditional import declaration
   **/
  @ApiModelProperty(required = true, value = "aditional import declaration")
  public List<LineForGoodsAdi> getAdi() {
    return adi;
  }
  public void setAdi(List<LineForGoodsAdi> adi) {
    this.adi = adi;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LineForGoodsDi lineForGoodsDi = (LineForGoodsDi) o;
    return (this.customsValue == null ? lineForGoodsDi.customsValue == null : this.customsValue.equals(lineForGoodsDi.customsValue)) &&
        (this.diNumber == null ? lineForGoodsDi.diNumber == null : this.diNumber.equals(lineForGoodsDi.diNumber)) &&
        (this.registerDateDI == null ? lineForGoodsDi.registerDateDI == null : this.registerDateDI.equals(lineForGoodsDi.registerDateDI)) &&
        (this.clearanceSite == null ? lineForGoodsDi.clearanceSite == null : this.clearanceSite.equals(lineForGoodsDi.clearanceSite)) &&
        (this.clearanceState == null ? lineForGoodsDi.clearanceState == null : this.clearanceState.equals(lineForGoodsDi.clearanceState)) &&
        (this.clearanceDate == null ? lineForGoodsDi.clearanceDate == null : this.clearanceDate.equals(lineForGoodsDi.clearanceDate)) &&
        (this.transportDIType == null ? lineForGoodsDi.transportDIType == null : this.transportDIType.equals(lineForGoodsDi.transportDIType)) &&
        (this.afrmmValue == null ? lineForGoodsDi.afrmmValue == null : this.afrmmValue.equals(lineForGoodsDi.afrmmValue)) &&
        (this.intermediateType == null ? lineForGoodsDi.intermediateType == null : this.intermediateType.equals(lineForGoodsDi.intermediateType)) &&
        (this.buyerFederalTaxID == null ? lineForGoodsDi.buyerFederalTaxID == null : this.buyerFederalTaxID.equals(lineForGoodsDi.buyerFederalTaxID)) &&
        (this.buyerState == null ? lineForGoodsDi.buyerState == null : this.buyerState.equals(lineForGoodsDi.buyerState)) &&
        (this.exporterCode == null ? lineForGoodsDi.exporterCode == null : this.exporterCode.equals(lineForGoodsDi.exporterCode)) &&
        (this.adi == null ? lineForGoodsDi.adi == null : this.adi.equals(lineForGoodsDi.adi));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.customsValue == null ? 0: this.customsValue.hashCode());
    result = 31 * result + (this.diNumber == null ? 0: this.diNumber.hashCode());
    result = 31 * result + (this.registerDateDI == null ? 0: this.registerDateDI.hashCode());
    result = 31 * result + (this.clearanceSite == null ? 0: this.clearanceSite.hashCode());
    result = 31 * result + (this.clearanceState == null ? 0: this.clearanceState.hashCode());
    result = 31 * result + (this.clearanceDate == null ? 0: this.clearanceDate.hashCode());
    result = 31 * result + (this.transportDIType == null ? 0: this.transportDIType.hashCode());
    result = 31 * result + (this.afrmmValue == null ? 0: this.afrmmValue.hashCode());
    result = 31 * result + (this.intermediateType == null ? 0: this.intermediateType.hashCode());
    result = 31 * result + (this.buyerFederalTaxID == null ? 0: this.buyerFederalTaxID.hashCode());
    result = 31 * result + (this.buyerState == null ? 0: this.buyerState.hashCode());
    result = 31 * result + (this.exporterCode == null ? 0: this.exporterCode.hashCode());
    result = 31 * result + (this.adi == null ? 0: this.adi.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LineForGoodsDi {\n");
    
    sb.append("  customsValue: ").append(customsValue).append("\n");
    sb.append("  diNumber: ").append(diNumber).append("\n");
    sb.append("  registerDateDI: ").append(registerDateDI).append("\n");
    sb.append("  clearanceSite: ").append(clearanceSite).append("\n");
    sb.append("  clearanceState: ").append(clearanceState).append("\n");
    sb.append("  clearanceDate: ").append(clearanceDate).append("\n");
    sb.append("  transportDIType: ").append(transportDIType).append("\n");
    sb.append("  afrmmValue: ").append(afrmmValue).append("\n");
    sb.append("  intermediateType: ").append(intermediateType).append("\n");
    sb.append("  buyerFederalTaxID: ").append(buyerFederalTaxID).append("\n");
    sb.append("  buyerState: ").append(buyerState).append("\n");
    sb.append("  exporterCode: ").append(exporterCode).append("\n");
    sb.append("  adi: ").append(adi).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
