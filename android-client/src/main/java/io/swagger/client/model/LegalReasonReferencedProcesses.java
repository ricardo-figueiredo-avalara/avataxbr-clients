/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class LegalReasonReferencedProcesses {
  
  @SerializedName("nProc")
  private String nProc = null;
  public enum IndProcEnum {
     0,  1,  2,  3,  9, 
  };
  @SerializedName("indProc")
  private IndProcEnum indProc = null;

  /**
   * Process Identifier (NFe <nProc> tag)
   **/
  @ApiModelProperty(value = "Process Identifier (NFe <nProc> tag)")
  public String getNProc() {
    return nProc;
  }
  public void setNProc(String nProc) {
    this.nProc = nProc;
  }

  /**
   * Process Origin (NFe <indProc> tag) - '0' # SEFAZ; - '1' # Justiça Federal; - '2' # Justiça Estadual; - '3' # Secex/RFB; - '9' # Outros 
   **/
  @ApiModelProperty(value = "Process Origin (NFe <indProc> tag) - '0' # SEFAZ; - '1' # Justiça Federal; - '2' # Justiça Estadual; - '3' # Secex/RFB; - '9' # Outros ")
  public IndProcEnum getIndProc() {
    return indProc;
  }
  public void setIndProc(IndProcEnum indProc) {
    this.indProc = indProc;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LegalReasonReferencedProcesses legalReasonReferencedProcesses = (LegalReasonReferencedProcesses) o;
    return (this.nProc == null ? legalReasonReferencedProcesses.nProc == null : this.nProc.equals(legalReasonReferencedProcesses.nProc)) &&
        (this.indProc == null ? legalReasonReferencedProcesses.indProc == null : this.indProc.equals(legalReasonReferencedProcesses.indProc));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.nProc == null ? 0: this.nProc.hashCode());
    result = 31 * result + (this.indProc == null ? 0: this.indProc.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LegalReasonReferencedProcesses {\n");
    
    sb.append("  nProc: ").append(nProc).append("\n");
    sb.append("  indProc: ").append(indProc).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
