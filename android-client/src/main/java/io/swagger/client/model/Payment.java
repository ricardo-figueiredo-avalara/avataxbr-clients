/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.PaymentBill;
import io.swagger.client.model.PaymentInstallment;
import io.swagger.client.model.PaymentPaymentMode;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Payment {
  
  @SerializedName("installmentsTerms")
  private Integer installmentsTerms = null;
  @SerializedName("bill")
  private PaymentBill bill = null;
  @SerializedName("installment")
  private List<PaymentInstallment> installment = null;
  @SerializedName("paymentMode")
  private List<PaymentPaymentMode> paymentMode = null;

  /**
   * Installment terms - 0 # cash - 1 # on terms - 2 # other 
   **/
  @ApiModelProperty(value = "Installment terms - 0 # cash - 1 # on terms - 2 # other ")
  public Integer getInstallmentsTerms() {
    return installmentsTerms;
  }
  public void setInstallmentsTerms(Integer installmentsTerms) {
    this.installmentsTerms = installmentsTerms;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public PaymentBill getBill() {
    return bill;
  }
  public void setBill(PaymentBill bill) {
    this.bill = bill;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<PaymentInstallment> getInstallment() {
    return installment;
  }
  public void setInstallment(List<PaymentInstallment> installment) {
    this.installment = installment;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<PaymentPaymentMode> getPaymentMode() {
    return paymentMode;
  }
  public void setPaymentMode(List<PaymentPaymentMode> paymentMode) {
    this.paymentMode = paymentMode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Payment payment = (Payment) o;
    return (this.installmentsTerms == null ? payment.installmentsTerms == null : this.installmentsTerms.equals(payment.installmentsTerms)) &&
        (this.bill == null ? payment.bill == null : this.bill.equals(payment.bill)) &&
        (this.installment == null ? payment.installment == null : this.installment.equals(payment.installment)) &&
        (this.paymentMode == null ? payment.paymentMode == null : this.paymentMode.equals(payment.paymentMode));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.installmentsTerms == null ? 0: this.installmentsTerms.hashCode());
    result = 31 * result + (this.bill == null ? 0: this.bill.hashCode());
    result = 31 * result + (this.installment == null ? 0: this.installment.hashCode());
    result = 31 * result + (this.paymentMode == null ? 0: this.paymentMode.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Payment {\n");
    
    sb.append("  installmentsTerms: ").append(installmentsTerms).append("\n");
    sb.append("  bill: ").append(bill).append("\n");
    sb.append("  installment: ").append(installment).append("\n");
    sb.append("  paymentMode: ").append(paymentMode).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
