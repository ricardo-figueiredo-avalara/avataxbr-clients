/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Medicine {
  
  @SerializedName("loteNumber")
  private String loteNumber = null;
  @SerializedName("loteQuantity")
  private Double loteQuantity = null;
  @SerializedName("manufactotyDate")
  private Date manufactotyDate = null;
  @SerializedName("expirationDate")
  private Date expirationDate = null;
  @SerializedName("maxValueToEndUser")
  private Double maxValueToEndUser = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getLoteNumber() {
    return loteNumber;
  }
  public void setLoteNumber(String loteNumber) {
    this.loteNumber = loteNumber;
  }

  /**
   * This is a decimal type with 11 digits including 3 decimal positions.
   **/
  @ApiModelProperty(required = true, value = "This is a decimal type with 11 digits including 3 decimal positions.")
  public Double getLoteQuantity() {
    return loteQuantity;
  }
  public void setLoteQuantity(Double loteQuantity) {
    this.loteQuantity = loteQuantity;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getManufactotyDate() {
    return manufactotyDate;
  }
  public void setManufactotyDate(Date manufactotyDate) {
    this.manufactotyDate = manufactotyDate;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getExpirationDate() {
    return expirationDate;
  }
  public void setExpirationDate(Date expirationDate) {
    this.expirationDate = expirationDate;
  }

  /**
   * This is a decimal type with 15 digits including 2 decimal positions.  Max value to end user.
   **/
  @ApiModelProperty(required = true, value = "This is a decimal type with 15 digits including 2 decimal positions.  Max value to end user.")
  public Double getMaxValueToEndUser() {
    return maxValueToEndUser;
  }
  public void setMaxValueToEndUser(Double maxValueToEndUser) {
    this.maxValueToEndUser = maxValueToEndUser;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Medicine medicine = (Medicine) o;
    return (this.loteNumber == null ? medicine.loteNumber == null : this.loteNumber.equals(medicine.loteNumber)) &&
        (this.loteQuantity == null ? medicine.loteQuantity == null : this.loteQuantity.equals(medicine.loteQuantity)) &&
        (this.manufactotyDate == null ? medicine.manufactotyDate == null : this.manufactotyDate.equals(medicine.manufactotyDate)) &&
        (this.expirationDate == null ? medicine.expirationDate == null : this.expirationDate.equals(medicine.expirationDate)) &&
        (this.maxValueToEndUser == null ? medicine.maxValueToEndUser == null : this.maxValueToEndUser.equals(medicine.maxValueToEndUser));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.loteNumber == null ? 0: this.loteNumber.hashCode());
    result = 31 * result + (this.loteQuantity == null ? 0: this.loteQuantity.hashCode());
    result = 31 * result + (this.manufactotyDate == null ? 0: this.manufactotyDate.hashCode());
    result = 31 * result + (this.expirationDate == null ? 0: this.expirationDate.hashCode());
    result = 31 * result + (this.maxValueToEndUser == null ? 0: this.maxValueToEndUser.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Medicine {\n");
    
    sb.append("  loteNumber: ").append(loteNumber).append("\n");
    sb.append("  loteQuantity: ").append(loteQuantity).append("\n");
    sb.append("  manufactotyDate: ").append(manufactotyDate).append("\n");
    sb.append("  expirationDate: ").append(expirationDate).append("\n");
    sb.append("  maxValueToEndUser: ").append(maxValueToEndUser).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
