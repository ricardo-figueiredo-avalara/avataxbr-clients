/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.PurchaseTaxByType;
import io.swagger.client.model.PurchaseTaxByTypeDetail;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class PurchaseCalculatedTax {
  
  @SerializedName("taxByType")
  private PurchaseTaxByType taxByType = null;
  @SerializedName("tax")
  private Double tax = null;
  @SerializedName("details")
  private List<PurchaseTaxByTypeDetail> details = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public PurchaseTaxByType getTaxByType() {
    return taxByType;
  }
  public void setTaxByType(PurchaseTaxByType taxByType) {
    this.taxByType = taxByType;
  }

  /**
   * Sum of tax type not VAT (Value Added Tax)
   **/
  @ApiModelProperty(value = "Sum of tax type not VAT (Value Added Tax)")
  public Double getTax() {
    return tax;
  }
  public void setTax(Double tax) {
    this.tax = tax;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<PurchaseTaxByTypeDetail> getDetails() {
    return details;
  }
  public void setDetails(List<PurchaseTaxByTypeDetail> details) {
    this.details = details;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseCalculatedTax purchaseCalculatedTax = (PurchaseCalculatedTax) o;
    return (this.taxByType == null ? purchaseCalculatedTax.taxByType == null : this.taxByType.equals(purchaseCalculatedTax.taxByType)) &&
        (this.tax == null ? purchaseCalculatedTax.tax == null : this.tax.equals(purchaseCalculatedTax.tax)) &&
        (this.details == null ? purchaseCalculatedTax.details == null : this.details.equals(purchaseCalculatedTax.details));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.taxByType == null ? 0: this.taxByType.hashCode());
    result = 31 * result + (this.tax == null ? 0: this.tax.hashCode());
    result = 31 * result + (this.details == null ? 0: this.details.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseCalculatedTax {\n");
    
    sb.append("  taxByType: ").append(taxByType).append("\n");
    sb.append("  tax: ").append(tax).append("\n");
    sb.append("  details: ").append(details).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
