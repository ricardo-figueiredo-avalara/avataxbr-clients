/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.TaxByTypeSummaryJurisdictionForGoods;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * summary of all taxes
 **/
@ApiModel(description = "summary of all taxes")
public class TaxByTypeSummaryForGoods {
  
  @SerializedName("calcbase")
  private Double calcbase = null;
  @SerializedName("tax")
  private Double tax = null;
  @SerializedName("jurisdictions")
  private List<TaxByTypeSummaryJurisdictionForGoods> jurisdictions = null;

  /**
   * sum of all lines calcbase
   **/
  @ApiModelProperty(value = "sum of all lines calcbase")
  public Double getCalcbase() {
    return calcbase;
  }
  public void setCalcbase(Double calcbase) {
    this.calcbase = calcbase;
  }

  /**
   * sum of referenced tax value
   **/
  @ApiModelProperty(value = "sum of referenced tax value")
  public Double getTax() {
    return tax;
  }
  public void setTax(Double tax) {
    this.tax = tax;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<TaxByTypeSummaryJurisdictionForGoods> getJurisdictions() {
    return jurisdictions;
  }
  public void setJurisdictions(List<TaxByTypeSummaryJurisdictionForGoods> jurisdictions) {
    this.jurisdictions = jurisdictions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxByTypeSummaryForGoods taxByTypeSummaryForGoods = (TaxByTypeSummaryForGoods) o;
    return (this.calcbase == null ? taxByTypeSummaryForGoods.calcbase == null : this.calcbase.equals(taxByTypeSummaryForGoods.calcbase)) &&
        (this.tax == null ? taxByTypeSummaryForGoods.tax == null : this.tax.equals(taxByTypeSummaryForGoods.tax)) &&
        (this.jurisdictions == null ? taxByTypeSummaryForGoods.jurisdictions == null : this.jurisdictions.equals(taxByTypeSummaryForGoods.jurisdictions));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.calcbase == null ? 0: this.calcbase.hashCode());
    result = 31 * result + (this.tax == null ? 0: this.tax.hashCode());
    result = 31 * result + (this.jurisdictions == null ? 0: this.jurisdictions.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxByTypeSummaryForGoods {\n");
    
    sb.append("  calcbase: ").append(calcbase).append("\n");
    sb.append("  tax: ").append(tax).append("\n");
    sb.append("  jurisdictions: ").append(jurisdictions).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
