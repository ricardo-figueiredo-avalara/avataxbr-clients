/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class PayRecLinesIn {
  
  @SerializedName("lineCode")
  private Integer lineCode = null;
  public enum LineTypeEnum {
     installment, 
  };
  @SerializedName("lineType")
  private LineTypeEnum lineType = null;
  @SerializedName("itemCode")
  private String itemCode = null;
  @SerializedName("itemDescription")
  private String itemDescription = null;
  @SerializedName("itemDocNumber")
  private String itemDocNumber = null;
  @SerializedName("lineUntaxedPenality")
  private Double lineUntaxedPenality = null;
  @SerializedName("lineUntaxedDiscount")
  private Double lineUntaxedDiscount = null;

  /**
   * Installment number in this document
   **/
  @ApiModelProperty(value = "Installment number in this document")
  public Integer getLineCode() {
    return lineCode;
  }
  public void setLineCode(Integer lineCode) {
    this.lineCode = lineCode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public LineTypeEnum getLineType() {
    return lineType;
  }
  public void setLineType(LineTypeEnum lineType) {
    this.lineType = lineType;
  }

  /**
   * Bill transaction code This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc.
   **/
  @ApiModelProperty(required = true, value = "Bill transaction code This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc.")
  public String getItemCode() {
    return itemCode;
  }
  public void setItemCode(String itemCode) {
    this.itemCode = itemCode;
  }

  /**
   * Free description about this payment
   **/
  @ApiModelProperty(value = "Free description about this payment")
  public String getItemDescription() {
    return itemDescription;
  }
  public void setItemDescription(String itemDescription) {
    this.itemDescription = itemDescription;
  }

  /**
   * Installment number, when paid AS IS
   **/
  @ApiModelProperty(value = "Installment number, when paid AS IS")
  public String getItemDocNumber() {
    return itemDocNumber;
  }
  public void setItemDocNumber(String itemDocNumber) {
    this.itemDocNumber = itemDocNumber;
  }

  /**
   * Penalty, usually because paid after due date
   **/
  @ApiModelProperty(value = "Penalty, usually because paid after due date")
  public Double getLineUntaxedPenality() {
    return lineUntaxedPenality;
  }
  public void setLineUntaxedPenality(Double lineUntaxedPenality) {
    this.lineUntaxedPenality = lineUntaxedPenality;
  }

  /**
   * unconditional discounts
   **/
  @ApiModelProperty(value = "unconditional discounts")
  public Double getLineUntaxedDiscount() {
    return lineUntaxedDiscount;
  }
  public void setLineUntaxedDiscount(Double lineUntaxedDiscount) {
    this.lineUntaxedDiscount = lineUntaxedDiscount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayRecLinesIn payRecLinesIn = (PayRecLinesIn) o;
    return (this.lineCode == null ? payRecLinesIn.lineCode == null : this.lineCode.equals(payRecLinesIn.lineCode)) &&
        (this.lineType == null ? payRecLinesIn.lineType == null : this.lineType.equals(payRecLinesIn.lineType)) &&
        (this.itemCode == null ? payRecLinesIn.itemCode == null : this.itemCode.equals(payRecLinesIn.itemCode)) &&
        (this.itemDescription == null ? payRecLinesIn.itemDescription == null : this.itemDescription.equals(payRecLinesIn.itemDescription)) &&
        (this.itemDocNumber == null ? payRecLinesIn.itemDocNumber == null : this.itemDocNumber.equals(payRecLinesIn.itemDocNumber)) &&
        (this.lineUntaxedPenality == null ? payRecLinesIn.lineUntaxedPenality == null : this.lineUntaxedPenality.equals(payRecLinesIn.lineUntaxedPenality)) &&
        (this.lineUntaxedDiscount == null ? payRecLinesIn.lineUntaxedDiscount == null : this.lineUntaxedDiscount.equals(payRecLinesIn.lineUntaxedDiscount));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.lineCode == null ? 0: this.lineCode.hashCode());
    result = 31 * result + (this.lineType == null ? 0: this.lineType.hashCode());
    result = 31 * result + (this.itemCode == null ? 0: this.itemCode.hashCode());
    result = 31 * result + (this.itemDescription == null ? 0: this.itemDescription.hashCode());
    result = 31 * result + (this.itemDocNumber == null ? 0: this.itemDocNumber.hashCode());
    result = 31 * result + (this.lineUntaxedPenality == null ? 0: this.lineUntaxedPenality.hashCode());
    result = 31 * result + (this.lineUntaxedDiscount == null ? 0: this.lineUntaxedDiscount.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayRecLinesIn {\n");
    
    sb.append("  lineCode: ").append(lineCode).append("\n");
    sb.append("  lineType: ").append(lineType).append("\n");
    sb.append("  itemCode: ").append(itemCode).append("\n");
    sb.append("  itemDescription: ").append(itemDescription).append("\n");
    sb.append("  itemDocNumber: ").append(itemDocNumber).append("\n");
    sb.append("  lineUntaxedPenality: ").append(lineUntaxedPenality).append("\n");
    sb.append("  lineUntaxedDiscount: ").append(lineUntaxedDiscount).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
