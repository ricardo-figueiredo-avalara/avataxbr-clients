/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.CstIcmsEnum;
import io.swagger.client.model.IcmsTaxConf;
import io.swagger.client.model.TaxConf;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CfopConf {
  
  @SerializedName("code")
  private String code = null;
  @SerializedName("stockImpact")
  private Boolean stockImpact = null;
  @SerializedName("financialImpact")
  private Boolean financialImpact = null;
  public enum CstIPIEnum {
     50,  51,  52,  53,  54, 
  };
  @SerializedName("cstIPI")
  private CstIPIEnum cstIPI = null;
  @SerializedName("ipiLegalTaxClass")
  private String ipiLegalTaxClass = null;
  public enum AccruablePISTaxationEnum {
     T,  Z,  E,  H,  N, 
  };
  @SerializedName("accruablePISTaxation")
  private AccruablePISTaxationEnum accruablePISTaxation = null;
  @SerializedName("pisExemptLegalReasonCode")
  private String pisExemptLegalReasonCode = null;
  @SerializedName("pisExemptLegalReason")
  private String pisExemptLegalReason = null;
  public enum AccruableCOFINSTaxationEnum {
     T,  Z,  E,  H,  N, 
  };
  @SerializedName("accruableCOFINSTaxation")
  private AccruableCOFINSTaxationEnum accruableCOFINSTaxation = null;
  @SerializedName("cofinsExemptLegalReasonCode")
  private String cofinsExemptLegalReasonCode = null;
  @SerializedName("cofinsExemptLegalReason")
  private String cofinsExemptLegalReason = null;
  @SerializedName("allowIPIcreditWhenInGoing")
  private Boolean allowIPIcreditWhenInGoing = null;
  @SerializedName("icmsConf")
  private List<IcmsTaxConf> icmsConf = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("description")
  private String description = null;
  public enum WayTypeEnum {
     in,  out, 
  };
  @SerializedName("wayType")
  private WayTypeEnum wayType = null;
  @SerializedName("codInState")
  private Integer codInState = null;
  @SerializedName("codOtherState")
  private Integer codOtherState = null;
  @SerializedName("codOtherCountry")
  private Integer codOtherCountry = null;
  @SerializedName("cstICMSSameState")
  private CstIcmsEnum cstICMSSameState = null;
  @SerializedName("cstICMSOtherState")
  private CstIcmsEnum cstICMSOtherState = null;
  @SerializedName("cstICMSOtherCountry")
  private CstIcmsEnum cstICMSOtherCountry = null;
  public enum ProductTypeEnum {
     FOR PRODUCT,  FOR MERCHANDISE,  NO RESTRICTION, 
  };
  @SerializedName("productType")
  private ProductTypeEnum productType = null;
  @SerializedName("operationToTaxPayerOtherState")
  private Boolean operationToTaxPayerOtherState = null;
  @SerializedName("operationWithST")
  private Boolean operationWithST = null;
  @SerializedName("operationToFreeZone")
  private Boolean operationToFreeZone = null;
  public enum SpecificForProductClassEnum {
     OTHERS,  COMMUNICATION,  ENERGY,  TRANSPORT,  FUEL AND LUBRIFICANT,  VEHICLE,  ALCOHOLIC BEVERAGES,  WEAPONS,  AMMO,  PERFUM,  TOBACCO, 
  };
  @SerializedName("specificForProductClass")
  private SpecificForProductClassEnum specificForProductClass = null;

  /**
   * main unique identificator
   **/
  @ApiModelProperty(required = true, value = "main unique identificator")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }

  /**
   * Inform that the process has inventory impact.
   **/
  @ApiModelProperty(value = "Inform that the process has inventory impact.")
  public Boolean getStockImpact() {
    return stockImpact;
  }
  public void setStockImpact(Boolean stockImpact) {
    this.stockImpact = stockImpact;
  }

  /**
   * Inform that the process has financial impact.
   **/
  @ApiModelProperty(value = "Inform that the process has financial impact.")
  public Boolean getFinancialImpact() {
    return financialImpact;
  }
  public void setFinancialImpact(Boolean financialImpact) {
    this.financialImpact = financialImpact;
  }

  /**
   * Inform if this process is subject to IPI taxation on output process - '50' # Saída Tributada - '51' # Saída Tributável com Alíquota Zero - '52' # Saída Isenta - '53' # Saída Não-Tributada - '54' # Saída Imune 
   **/
  @ApiModelProperty(value = "Inform if this process is subject to IPI taxation on output process - '50' # Saída Tributada - '51' # Saída Tributável com Alíquota Zero - '52' # Saída Isenta - '53' # Saída Não-Tributada - '54' # Saída Imune ")
  public CstIPIEnum getCstIPI() {
    return cstIPI;
  }
  public void setCstIPI(CstIPIEnum cstIPI) {
    this.cstIPI = cstIPI;
  }

  /**
   * Legal tax classificação for IPI (enquadramento) When the processo has CST IPI 52 or 54, is mandatory inform Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU= 
   **/
  @ApiModelProperty(value = "Legal tax classificação for IPI (enquadramento) When the processo has CST IPI 52 or 54, is mandatory inform Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU= ")
  public String getIpiLegalTaxClass() {
    return ipiLegalTaxClass;
  }
  public void setIpiLegalTaxClass(String ipiLegalTaxClass) {
    this.ipiLegalTaxClass = ipiLegalTaxClass;
  }

  /**
   * Inform if this item by nature is subject to PIS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE 
   **/
  @ApiModelProperty(value = "Inform if this item by nature is subject to PIS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE ")
  public AccruablePISTaxationEnum getAccruablePISTaxation() {
    return accruablePISTaxation;
  }
  public void setAccruablePISTaxation(AccruablePISTaxationEnum accruablePISTaxation) {
    this.accruablePISTaxation = accruablePISTaxation;
  }

  /**
   * When exempt, taxable with zero, suspended, not taxable, this field holds the official code number
   **/
  @ApiModelProperty(value = "When exempt, taxable with zero, suspended, not taxable, this field holds the official code number")
  public String getPisExemptLegalReasonCode() {
    return pisExemptLegalReasonCode;
  }
  public void setPisExemptLegalReasonCode(String pisExemptLegalReasonCode) {
    this.pisExemptLegalReasonCode = pisExemptLegalReasonCode;
  }

  /**
   * When specifi reason, this field has the description
   **/
  @ApiModelProperty(value = "When specifi reason, this field has the description")
  public String getPisExemptLegalReason() {
    return pisExemptLegalReason;
  }
  public void setPisExemptLegalReason(String pisExemptLegalReason) {
    this.pisExemptLegalReason = pisExemptLegalReason;
  }

  /**
   * Inform if this item by nature is subject to COFINS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE 
   **/
  @ApiModelProperty(value = "Inform if this item by nature is subject to COFINS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE ")
  public AccruableCOFINSTaxationEnum getAccruableCOFINSTaxation() {
    return accruableCOFINSTaxation;
  }
  public void setAccruableCOFINSTaxation(AccruableCOFINSTaxationEnum accruableCOFINSTaxation) {
    this.accruableCOFINSTaxation = accruableCOFINSTaxation;
  }

  /**
   * When exempt, taxable with zero, suspended, not taxable, this field holds the official code number
   **/
  @ApiModelProperty(value = "When exempt, taxable with zero, suspended, not taxable, this field holds the official code number")
  public String getCofinsExemptLegalReasonCode() {
    return cofinsExemptLegalReasonCode;
  }
  public void setCofinsExemptLegalReasonCode(String cofinsExemptLegalReasonCode) {
    this.cofinsExemptLegalReasonCode = cofinsExemptLegalReasonCode;
  }

  /**
   * When specifi reason, this field has the description
   **/
  @ApiModelProperty(value = "When specifi reason, this field has the description")
  public String getCofinsExemptLegalReason() {
    return cofinsExemptLegalReason;
  }
  public void setCofinsExemptLegalReason(String cofinsExemptLegalReason) {
    this.cofinsExemptLegalReason = cofinsExemptLegalReason;
  }

  /**
   * Inform that the process allow IPI credit to Input process
   **/
  @ApiModelProperty(value = "Inform that the process allow IPI credit to Input process")
  public Boolean getAllowIPIcreditWhenInGoing() {
    return allowIPIcreditWhenInGoing;
  }
  public void setAllowIPIcreditWhenInGoing(Boolean allowIPIcreditWhenInGoing) {
    this.allowIPIcreditWhenInGoing = allowIPIcreditWhenInGoing;
  }

  /**
   * the map key is state code
   **/
  @ApiModelProperty(value = "the map key is state code")
  public List<IcmsTaxConf> getIcmsConf() {
    return icmsConf;
  }
  public void setIcmsConf(List<IcmsTaxConf> icmsConf) {
    this.icmsConf = icmsConf;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * inform if the transaction is an operation to internalizing item or value
   **/
  @ApiModelProperty(value = "inform if the transaction is an operation to internalizing item or value")
  public WayTypeEnum getWayType() {
    return wayType;
  }
  public void setWayType(WayTypeEnum wayType) {
    this.wayType = wayType;
  }

  /**
   * CFOP code (tax code operation) when the transactions are within the same state.
   **/
  @ApiModelProperty(value = "CFOP code (tax code operation) when the transactions are within the same state.")
  public Integer getCodInState() {
    return codInState;
  }
  public void setCodInState(Integer codInState) {
    this.codInState = codInState;
  }

  /**
   * CFOP code (tax code operation) when the transactions are to another state.
   **/
  @ApiModelProperty(value = "CFOP code (tax code operation) when the transactions are to another state.")
  public Integer getCodOtherState() {
    return codOtherState;
  }
  public void setCodOtherState(Integer codOtherState) {
    this.codOtherState = codOtherState;
  }

  /**
   * CFOP code (tax code operation) when the transactions are to another country.
   **/
  @ApiModelProperty(value = "CFOP code (tax code operation) when the transactions are to another country.")
  public Integer getCodOtherCountry() {
    return codOtherCountry;
  }
  public void setCodOtherCountry(Integer codOtherCountry) {
    this.codOtherCountry = codOtherCountry;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CstIcmsEnum getCstICMSSameState() {
    return cstICMSSameState;
  }
  public void setCstICMSSameState(CstIcmsEnum cstICMSSameState) {
    this.cstICMSSameState = cstICMSSameState;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CstIcmsEnum getCstICMSOtherState() {
    return cstICMSOtherState;
  }
  public void setCstICMSOtherState(CstIcmsEnum cstICMSOtherState) {
    this.cstICMSOtherState = cstICMSOtherState;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CstIcmsEnum getCstICMSOtherCountry() {
    return cstICMSOtherCountry;
  }
  public void setCstICMSOtherCountry(CstIcmsEnum cstICMSOtherCountry) {
    this.cstICMSOtherCountry = cstICMSOtherCountry;
  }

  /**
   * this field is used to define right CFOP, one operation type can be specialized to item product, item merchandise or generic
   **/
  @ApiModelProperty(value = "this field is used to define right CFOP, one operation type can be specialized to item product, item merchandise or generic")
  public ProductTypeEnum getProductType() {
    return productType;
  }
  public void setProductType(ProductTypeEnum productType) {
    this.productType = productType;
  }

  /**
   * field used to indicate an operation to ICMS tax payer
   **/
  @ApiModelProperty(value = "field used to indicate an operation to ICMS tax payer")
  public Boolean getOperationToTaxPayerOtherState() {
    return operationToTaxPayerOtherState;
  }
  public void setOperationToTaxPayerOtherState(Boolean operationToTaxPayerOtherState) {
    this.operationToTaxPayerOtherState = operationToTaxPayerOtherState;
  }

  /**
   * field used to indicate an operation to items sibject to ICMS-ST
   **/
  @ApiModelProperty(value = "field used to indicate an operation to items sibject to ICMS-ST")
  public Boolean getOperationWithST() {
    return operationWithST;
  }
  public void setOperationWithST(Boolean operationWithST) {
    this.operationWithST = operationWithST;
  }

  /**
   * field used to indicate an operation to free zone
   **/
  @ApiModelProperty(value = "field used to indicate an operation to free zone")
  public Boolean getOperationToFreeZone() {
    return operationToFreeZone;
  }
  public void setOperationToFreeZone(Boolean operationToFreeZone) {
    this.operationToFreeZone = operationToFreeZone;
  }

  /**
   * field used to indicate an operation to some product class specifically
   **/
  @ApiModelProperty(value = "field used to indicate an operation to some product class specifically")
  public SpecificForProductClassEnum getSpecificForProductClass() {
    return specificForProductClass;
  }
  public void setSpecificForProductClass(SpecificForProductClassEnum specificForProductClass) {
    this.specificForProductClass = specificForProductClass;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CfopConf cfopConf = (CfopConf) o;
    return (this.code == null ? cfopConf.code == null : this.code.equals(cfopConf.code)) &&
        (this.stockImpact == null ? cfopConf.stockImpact == null : this.stockImpact.equals(cfopConf.stockImpact)) &&
        (this.financialImpact == null ? cfopConf.financialImpact == null : this.financialImpact.equals(cfopConf.financialImpact)) &&
        (this.cstIPI == null ? cfopConf.cstIPI == null : this.cstIPI.equals(cfopConf.cstIPI)) &&
        (this.ipiLegalTaxClass == null ? cfopConf.ipiLegalTaxClass == null : this.ipiLegalTaxClass.equals(cfopConf.ipiLegalTaxClass)) &&
        (this.accruablePISTaxation == null ? cfopConf.accruablePISTaxation == null : this.accruablePISTaxation.equals(cfopConf.accruablePISTaxation)) &&
        (this.pisExemptLegalReasonCode == null ? cfopConf.pisExemptLegalReasonCode == null : this.pisExemptLegalReasonCode.equals(cfopConf.pisExemptLegalReasonCode)) &&
        (this.pisExemptLegalReason == null ? cfopConf.pisExemptLegalReason == null : this.pisExemptLegalReason.equals(cfopConf.pisExemptLegalReason)) &&
        (this.accruableCOFINSTaxation == null ? cfopConf.accruableCOFINSTaxation == null : this.accruableCOFINSTaxation.equals(cfopConf.accruableCOFINSTaxation)) &&
        (this.cofinsExemptLegalReasonCode == null ? cfopConf.cofinsExemptLegalReasonCode == null : this.cofinsExemptLegalReasonCode.equals(cfopConf.cofinsExemptLegalReasonCode)) &&
        (this.cofinsExemptLegalReason == null ? cfopConf.cofinsExemptLegalReason == null : this.cofinsExemptLegalReason.equals(cfopConf.cofinsExemptLegalReason)) &&
        (this.allowIPIcreditWhenInGoing == null ? cfopConf.allowIPIcreditWhenInGoing == null : this.allowIPIcreditWhenInGoing.equals(cfopConf.allowIPIcreditWhenInGoing)) &&
        (this.icmsConf == null ? cfopConf.icmsConf == null : this.icmsConf.equals(cfopConf.icmsConf)) &&
        (this.name == null ? cfopConf.name == null : this.name.equals(cfopConf.name)) &&
        (this.description == null ? cfopConf.description == null : this.description.equals(cfopConf.description)) &&
        (this.wayType == null ? cfopConf.wayType == null : this.wayType.equals(cfopConf.wayType)) &&
        (this.codInState == null ? cfopConf.codInState == null : this.codInState.equals(cfopConf.codInState)) &&
        (this.codOtherState == null ? cfopConf.codOtherState == null : this.codOtherState.equals(cfopConf.codOtherState)) &&
        (this.codOtherCountry == null ? cfopConf.codOtherCountry == null : this.codOtherCountry.equals(cfopConf.codOtherCountry)) &&
        (this.cstICMSSameState == null ? cfopConf.cstICMSSameState == null : this.cstICMSSameState.equals(cfopConf.cstICMSSameState)) &&
        (this.cstICMSOtherState == null ? cfopConf.cstICMSOtherState == null : this.cstICMSOtherState.equals(cfopConf.cstICMSOtherState)) &&
        (this.cstICMSOtherCountry == null ? cfopConf.cstICMSOtherCountry == null : this.cstICMSOtherCountry.equals(cfopConf.cstICMSOtherCountry)) &&
        (this.productType == null ? cfopConf.productType == null : this.productType.equals(cfopConf.productType)) &&
        (this.operationToTaxPayerOtherState == null ? cfopConf.operationToTaxPayerOtherState == null : this.operationToTaxPayerOtherState.equals(cfopConf.operationToTaxPayerOtherState)) &&
        (this.operationWithST == null ? cfopConf.operationWithST == null : this.operationWithST.equals(cfopConf.operationWithST)) &&
        (this.operationToFreeZone == null ? cfopConf.operationToFreeZone == null : this.operationToFreeZone.equals(cfopConf.operationToFreeZone)) &&
        (this.specificForProductClass == null ? cfopConf.specificForProductClass == null : this.specificForProductClass.equals(cfopConf.specificForProductClass));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.stockImpact == null ? 0: this.stockImpact.hashCode());
    result = 31 * result + (this.financialImpact == null ? 0: this.financialImpact.hashCode());
    result = 31 * result + (this.cstIPI == null ? 0: this.cstIPI.hashCode());
    result = 31 * result + (this.ipiLegalTaxClass == null ? 0: this.ipiLegalTaxClass.hashCode());
    result = 31 * result + (this.accruablePISTaxation == null ? 0: this.accruablePISTaxation.hashCode());
    result = 31 * result + (this.pisExemptLegalReasonCode == null ? 0: this.pisExemptLegalReasonCode.hashCode());
    result = 31 * result + (this.pisExemptLegalReason == null ? 0: this.pisExemptLegalReason.hashCode());
    result = 31 * result + (this.accruableCOFINSTaxation == null ? 0: this.accruableCOFINSTaxation.hashCode());
    result = 31 * result + (this.cofinsExemptLegalReasonCode == null ? 0: this.cofinsExemptLegalReasonCode.hashCode());
    result = 31 * result + (this.cofinsExemptLegalReason == null ? 0: this.cofinsExemptLegalReason.hashCode());
    result = 31 * result + (this.allowIPIcreditWhenInGoing == null ? 0: this.allowIPIcreditWhenInGoing.hashCode());
    result = 31 * result + (this.icmsConf == null ? 0: this.icmsConf.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.wayType == null ? 0: this.wayType.hashCode());
    result = 31 * result + (this.codInState == null ? 0: this.codInState.hashCode());
    result = 31 * result + (this.codOtherState == null ? 0: this.codOtherState.hashCode());
    result = 31 * result + (this.codOtherCountry == null ? 0: this.codOtherCountry.hashCode());
    result = 31 * result + (this.cstICMSSameState == null ? 0: this.cstICMSSameState.hashCode());
    result = 31 * result + (this.cstICMSOtherState == null ? 0: this.cstICMSOtherState.hashCode());
    result = 31 * result + (this.cstICMSOtherCountry == null ? 0: this.cstICMSOtherCountry.hashCode());
    result = 31 * result + (this.productType == null ? 0: this.productType.hashCode());
    result = 31 * result + (this.operationToTaxPayerOtherState == null ? 0: this.operationToTaxPayerOtherState.hashCode());
    result = 31 * result + (this.operationWithST == null ? 0: this.operationWithST.hashCode());
    result = 31 * result + (this.operationToFreeZone == null ? 0: this.operationToFreeZone.hashCode());
    result = 31 * result + (this.specificForProductClass == null ? 0: this.specificForProductClass.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CfopConf {\n");
    
    sb.append("  code: ").append(code).append("\n");
    sb.append("  stockImpact: ").append(stockImpact).append("\n");
    sb.append("  financialImpact: ").append(financialImpact).append("\n");
    sb.append("  cstIPI: ").append(cstIPI).append("\n");
    sb.append("  ipiLegalTaxClass: ").append(ipiLegalTaxClass).append("\n");
    sb.append("  accruablePISTaxation: ").append(accruablePISTaxation).append("\n");
    sb.append("  pisExemptLegalReasonCode: ").append(pisExemptLegalReasonCode).append("\n");
    sb.append("  pisExemptLegalReason: ").append(pisExemptLegalReason).append("\n");
    sb.append("  accruableCOFINSTaxation: ").append(accruableCOFINSTaxation).append("\n");
    sb.append("  cofinsExemptLegalReasonCode: ").append(cofinsExemptLegalReasonCode).append("\n");
    sb.append("  cofinsExemptLegalReason: ").append(cofinsExemptLegalReason).append("\n");
    sb.append("  allowIPIcreditWhenInGoing: ").append(allowIPIcreditWhenInGoing).append("\n");
    sb.append("  icmsConf: ").append(icmsConf).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  wayType: ").append(wayType).append("\n");
    sb.append("  codInState: ").append(codInState).append("\n");
    sb.append("  codOtherState: ").append(codOtherState).append("\n");
    sb.append("  codOtherCountry: ").append(codOtherCountry).append("\n");
    sb.append("  cstICMSSameState: ").append(cstICMSSameState).append("\n");
    sb.append("  cstICMSOtherState: ").append(cstICMSOtherState).append("\n");
    sb.append("  cstICMSOtherCountry: ").append(cstICMSOtherCountry).append("\n");
    sb.append("  productType: ").append(productType).append("\n");
    sb.append("  operationToTaxPayerOtherState: ").append(operationToTaxPayerOtherState).append("\n");
    sb.append("  operationWithST: ").append(operationWithST).append("\n");
    sb.append("  operationToFreeZone: ").append(operationToFreeZone).append("\n");
    sb.append("  specificForProductClass: ").append(specificForProductClass).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
