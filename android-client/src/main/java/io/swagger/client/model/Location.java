/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Address;
import io.swagger.client.model.LocationSecondaryStateTaxId;
import io.swagger.client.model.StateEnum;
import java.util.*;
import java.util.UUID;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Location {
  
  @SerializedName("street")
  private String street = null;
  @SerializedName("neighborhood")
  private String neighborhood = null;
  @SerializedName("zipcode")
  private String zipcode = null;
  @SerializedName("cityCode")
  private String cityCode = null;
  @SerializedName("cityName")
  private String cityName = null;
  @SerializedName("state")
  private StateEnum state = null;
  @SerializedName("countryCode")
  private String countryCode = null;
  @SerializedName("country")
  private String country = null;
  @SerializedName("number")
  private String number = null;
  @SerializedName("complement")
  private String complement = null;
  @SerializedName("phone")
  private String phone = null;
  @SerializedName("companyId")
  private UUID companyId = null;
  @SerializedName("code")
  private String code = null;
  public enum TypeEnum {
     ShipFrom,  ShipTo,  ServiceRendered, 
  };
  @SerializedName("type")
  private TypeEnum type = null;
  @SerializedName("email")
  private String email = null;
  @SerializedName("federalTaxId")
  private String federalTaxId = null;
  @SerializedName("stateTaxId")
  private String stateTaxId = null;
  @SerializedName("secondaryStateTaxId")
  private List<LocationSecondaryStateTaxId> secondaryStateTaxId = null;
  @SerializedName("cityTaxId")
  private String cityTaxId = null;
  @SerializedName("suframa")
  private String suframa = null;
  public enum MainActivityEnum {
     commerce,  industry,  service, 
  };
  @SerializedName("mainActivity")
  private MainActivityEnum mainActivity = null;
  public enum NfseProcessModelEnum {
     edi,  xml,  rps, 
  };
  @SerializedName("nfseProcessModel")
  private NfseProcessModelEnum nfseProcessModel = null;

  /**
   * Street Name
   **/
  @ApiModelProperty(value = "Street Name")
  public String getStreet() {
    return street;
  }
  public void setStreet(String street) {
    this.street = street;
  }

  /**
   * Neighborhood Name
   **/
  @ApiModelProperty(value = "Neighborhood Name")
  public String getNeighborhood() {
    return neighborhood;
  }
  public void setNeighborhood(String neighborhood) {
    this.neighborhood = neighborhood;
  }

  /**
   * Brazilian Zip Code
   **/
  @ApiModelProperty(required = true, value = "Brazilian Zip Code")
  public String getZipcode() {
    return zipcode;
  }
  public void setZipcode(String zipcode) {
    this.zipcode = zipcode;
  }

  /**
   * City Code (IBGE)
   **/
  @ApiModelProperty(value = "City Code (IBGE)")
  public String getCityCode() {
    return cityCode;
  }
  public void setCityCode(String cityCode) {
    this.cityCode = cityCode;
  }

  /**
   * City Name
   **/
  @ApiModelProperty(value = "City Name")
  public String getCityName() {
    return cityName;
  }
  public void setCityName(String cityName) {
    this.cityName = cityName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public StateEnum getState() {
    return state;
  }
  public void setState(StateEnum state) {
    this.state = state;
  }

  /**
   * Country Code
   **/
  @ApiModelProperty(value = "Country Code")
  public String getCountryCode() {
    return countryCode;
  }
  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  /**
   * Use ISO 3166-1 alpha-3 codes
   **/
  @ApiModelProperty(value = "Use ISO 3166-1 alpha-3 codes")
  public String getCountry() {
    return country;
  }
  public void setCountry(String country) {
    this.country = country;
  }

  /**
   * House number
   **/
  @ApiModelProperty(value = "House number")
  public String getNumber() {
    return number;
  }
  public void setNumber(String number) {
    this.number = number;
  }

  /**
   * Any other information about the address (Room, Suite, Floor, etc)).
   **/
  @ApiModelProperty(value = "Any other information about the address (Room, Suite, Floor, etc)).")
  public String getComplement() {
    return complement;
  }
  public void setComplement(String complement) {
    this.complement = complement;
  }

  /**
   * Phone number
   **/
  @ApiModelProperty(value = "Phone number")
  public String getPhone() {
    return phone;
  }
  public void setPhone(String phone) {
    this.phone = phone;
  }

  /**
   * Company ID
   **/
  @ApiModelProperty(required = true, value = "Company ID")
  public UUID getCompanyId() {
    return companyId;
  }
  public void setCompanyId(UUID companyId) {
    this.companyId = companyId;
  }

  /**
   * this property identify the location, it is unique for this company
   **/
  @ApiModelProperty(required = true, value = "this property identify the location, it is unique for this company")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }

  /**
   * this property identify the location, it is unique for this company
   **/
  @ApiModelProperty(required = true, value = "this property identify the location, it is unique for this company")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * Email
   **/
  @ApiModelProperty(value = "Email")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }

  /**
   * Federal tax id, CNPJ or CPF
   **/
  @ApiModelProperty(value = "Federal tax id, CNPJ or CPF")
  public String getFederalTaxId() {
    return federalTaxId;
  }
  public void setFederalTaxId(String federalTaxId) {
    this.federalTaxId = federalTaxId;
  }

  /**
   * state tax id for this location
   **/
  @ApiModelProperty(value = "state tax id for this location")
  public String getStateTaxId() {
    return stateTaxId;
  }
  public void setStateTaxId(String stateTaxId) {
    this.stateTaxId = stateTaxId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<LocationSecondaryStateTaxId> getSecondaryStateTaxId() {
    return secondaryStateTaxId;
  }
  public void setSecondaryStateTaxId(List<LocationSecondaryStateTaxId> secondaryStateTaxId) {
    this.secondaryStateTaxId = secondaryStateTaxId;
  }

  /**
   * City Tax ID
   **/
  @ApiModelProperty(value = "City Tax ID")
  public String getCityTaxId() {
    return cityTaxId;
  }
  public void setCityTaxId(String cityTaxId) {
    this.cityTaxId = cityTaxId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSuframa() {
    return suframa;
  }
  public void setSuframa(String suframa) {
    this.suframa = suframa;
  }

  /**
   * Main location activity
   **/
  @ApiModelProperty(value = "Main location activity")
  public MainActivityEnum getMainActivity() {
    return mainActivity;
  }
  public void setMainActivity(MainActivityEnum mainActivity) {
    this.mainActivity = mainActivity;
  }

  /**
   * - 'edi' # City hall has web service and the integration is automatic - 'xml' # Create RPS specific to City, bat does not have webservice integration - 'rps' # Create a generic RPS, NF is by hands 
   **/
  @ApiModelProperty(value = "- 'edi' # City hall has web service and the integration is automatic - 'xml' # Create RPS specific to City, bat does not have webservice integration - 'rps' # Create a generic RPS, NF is by hands ")
  public NfseProcessModelEnum getNfseProcessModel() {
    return nfseProcessModel;
  }
  public void setNfseProcessModel(NfseProcessModelEnum nfseProcessModel) {
    this.nfseProcessModel = nfseProcessModel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Location location = (Location) o;
    return (this.street == null ? location.street == null : this.street.equals(location.street)) &&
        (this.neighborhood == null ? location.neighborhood == null : this.neighborhood.equals(location.neighborhood)) &&
        (this.zipcode == null ? location.zipcode == null : this.zipcode.equals(location.zipcode)) &&
        (this.cityCode == null ? location.cityCode == null : this.cityCode.equals(location.cityCode)) &&
        (this.cityName == null ? location.cityName == null : this.cityName.equals(location.cityName)) &&
        (this.state == null ? location.state == null : this.state.equals(location.state)) &&
        (this.countryCode == null ? location.countryCode == null : this.countryCode.equals(location.countryCode)) &&
        (this.country == null ? location.country == null : this.country.equals(location.country)) &&
        (this.number == null ? location.number == null : this.number.equals(location.number)) &&
        (this.complement == null ? location.complement == null : this.complement.equals(location.complement)) &&
        (this.phone == null ? location.phone == null : this.phone.equals(location.phone)) &&
        (this.companyId == null ? location.companyId == null : this.companyId.equals(location.companyId)) &&
        (this.code == null ? location.code == null : this.code.equals(location.code)) &&
        (this.type == null ? location.type == null : this.type.equals(location.type)) &&
        (this.email == null ? location.email == null : this.email.equals(location.email)) &&
        (this.federalTaxId == null ? location.federalTaxId == null : this.federalTaxId.equals(location.federalTaxId)) &&
        (this.stateTaxId == null ? location.stateTaxId == null : this.stateTaxId.equals(location.stateTaxId)) &&
        (this.secondaryStateTaxId == null ? location.secondaryStateTaxId == null : this.secondaryStateTaxId.equals(location.secondaryStateTaxId)) &&
        (this.cityTaxId == null ? location.cityTaxId == null : this.cityTaxId.equals(location.cityTaxId)) &&
        (this.suframa == null ? location.suframa == null : this.suframa.equals(location.suframa)) &&
        (this.mainActivity == null ? location.mainActivity == null : this.mainActivity.equals(location.mainActivity)) &&
        (this.nfseProcessModel == null ? location.nfseProcessModel == null : this.nfseProcessModel.equals(location.nfseProcessModel));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.street == null ? 0: this.street.hashCode());
    result = 31 * result + (this.neighborhood == null ? 0: this.neighborhood.hashCode());
    result = 31 * result + (this.zipcode == null ? 0: this.zipcode.hashCode());
    result = 31 * result + (this.cityCode == null ? 0: this.cityCode.hashCode());
    result = 31 * result + (this.cityName == null ? 0: this.cityName.hashCode());
    result = 31 * result + (this.state == null ? 0: this.state.hashCode());
    result = 31 * result + (this.countryCode == null ? 0: this.countryCode.hashCode());
    result = 31 * result + (this.country == null ? 0: this.country.hashCode());
    result = 31 * result + (this.number == null ? 0: this.number.hashCode());
    result = 31 * result + (this.complement == null ? 0: this.complement.hashCode());
    result = 31 * result + (this.phone == null ? 0: this.phone.hashCode());
    result = 31 * result + (this.companyId == null ? 0: this.companyId.hashCode());
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.email == null ? 0: this.email.hashCode());
    result = 31 * result + (this.federalTaxId == null ? 0: this.federalTaxId.hashCode());
    result = 31 * result + (this.stateTaxId == null ? 0: this.stateTaxId.hashCode());
    result = 31 * result + (this.secondaryStateTaxId == null ? 0: this.secondaryStateTaxId.hashCode());
    result = 31 * result + (this.cityTaxId == null ? 0: this.cityTaxId.hashCode());
    result = 31 * result + (this.suframa == null ? 0: this.suframa.hashCode());
    result = 31 * result + (this.mainActivity == null ? 0: this.mainActivity.hashCode());
    result = 31 * result + (this.nfseProcessModel == null ? 0: this.nfseProcessModel.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Location {\n");
    
    sb.append("  street: ").append(street).append("\n");
    sb.append("  neighborhood: ").append(neighborhood).append("\n");
    sb.append("  zipcode: ").append(zipcode).append("\n");
    sb.append("  cityCode: ").append(cityCode).append("\n");
    sb.append("  cityName: ").append(cityName).append("\n");
    sb.append("  state: ").append(state).append("\n");
    sb.append("  countryCode: ").append(countryCode).append("\n");
    sb.append("  country: ").append(country).append("\n");
    sb.append("  number: ").append(number).append("\n");
    sb.append("  complement: ").append(complement).append("\n");
    sb.append("  phone: ").append(phone).append("\n");
    sb.append("  companyId: ").append(companyId).append("\n");
    sb.append("  code: ").append(code).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  email: ").append(email).append("\n");
    sb.append("  federalTaxId: ").append(federalTaxId).append("\n");
    sb.append("  stateTaxId: ").append(stateTaxId).append("\n");
    sb.append("  secondaryStateTaxId: ").append(secondaryStateTaxId).append("\n");
    sb.append("  cityTaxId: ").append(cityTaxId).append("\n");
    sb.append("  suframa: ").append(suframa).append("\n");
    sb.append("  mainActivity: ").append(mainActivity).append("\n");
    sb.append("  nfseProcessModel: ").append(nfseProcessModel).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
