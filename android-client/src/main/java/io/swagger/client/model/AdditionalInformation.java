/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.AdditionalInformationProcRef;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class AdditionalInformation {
  
  @SerializedName("fiscalInfo")
  private String fiscalInfo = null;
  @SerializedName("complementaryInfo")
  private String complementaryInfo = null;
  @SerializedName("procRef")
  private List<AdditionalInformationProcRef> procRef = null;

  /**
   * Additional information of fiscal interest
   **/
  @ApiModelProperty(value = "Additional information of fiscal interest")
  public String getFiscalInfo() {
    return fiscalInfo;
  }
  public void setFiscalInfo(String fiscalInfo) {
    this.fiscalInfo = fiscalInfo;
  }

  /**
   * Additional information of user interest
   **/
  @ApiModelProperty(value = "Additional information of user interest")
  public String getComplementaryInfo() {
    return complementaryInfo;
  }
  public void setComplementaryInfo(String complementaryInfo) {
    this.complementaryInfo = complementaryInfo;
  }

  /**
   * Referenced Process
   **/
  @ApiModelProperty(value = "Referenced Process")
  public List<AdditionalInformationProcRef> getProcRef() {
    return procRef;
  }
  public void setProcRef(List<AdditionalInformationProcRef> procRef) {
    this.procRef = procRef;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditionalInformation additionalInformation = (AdditionalInformation) o;
    return (this.fiscalInfo == null ? additionalInformation.fiscalInfo == null : this.fiscalInfo.equals(additionalInformation.fiscalInfo)) &&
        (this.complementaryInfo == null ? additionalInformation.complementaryInfo == null : this.complementaryInfo.equals(additionalInformation.complementaryInfo)) &&
        (this.procRef == null ? additionalInformation.procRef == null : this.procRef.equals(additionalInformation.procRef));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.fiscalInfo == null ? 0: this.fiscalInfo.hashCode());
    result = 31 * result + (this.complementaryInfo == null ? 0: this.complementaryInfo.hashCode());
    result = 31 * result + (this.procRef == null ? 0: this.procRef.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditionalInformation {\n");
    
    sb.append("  fiscalInfo: ").append(fiscalInfo).append("\n");
    sb.append("  complementaryInfo: ").append(complementaryInfo).append("\n");
    sb.append("  procRef: ").append(procRef).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
