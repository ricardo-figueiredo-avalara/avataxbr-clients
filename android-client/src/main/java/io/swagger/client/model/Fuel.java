/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.FuelCide;
import io.swagger.client.model.FuelPumpNumber;
import io.swagger.client.model.StateEnum;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Fuel {
  
  @SerializedName("prodANPCode")
  private String prodANPCode = null;
  @SerializedName("perMixGN")
  private Double perMixGN = null;
  @SerializedName("authorizationCodeCODIF")
  private String authorizationCodeCODIF = null;
  @SerializedName("quantityOnRoomTemperature")
  private Double quantityOnRoomTemperature = null;
  @SerializedName("stateCodeOfUndUser")
  private StateEnum stateCodeOfUndUser = null;
  @SerializedName("cide")
  private FuelCide cide = null;
  @SerializedName("pumpNumber")
  private FuelPumpNumber pumpNumber = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getProdANPCode() {
    return prodANPCode;
  }
  public void setProdANPCode(String prodANPCode) {
    this.prodANPCode = prodANPCode;
  }

  /**
   * percentage of natural gas (GLP)
   **/
  @ApiModelProperty(value = "percentage of natural gas (GLP)")
  public Double getPerMixGN() {
    return perMixGN;
  }
  public void setPerMixGN(Double perMixGN) {
    this.perMixGN = perMixGN;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getAuthorizationCodeCODIF() {
    return authorizationCodeCODIF;
  }
  public void setAuthorizationCodeCODIF(String authorizationCodeCODIF) {
    this.authorizationCodeCODIF = authorizationCodeCODIF;
  }

  /**
   * This decimal 12 integers and 0 to 4 decimals Quantidade de combustível faturada à temperatura ambiente. Informar quando a quantidade faturada informada no campo qCom (I10) tiver sido ajustada para uma temperatura diferente da ambiente. 
   **/
  @ApiModelProperty(value = "This decimal 12 integers and 0 to 4 decimals Quantidade de combustível faturada à temperatura ambiente. Informar quando a quantidade faturada informada no campo qCom (I10) tiver sido ajustada para uma temperatura diferente da ambiente. ")
  public Double getQuantityOnRoomTemperature() {
    return quantityOnRoomTemperature;
  }
  public void setQuantityOnRoomTemperature(Double quantityOnRoomTemperature) {
    this.quantityOnRoomTemperature = quantityOnRoomTemperature;
  }

  /**
   * state where fuel was used
   **/
  @ApiModelProperty(required = true, value = "state where fuel was used")
  public StateEnum getStateCodeOfUndUser() {
    return stateCodeOfUndUser;
  }
  public void setStateCodeOfUndUser(StateEnum stateCodeOfUndUser) {
    this.stateCodeOfUndUser = stateCodeOfUndUser;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FuelCide getCide() {
    return cide;
  }
  public void setCide(FuelCide cide) {
    this.cide = cide;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FuelPumpNumber getPumpNumber() {
    return pumpNumber;
  }
  public void setPumpNumber(FuelPumpNumber pumpNumber) {
    this.pumpNumber = pumpNumber;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fuel fuel = (Fuel) o;
    return (this.prodANPCode == null ? fuel.prodANPCode == null : this.prodANPCode.equals(fuel.prodANPCode)) &&
        (this.perMixGN == null ? fuel.perMixGN == null : this.perMixGN.equals(fuel.perMixGN)) &&
        (this.authorizationCodeCODIF == null ? fuel.authorizationCodeCODIF == null : this.authorizationCodeCODIF.equals(fuel.authorizationCodeCODIF)) &&
        (this.quantityOnRoomTemperature == null ? fuel.quantityOnRoomTemperature == null : this.quantityOnRoomTemperature.equals(fuel.quantityOnRoomTemperature)) &&
        (this.stateCodeOfUndUser == null ? fuel.stateCodeOfUndUser == null : this.stateCodeOfUndUser.equals(fuel.stateCodeOfUndUser)) &&
        (this.cide == null ? fuel.cide == null : this.cide.equals(fuel.cide)) &&
        (this.pumpNumber == null ? fuel.pumpNumber == null : this.pumpNumber.equals(fuel.pumpNumber));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.prodANPCode == null ? 0: this.prodANPCode.hashCode());
    result = 31 * result + (this.perMixGN == null ? 0: this.perMixGN.hashCode());
    result = 31 * result + (this.authorizationCodeCODIF == null ? 0: this.authorizationCodeCODIF.hashCode());
    result = 31 * result + (this.quantityOnRoomTemperature == null ? 0: this.quantityOnRoomTemperature.hashCode());
    result = 31 * result + (this.stateCodeOfUndUser == null ? 0: this.stateCodeOfUndUser.hashCode());
    result = 31 * result + (this.cide == null ? 0: this.cide.hashCode());
    result = 31 * result + (this.pumpNumber == null ? 0: this.pumpNumber.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fuel {\n");
    
    sb.append("  prodANPCode: ").append(prodANPCode).append("\n");
    sb.append("  perMixGN: ").append(perMixGN).append("\n");
    sb.append("  authorizationCodeCODIF: ").append(authorizationCodeCODIF).append("\n");
    sb.append("  quantityOnRoomTemperature: ").append(quantityOnRoomTemperature).append("\n");
    sb.append("  stateCodeOfUndUser: ").append(stateCodeOfUndUser).append("\n");
    sb.append("  cide: ").append(cide).append("\n");
    sb.append("  pumpNumber: ").append(pumpNumber).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
