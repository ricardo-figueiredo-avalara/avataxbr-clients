/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ProcessingInfo {
  
  @SerializedName("versionId")
  private String versionId = null;
  @SerializedName("duration")
  private Double duration = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getVersionId() {
    return versionId;
  }
  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getDuration() {
    return duration;
  }
  public void setDuration(Double duration) {
    this.duration = duration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessingInfo processingInfo = (ProcessingInfo) o;
    return (this.versionId == null ? processingInfo.versionId == null : this.versionId.equals(processingInfo.versionId)) &&
        (this.duration == null ? processingInfo.duration == null : this.duration.equals(processingInfo.duration));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.versionId == null ? 0: this.versionId.hashCode());
    result = 31 * result + (this.duration == null ? 0: this.duration.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessingInfo {\n");
    
    sb.append("  versionId: ").append(versionId).append("\n");
    sb.append("  duration: ").append(duration).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
