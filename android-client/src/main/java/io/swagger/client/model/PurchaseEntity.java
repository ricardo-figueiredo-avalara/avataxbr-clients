/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.EntityType;
import io.swagger.client.model.FederalTaxRegime;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class PurchaseEntity {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("type")
  private EntityType type = null;
  @SerializedName("email")
  private String email = null;
  @SerializedName("cnpjcpf")
  private String cnpjcpf = null;
  @SerializedName("cityTaxId")
  private String cityTaxId = null;
  @SerializedName("stateTaxId")
  private String stateTaxId = null;
  @SerializedName("suframa")
  private String suframa = null;
  @SerializedName("phone")
  private String phone = null;
  @SerializedName("taxRegime")
  private FederalTaxRegime taxRegime = null;
  @SerializedName("hasCpom")
  private Boolean hasCpom = null;
  @SerializedName("subjectWithholdingIrrf")
  private Boolean subjectWithholdingIrrf = null;
  @SerializedName("inssPreviousContrib")
  private Double inssPreviousContrib = null;
  @SerializedName("inssBasisDiscount")
  private Double inssBasisDiscount = null;
  @SerializedName("issRfRate")
  private Double issRfRate = null;

  /**
   * Legal Name of Service buyer.
   **/
  @ApiModelProperty(value = "Legal Name of Service buyer.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public EntityType getType() {
    return type;
  }
  public void setType(EntityType type) {
    this.type = type;
  }

  /**
   * Entity Email
   **/
  @ApiModelProperty(value = "Entity Email")
  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }

  /**
   * CNPJ/CPF of Sales Buyer. If CPF, pattern is '[0-9]{11}' if CNPJ, pattern is '[0-9]{14}'
   **/
  @ApiModelProperty(value = "CNPJ/CPF of Sales Buyer. If CPF, pattern is '[0-9]{11}' if CNPJ, pattern is '[0-9]{14}'")
  public String getCnpjcpf() {
    return cnpjcpf;
  }
  public void setCnpjcpf(String cnpjcpf) {
    this.cnpjcpf = cnpjcpf;
  }

  /**
   * City Tax ID
   **/
  @ApiModelProperty(value = "City Tax ID")
  public String getCityTaxId() {
    return cityTaxId;
  }
  public void setCityTaxId(String cityTaxId) {
    this.cityTaxId = cityTaxId;
  }

  /**
   * State Tax ID
   **/
  @ApiModelProperty(value = "State Tax ID")
  public String getStateTaxId() {
    return stateTaxId;
  }
  public void setStateTaxId(String stateTaxId) {
    this.stateTaxId = stateTaxId;
  }

  /**
   * Suframa ID
   **/
  @ApiModelProperty(value = "Suframa ID")
  public String getSuframa() {
    return suframa;
  }
  public void setSuframa(String suframa) {
    this.suframa = suframa;
  }

  /**
   * Entity Phone
   **/
  @ApiModelProperty(value = "Entity Phone")
  public String getPhone() {
    return phone;
  }
  public void setPhone(String phone) {
    this.phone = phone;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public FederalTaxRegime getTaxRegime() {
    return taxRegime;
  }
  public void setTaxRegime(FederalTaxRegime taxRegime) {
    this.taxRegime = taxRegime;
  }

  /**
   * Some cities require PURCHASE.Buyers to withhold ISS (City Tax) from PURCHASE.Sellers stablished in different cities. In case the PURCHASE.Seller has acquired a Tax Registration in this destination city, by providing this information in the service invoice, this withholding obligation is lifted.
   **/
  @ApiModelProperty(value = "Some cities require PURCHASE.Buyers to withhold ISS (City Tax) from PURCHASE.Sellers stablished in different cities. In case the PURCHASE.Seller has acquired a Tax Registration in this destination city, by providing this information in the service invoice, this withholding obligation is lifted.")
  public Boolean getHasCpom() {
    return hasCpom;
  }
  public void setHasCpom(Boolean hasCpom) {
    this.hasCpom = hasCpom;
  }

  /**
   * These are the federal taxes attributes that determine whether withholding of taxes should take place. In special cases where the PURCHASE.Seller is exempt of one or more of these taxes the withholding follows the same rules. The Business type may also dictate these rules as well.
   **/
  @ApiModelProperty(value = "These are the federal taxes attributes that determine whether withholding of taxes should take place. In special cases where the PURCHASE.Seller is exempt of one or more of these taxes the withholding follows the same rules. The Business type may also dictate these rules as well.")
  public Boolean getSubjectWithholdingIrrf() {
    return subjectWithholdingIrrf;
  }
  public void setSubjectWithholdingIrrf(Boolean subjectWithholdingIrrf) {
    this.subjectWithholdingIrrf = subjectWithholdingIrrf;
  }

  /**
   * The INSS contribution is capped at a maximum limit (amount of actual retired payment available in the country).  Individuals sellers subject to INSS withholding can provide the amount already tax by other transactions (with the same buyer or different ones) to deduct to the tax basis. This amount is to be provided to the Seller in a form of a signed document.
   **/
  @ApiModelProperty(value = "The INSS contribution is capped at a maximum limit (amount of actual retired payment available in the country).  Individuals sellers subject to INSS withholding can provide the amount already tax by other transactions (with the same buyer or different ones) to deduct to the tax basis. This amount is to be provided to the Seller in a form of a signed document.")
  public Double getInssPreviousContrib() {
    return inssPreviousContrib;
  }
  public void setInssPreviousContrib(Double inssPreviousContrib) {
    this.inssPreviousContrib = inssPreviousContrib;
  }

  /**
   * The INSS contribution is applicable only to the labor amount in a service contract.  There are several items that may be deducted from the service invoice total to arrive at the INSS taxable amount. This amount is to be provided to the Seller in the body of the Invoice or calculated during the transaction input.
   **/
  @ApiModelProperty(value = "The INSS contribution is applicable only to the labor amount in a service contract.  There are several items that may be deducted from the service invoice total to arrive at the INSS taxable amount. This amount is to be provided to the Seller in the body of the Invoice or calculated during the transaction input.")
  public Double getInssBasisDiscount() {
    return inssBasisDiscount;
  }
  public void setInssBasisDiscount(Double inssBasisDiscount) {
    this.inssBasisDiscount = inssBasisDiscount;
  }

  /**
   * When Seller is Simples regime, the seller needs send RF rate.
   **/
  @ApiModelProperty(value = "When Seller is Simples regime, the seller needs send RF rate.")
  public Double getIssRfRate() {
    return issRfRate;
  }
  public void setIssRfRate(Double issRfRate) {
    this.issRfRate = issRfRate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseEntity purchaseEntity = (PurchaseEntity) o;
    return (this.name == null ? purchaseEntity.name == null : this.name.equals(purchaseEntity.name)) &&
        (this.type == null ? purchaseEntity.type == null : this.type.equals(purchaseEntity.type)) &&
        (this.email == null ? purchaseEntity.email == null : this.email.equals(purchaseEntity.email)) &&
        (this.cnpjcpf == null ? purchaseEntity.cnpjcpf == null : this.cnpjcpf.equals(purchaseEntity.cnpjcpf)) &&
        (this.cityTaxId == null ? purchaseEntity.cityTaxId == null : this.cityTaxId.equals(purchaseEntity.cityTaxId)) &&
        (this.stateTaxId == null ? purchaseEntity.stateTaxId == null : this.stateTaxId.equals(purchaseEntity.stateTaxId)) &&
        (this.suframa == null ? purchaseEntity.suframa == null : this.suframa.equals(purchaseEntity.suframa)) &&
        (this.phone == null ? purchaseEntity.phone == null : this.phone.equals(purchaseEntity.phone)) &&
        (this.taxRegime == null ? purchaseEntity.taxRegime == null : this.taxRegime.equals(purchaseEntity.taxRegime)) &&
        (this.hasCpom == null ? purchaseEntity.hasCpom == null : this.hasCpom.equals(purchaseEntity.hasCpom)) &&
        (this.subjectWithholdingIrrf == null ? purchaseEntity.subjectWithholdingIrrf == null : this.subjectWithholdingIrrf.equals(purchaseEntity.subjectWithholdingIrrf)) &&
        (this.inssPreviousContrib == null ? purchaseEntity.inssPreviousContrib == null : this.inssPreviousContrib.equals(purchaseEntity.inssPreviousContrib)) &&
        (this.inssBasisDiscount == null ? purchaseEntity.inssBasisDiscount == null : this.inssBasisDiscount.equals(purchaseEntity.inssBasisDiscount)) &&
        (this.issRfRate == null ? purchaseEntity.issRfRate == null : this.issRfRate.equals(purchaseEntity.issRfRate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.email == null ? 0: this.email.hashCode());
    result = 31 * result + (this.cnpjcpf == null ? 0: this.cnpjcpf.hashCode());
    result = 31 * result + (this.cityTaxId == null ? 0: this.cityTaxId.hashCode());
    result = 31 * result + (this.stateTaxId == null ? 0: this.stateTaxId.hashCode());
    result = 31 * result + (this.suframa == null ? 0: this.suframa.hashCode());
    result = 31 * result + (this.phone == null ? 0: this.phone.hashCode());
    result = 31 * result + (this.taxRegime == null ? 0: this.taxRegime.hashCode());
    result = 31 * result + (this.hasCpom == null ? 0: this.hasCpom.hashCode());
    result = 31 * result + (this.subjectWithholdingIrrf == null ? 0: this.subjectWithholdingIrrf.hashCode());
    result = 31 * result + (this.inssPreviousContrib == null ? 0: this.inssPreviousContrib.hashCode());
    result = 31 * result + (this.inssBasisDiscount == null ? 0: this.inssBasisDiscount.hashCode());
    result = 31 * result + (this.issRfRate == null ? 0: this.issRfRate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseEntity {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  email: ").append(email).append("\n");
    sb.append("  cnpjcpf: ").append(cnpjcpf).append("\n");
    sb.append("  cityTaxId: ").append(cityTaxId).append("\n");
    sb.append("  stateTaxId: ").append(stateTaxId).append("\n");
    sb.append("  suframa: ").append(suframa).append("\n");
    sb.append("  phone: ").append(phone).append("\n");
    sb.append("  taxRegime: ").append(taxRegime).append("\n");
    sb.append("  hasCpom: ").append(hasCpom).append("\n");
    sb.append("  subjectWithholdingIrrf: ").append(subjectWithholdingIrrf).append("\n");
    sb.append("  inssPreviousContrib: ").append(inssPreviousContrib).append("\n");
    sb.append("  inssBasisDiscount: ").append(inssBasisDiscount).append("\n");
    sb.append("  issRfRate: ").append(issRfRate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
