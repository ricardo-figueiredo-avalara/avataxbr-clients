/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.SalesCalculatedTax;
import io.swagger.client.model.SalesLinesIn;
import io.swagger.client.model.SalesLinesOutTaxDeductions;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SalesLinesOut {
  
  @SerializedName("lineCode")
  private Integer lineCode = null;
  @SerializedName("itemCode")
  private String itemCode = null;
  @SerializedName("numberOfItems")
  private Double numberOfItems = 1.0;
  @SerializedName("lineAmount")
  private Double lineAmount = null;
  @SerializedName("itemDescription")
  private String itemDescription = null;
  @SerializedName("lineTaxedDiscount")
  private Double lineTaxedDiscount = null;
  @SerializedName("lineUntaxedDiscount")
  private Double lineUntaxedDiscount = null;
  @SerializedName("taxDeductions")
  private SalesLinesOutTaxDeductions taxDeductions = null;
  @SerializedName("avalaraGoodsAndServicesType")
  private String avalaraGoodsAndServicesType = null;
  @SerializedName("lineNetValue")
  private Double lineNetValue = null;
  public enum CstEnum {
     01,  02,  03,  04,  05,  21,  22,  23,  24,  25,  40, 
  };
  @SerializedName("cst")
  private CstEnum cst = null;
  public enum CstRfEnum {
     61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72, 
  };
  @SerializedName("cstRf")
  private CstRfEnum cstRf = null;
  @SerializedName("calculatedTax")
  private SalesCalculatedTax calculatedTax = null;

  /**
   * This string is a unique identifier for this line in the transaction
   **/
  @ApiModelProperty(value = "This string is a unique identifier for this line in the transaction")
  public Integer getLineCode() {
    return lineCode;
  }
  public void setLineCode(Integer lineCode) {
    this.lineCode = lineCode;
  }

  /**
   * This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states.
   **/
  @ApiModelProperty(required = true, value = "This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states.")
  public String getItemCode() {
    return itemCode;
  }
  public void setItemCode(String itemCode) {
    this.itemCode = itemCode;
  }

  /**
   * This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1
   **/
  @ApiModelProperty(value = "This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1")
  public Double getNumberOfItems() {
    return numberOfItems;
  }
  public void setNumberOfItems(Double numberOfItems) {
    this.numberOfItems = numberOfItems;
  }

  /**
   * This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems).
   **/
  @ApiModelProperty(value = "This decimal captures the total cost of this line. In its simplest form lineAmount = (item price * numberOfItems).")
  public Double getLineAmount() {
    return lineAmount;
  }
  public void setLineAmount(Double lineAmount) {
    this.lineAmount = lineAmount;
  }

  /**
   * This string captures the description of the item represented by this line, will be used LC 116
   **/
  @ApiModelProperty(value = "This string captures the description of the item represented by this line, will be used LC 116")
  public String getItemDescription() {
    return itemDescription;
  }
  public void setItemDescription(String itemDescription) {
    this.itemDescription = itemDescription;
  }

  /**
   * Conditional discount
   **/
  @ApiModelProperty(value = "Conditional discount")
  public Double getLineTaxedDiscount() {
    return lineTaxedDiscount;
  }
  public void setLineTaxedDiscount(Double lineTaxedDiscount) {
    this.lineTaxedDiscount = lineTaxedDiscount;
  }

  /**
   * Unconditional discount
   **/
  @ApiModelProperty(value = "Unconditional discount")
  public Double getLineUntaxedDiscount() {
    return lineUntaxedDiscount;
  }
  public void setLineUntaxedDiscount(Double lineUntaxedDiscount) {
    this.lineUntaxedDiscount = lineUntaxedDiscount;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public SalesLinesOutTaxDeductions getTaxDeductions() {
    return taxDeductions;
  }
  public void setTaxDeductions(SalesLinesOutTaxDeductions taxDeductions) {
    this.taxDeductions = taxDeductions;
  }

  /**
   * AGAST CODE for itemCode
   **/
  @ApiModelProperty(value = "AGAST CODE for itemCode")
  public String getAvalaraGoodsAndServicesType() {
    return avalaraGoodsAndServicesType;
  }
  public void setAvalaraGoodsAndServicesType(String avalaraGoodsAndServicesType) {
    this.avalaraGoodsAndServicesType = avalaraGoodsAndServicesType;
  }

  /**
   * This decimal captures the total cost of this line. In its simplest form lineNetValue = (lineAmount - discountTaxable - sum of whithholdings).
   **/
  @ApiModelProperty(value = "This decimal captures the total cost of this line. In its simplest form lineNetValue = (lineAmount - discountTaxable - sum of whithholdings).")
  public Double getLineNetValue() {
    return lineNetValue;
  }
  public void setLineNetValue(Double lineNetValue) {
    this.lineNetValue = lineNetValue;
  }

  /**
   * - '01' # ORIGIN MODE - '02' # ORIGIN MODE BUT EXEMPT - '03' # ORIGIN MODE BUT IMMUNE - '04' # ORIGIN MODE BUT SUSPENDED FOR LEGAL REASON - '05' # ORIGIN MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON - '21' # DESTINATION MODE - '22' # DESTINATION MODE BUT EXEMPT - '23' # DESTINATION MODE BUT IMMUNE - '24' # DESTINATION MODE BUT SUSPENDED - '25' # DESTINATION MODE BUT SUSPENDED - '40' # FOREIGN IMMUNE MODE 
   **/
  @ApiModelProperty(value = "- '01' # ORIGIN MODE - '02' # ORIGIN MODE BUT EXEMPT - '03' # ORIGIN MODE BUT IMMUNE - '04' # ORIGIN MODE BUT SUSPENDED FOR LEGAL REASON - '05' # ORIGIN MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON - '21' # DESTINATION MODE - '22' # DESTINATION MODE BUT EXEMPT - '23' # DESTINATION MODE BUT IMMUNE - '24' # DESTINATION MODE BUT SUSPENDED - '25' # DESTINATION MODE BUT SUSPENDED - '40' # FOREIGN IMMUNE MODE ")
  public CstEnum getCst() {
    return cst;
  }
  public void setCst(CstEnum cst) {
    this.cst = cst;
  }

  /**
   * - '61' # WITHHOLD NORMAL MODE - '62' # WITHHOLD NORMAL MODE BUT EXEMPT - '63' # WITHHOLD NORMAL MODE BUT IMMUNE - '64' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR LEGAL REASON - '65' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON - '66' # WITHHOLD FORCED MODE - '67' # WITHHOLD FORCED MODE BUT EXEMPT - '68' # WITHHOLD FORCED MODE BUT IMMUNE - '69' # WITHHOLD FORCED MODE BUT SUSPENDED FOR LEGAL REASON - '70' # WITHHOLD FORCED MODE BUT SUSPENDED FOR ADMINISTRATIVE PROCESS - '71' # NO WITHHOLD MODE - '72' # NO WITHHOLD FOREIGN MODE 
   **/
  @ApiModelProperty(value = "- '61' # WITHHOLD NORMAL MODE - '62' # WITHHOLD NORMAL MODE BUT EXEMPT - '63' # WITHHOLD NORMAL MODE BUT IMMUNE - '64' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR LEGAL REASON - '65' # WITHHOLD NORMAL MODE BUT SUSPENDED FOR ADMINISTRATIVE REASON - '66' # WITHHOLD FORCED MODE - '67' # WITHHOLD FORCED MODE BUT EXEMPT - '68' # WITHHOLD FORCED MODE BUT IMMUNE - '69' # WITHHOLD FORCED MODE BUT SUSPENDED FOR LEGAL REASON - '70' # WITHHOLD FORCED MODE BUT SUSPENDED FOR ADMINISTRATIVE PROCESS - '71' # NO WITHHOLD MODE - '72' # NO WITHHOLD FOREIGN MODE ")
  public CstRfEnum getCstRf() {
    return cstRf;
  }
  public void setCstRf(CstRfEnum cstRf) {
    this.cstRf = cstRf;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public SalesCalculatedTax getCalculatedTax() {
    return calculatedTax;
  }
  public void setCalculatedTax(SalesCalculatedTax calculatedTax) {
    this.calculatedTax = calculatedTax;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesLinesOut salesLinesOut = (SalesLinesOut) o;
    return (this.lineCode == null ? salesLinesOut.lineCode == null : this.lineCode.equals(salesLinesOut.lineCode)) &&
        (this.itemCode == null ? salesLinesOut.itemCode == null : this.itemCode.equals(salesLinesOut.itemCode)) &&
        (this.numberOfItems == null ? salesLinesOut.numberOfItems == null : this.numberOfItems.equals(salesLinesOut.numberOfItems)) &&
        (this.lineAmount == null ? salesLinesOut.lineAmount == null : this.lineAmount.equals(salesLinesOut.lineAmount)) &&
        (this.itemDescription == null ? salesLinesOut.itemDescription == null : this.itemDescription.equals(salesLinesOut.itemDescription)) &&
        (this.lineTaxedDiscount == null ? salesLinesOut.lineTaxedDiscount == null : this.lineTaxedDiscount.equals(salesLinesOut.lineTaxedDiscount)) &&
        (this.lineUntaxedDiscount == null ? salesLinesOut.lineUntaxedDiscount == null : this.lineUntaxedDiscount.equals(salesLinesOut.lineUntaxedDiscount)) &&
        (this.taxDeductions == null ? salesLinesOut.taxDeductions == null : this.taxDeductions.equals(salesLinesOut.taxDeductions)) &&
        (this.avalaraGoodsAndServicesType == null ? salesLinesOut.avalaraGoodsAndServicesType == null : this.avalaraGoodsAndServicesType.equals(salesLinesOut.avalaraGoodsAndServicesType)) &&
        (this.lineNetValue == null ? salesLinesOut.lineNetValue == null : this.lineNetValue.equals(salesLinesOut.lineNetValue)) &&
        (this.cst == null ? salesLinesOut.cst == null : this.cst.equals(salesLinesOut.cst)) &&
        (this.cstRf == null ? salesLinesOut.cstRf == null : this.cstRf.equals(salesLinesOut.cstRf)) &&
        (this.calculatedTax == null ? salesLinesOut.calculatedTax == null : this.calculatedTax.equals(salesLinesOut.calculatedTax));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.lineCode == null ? 0: this.lineCode.hashCode());
    result = 31 * result + (this.itemCode == null ? 0: this.itemCode.hashCode());
    result = 31 * result + (this.numberOfItems == null ? 0: this.numberOfItems.hashCode());
    result = 31 * result + (this.lineAmount == null ? 0: this.lineAmount.hashCode());
    result = 31 * result + (this.itemDescription == null ? 0: this.itemDescription.hashCode());
    result = 31 * result + (this.lineTaxedDiscount == null ? 0: this.lineTaxedDiscount.hashCode());
    result = 31 * result + (this.lineUntaxedDiscount == null ? 0: this.lineUntaxedDiscount.hashCode());
    result = 31 * result + (this.taxDeductions == null ? 0: this.taxDeductions.hashCode());
    result = 31 * result + (this.avalaraGoodsAndServicesType == null ? 0: this.avalaraGoodsAndServicesType.hashCode());
    result = 31 * result + (this.lineNetValue == null ? 0: this.lineNetValue.hashCode());
    result = 31 * result + (this.cst == null ? 0: this.cst.hashCode());
    result = 31 * result + (this.cstRf == null ? 0: this.cstRf.hashCode());
    result = 31 * result + (this.calculatedTax == null ? 0: this.calculatedTax.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesLinesOut {\n");
    
    sb.append("  lineCode: ").append(lineCode).append("\n");
    sb.append("  itemCode: ").append(itemCode).append("\n");
    sb.append("  numberOfItems: ").append(numberOfItems).append("\n");
    sb.append("  lineAmount: ").append(lineAmount).append("\n");
    sb.append("  itemDescription: ").append(itemDescription).append("\n");
    sb.append("  lineTaxedDiscount: ").append(lineTaxedDiscount).append("\n");
    sb.append("  lineUntaxedDiscount: ").append(lineUntaxedDiscount).append("\n");
    sb.append("  taxDeductions: ").append(taxDeductions).append("\n");
    sb.append("  avalaraGoodsAndServicesType: ").append(avalaraGoodsAndServicesType).append("\n");
    sb.append("  lineNetValue: ").append(lineNetValue).append("\n");
    sb.append("  cst: ").append(cst).append("\n");
    sb.append("  cstRf: ").append(cstRf).append("\n");
    sb.append("  calculatedTax: ").append(calculatedTax).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
