/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class LineForGoodsIcmsTaxRelief {
  
  @SerializedName("icmsTaxReliefReasonCode")
  private Integer icmsTaxReliefReasonCode = null;
  @SerializedName("icmsReliefTaxRate")
  private Double icmsReliefTaxRate = null;
  @SerializedName("icmsReliefTaxAmount")
  private Double icmsReliefTaxAmount = null;

  /**
   * When item transaction subject to desoneration, this is the reason code - 1 # Táxi; - 3 # Produtor Agropecuário; - 4 # Frotista/Locadora; - 5 # Diplomático/Consular; - 6 # Utilitários e Motocicletas da Amazônia Ocidental e Áreas de Livre Comércio (Resolução 714/88 e 790/94 – CONTRAN e suas alterações); - 7 # SUFRAMA; - 8 # Venda a órgão Público; - 9 # Outros - 10 # Deficiente Condutor - 11 # Deficiente não condutor - 12 # Fomento agropecuário - 16 # Olimpíadas Rio 2016 
   **/
  @ApiModelProperty(required = true, value = "When item transaction subject to desoneration, this is the reason code - 1 # Táxi; - 3 # Produtor Agropecuário; - 4 # Frotista/Locadora; - 5 # Diplomático/Consular; - 6 # Utilitários e Motocicletas da Amazônia Ocidental e Áreas de Livre Comércio (Resolução 714/88 e 790/94 – CONTRAN e suas alterações); - 7 # SUFRAMA; - 8 # Venda a órgão Público; - 9 # Outros - 10 # Deficiente Condutor - 11 # Deficiente não condutor - 12 # Fomento agropecuário - 16 # Olimpíadas Rio 2016 ")
  public Integer getIcmsTaxReliefReasonCode() {
    return icmsTaxReliefReasonCode;
  }
  public void setIcmsTaxReliefReasonCode(Integer icmsTaxReliefReasonCode) {
    this.icmsTaxReliefReasonCode = icmsTaxReliefReasonCode;
  }

  /**
   * ICMS Tax base rate discount  (desconto na base do ICMS referetne a desoneração)
   **/
  @ApiModelProperty(value = "ICMS Tax base rate discount  (desconto na base do ICMS referetne a desoneração)")
  public Double getIcmsReliefTaxRate() {
    return icmsReliefTaxRate;
  }
  public void setIcmsReliefTaxRate(Double icmsReliefTaxRate) {
    this.icmsReliefTaxRate = icmsReliefTaxRate;
  }

  /**
   * Amount for Icms Relief (desoneração)
   **/
  @ApiModelProperty(value = "Amount for Icms Relief (desoneração)")
  public Double getIcmsReliefTaxAmount() {
    return icmsReliefTaxAmount;
  }
  public void setIcmsReliefTaxAmount(Double icmsReliefTaxAmount) {
    this.icmsReliefTaxAmount = icmsReliefTaxAmount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LineForGoodsIcmsTaxRelief lineForGoodsIcmsTaxRelief = (LineForGoodsIcmsTaxRelief) o;
    return (this.icmsTaxReliefReasonCode == null ? lineForGoodsIcmsTaxRelief.icmsTaxReliefReasonCode == null : this.icmsTaxReliefReasonCode.equals(lineForGoodsIcmsTaxRelief.icmsTaxReliefReasonCode)) &&
        (this.icmsReliefTaxRate == null ? lineForGoodsIcmsTaxRelief.icmsReliefTaxRate == null : this.icmsReliefTaxRate.equals(lineForGoodsIcmsTaxRelief.icmsReliefTaxRate)) &&
        (this.icmsReliefTaxAmount == null ? lineForGoodsIcmsTaxRelief.icmsReliefTaxAmount == null : this.icmsReliefTaxAmount.equals(lineForGoodsIcmsTaxRelief.icmsReliefTaxAmount));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.icmsTaxReliefReasonCode == null ? 0: this.icmsTaxReliefReasonCode.hashCode());
    result = 31 * result + (this.icmsReliefTaxRate == null ? 0: this.icmsReliefTaxRate.hashCode());
    result = 31 * result + (this.icmsReliefTaxAmount == null ? 0: this.icmsReliefTaxAmount.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LineForGoodsIcmsTaxRelief {\n");
    
    sb.append("  icmsTaxReliefReasonCode: ").append(icmsTaxReliefReasonCode).append("\n");
    sb.append("  icmsReliefTaxRate: ").append(icmsReliefTaxRate).append("\n");
    sb.append("  icmsReliefTaxAmount: ").append(icmsReliefTaxAmount).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
