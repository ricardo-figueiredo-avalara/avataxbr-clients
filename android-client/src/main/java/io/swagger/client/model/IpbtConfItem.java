/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.StateEnum;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class IpbtConfItem {
  
  @SerializedName("state")
  private StateEnum state = null;
  @SerializedName("federalTax")
  private Double federalTax = null;
  @SerializedName("importTax")
  private Double importTax = null;
  @SerializedName("stateTax")
  private Double stateTax = null;
  @SerializedName("cityTax")
  private Double cityTax = null;
  @SerializedName("source")
  private String source = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public StateEnum getState() {
    return state;
  }
  public void setState(StateEnum state) {
    this.state = state;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getFederalTax() {
    return federalTax;
  }
  public void setFederalTax(Double federalTax) {
    this.federalTax = federalTax;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getImportTax() {
    return importTax;
  }
  public void setImportTax(Double importTax) {
    this.importTax = importTax;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getStateTax() {
    return stateTax;
  }
  public void setStateTax(Double stateTax) {
    this.stateTax = stateTax;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getCityTax() {
    return cityTax;
  }
  public void setCityTax(Double cityTax) {
    this.cityTax = cityTax;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSource() {
    return source;
  }
  public void setSource(String source) {
    this.source = source;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IpbtConfItem ipbtConfItem = (IpbtConfItem) o;
    return (this.state == null ? ipbtConfItem.state == null : this.state.equals(ipbtConfItem.state)) &&
        (this.federalTax == null ? ipbtConfItem.federalTax == null : this.federalTax.equals(ipbtConfItem.federalTax)) &&
        (this.importTax == null ? ipbtConfItem.importTax == null : this.importTax.equals(ipbtConfItem.importTax)) &&
        (this.stateTax == null ? ipbtConfItem.stateTax == null : this.stateTax.equals(ipbtConfItem.stateTax)) &&
        (this.cityTax == null ? ipbtConfItem.cityTax == null : this.cityTax.equals(ipbtConfItem.cityTax)) &&
        (this.source == null ? ipbtConfItem.source == null : this.source.equals(ipbtConfItem.source));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.state == null ? 0: this.state.hashCode());
    result = 31 * result + (this.federalTax == null ? 0: this.federalTax.hashCode());
    result = 31 * result + (this.importTax == null ? 0: this.importTax.hashCode());
    result = 31 * result + (this.stateTax == null ? 0: this.stateTax.hashCode());
    result = 31 * result + (this.cityTax == null ? 0: this.cityTax.hashCode());
    result = 31 * result + (this.source == null ? 0: this.source.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class IpbtConfItem {\n");
    
    sb.append("  state: ").append(state).append("\n");
    sb.append("  federalTax: ").append(federalTax).append("\n");
    sb.append("  importTax: ").append(importTax).append("\n");
    sb.append("  stateTax: ").append(stateTax).append("\n");
    sb.append("  cityTax: ").append(cityTax).append("\n");
    sb.append("  source: ").append(source).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
