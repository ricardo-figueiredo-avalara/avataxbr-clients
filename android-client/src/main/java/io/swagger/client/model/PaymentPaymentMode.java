/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class PaymentPaymentMode {
  
  public enum ModeEnum {
     01,  02,  03,  04,  05,  10,  11,  12,  13,  99, 
  };
  @SerializedName("mode")
  private ModeEnum mode = null;
  @SerializedName("value")
  private Double value = null;
  public enum CardTpIntegrationEnum {
     1,  2, 
  };
  @SerializedName("cardTpIntegration")
  private CardTpIntegrationEnum cardTpIntegration = null;
  @SerializedName("cardCNPJ")
  private String cardCNPJ = null;
  public enum CardBrandEnum {
     01,  02,  03,  04,  99, 
  };
  @SerializedName("cardBrand")
  private CardBrandEnum cardBrand = null;
  @SerializedName("cardAuthorization")
  private String cardAuthorization = null;

  /**
   * Payment mode - '01' # Dinheiro - '02' # Cheque - '03' # Cartão de Crédito - '04' # Cartão de Débito - '05' # Crédito Loja - '10' # Vale Alimentação - '11' # Vale Refeição - '12' # Vale Presente - '13' # Vale Combustível - '99' # Outros 
   **/
  @ApiModelProperty(required = true, value = "Payment mode - '01' # Dinheiro - '02' # Cheque - '03' # Cartão de Crédito - '04' # Cartão de Débito - '05' # Crédito Loja - '10' # Vale Alimentação - '11' # Vale Refeição - '12' # Vale Presente - '13' # Vale Combustível - '99' # Outros ")
  public ModeEnum getMode() {
    return mode;
  }
  public void setMode(ModeEnum mode) {
    this.mode = mode;
  }

  /**
   * payment value
   **/
  @ApiModelProperty(required = true, value = "payment value")
  public Double getValue() {
    return value;
  }
  public void setValue(Double value) {
    this.value = value;
  }

  /**
   * - '1' # Payment integrated with system, - '2' # Payment not integrated with system 
   **/
  @ApiModelProperty(value = "- '1' # Payment integrated with system, - '2' # Payment not integrated with system ")
  public CardTpIntegrationEnum getCardTpIntegration() {
    return cardTpIntegration;
  }
  public void setCardTpIntegration(CardTpIntegrationEnum cardTpIntegration) {
    this.cardTpIntegration = cardTpIntegration;
  }

  /**
   * Federal tax id of accrediting card (credenciadora do cartão)
   **/
  @ApiModelProperty(value = "Federal tax id of accrediting card (credenciadora do cartão)")
  public String getCardCNPJ() {
    return cardCNPJ;
  }
  public void setCardCNPJ(String cardCNPJ) {
    this.cardCNPJ = cardCNPJ;
  }

  /**
   * card brand - '01' # Visa - '02' # Mastercard - '03' # American Express - '04' # Sorocred - '99' # Other 
   **/
  @ApiModelProperty(value = "card brand - '01' # Visa - '02' # Mastercard - '03' # American Express - '04' # Sorocred - '99' # Other ")
  public CardBrandEnum getCardBrand() {
    return cardBrand;
  }
  public void setCardBrand(CardBrandEnum cardBrand) {
    this.cardBrand = cardBrand;
  }

  /**
   * transaction authorization number
   **/
  @ApiModelProperty(value = "transaction authorization number")
  public String getCardAuthorization() {
    return cardAuthorization;
  }
  public void setCardAuthorization(String cardAuthorization) {
    this.cardAuthorization = cardAuthorization;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentPaymentMode paymentPaymentMode = (PaymentPaymentMode) o;
    return (this.mode == null ? paymentPaymentMode.mode == null : this.mode.equals(paymentPaymentMode.mode)) &&
        (this.value == null ? paymentPaymentMode.value == null : this.value.equals(paymentPaymentMode.value)) &&
        (this.cardTpIntegration == null ? paymentPaymentMode.cardTpIntegration == null : this.cardTpIntegration.equals(paymentPaymentMode.cardTpIntegration)) &&
        (this.cardCNPJ == null ? paymentPaymentMode.cardCNPJ == null : this.cardCNPJ.equals(paymentPaymentMode.cardCNPJ)) &&
        (this.cardBrand == null ? paymentPaymentMode.cardBrand == null : this.cardBrand.equals(paymentPaymentMode.cardBrand)) &&
        (this.cardAuthorization == null ? paymentPaymentMode.cardAuthorization == null : this.cardAuthorization.equals(paymentPaymentMode.cardAuthorization));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.mode == null ? 0: this.mode.hashCode());
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    result = 31 * result + (this.cardTpIntegration == null ? 0: this.cardTpIntegration.hashCode());
    result = 31 * result + (this.cardCNPJ == null ? 0: this.cardCNPJ.hashCode());
    result = 31 * result + (this.cardBrand == null ? 0: this.cardBrand.hashCode());
    result = 31 * result + (this.cardAuthorization == null ? 0: this.cardAuthorization.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentPaymentMode {\n");
    
    sb.append("  mode: ").append(mode).append("\n");
    sb.append("  value: ").append(value).append("\n");
    sb.append("  cardTpIntegration: ").append(cardTpIntegration).append("\n");
    sb.append("  cardCNPJ: ").append(cardCNPJ).append("\n");
    sb.append("  cardBrand: ").append(cardBrand).append("\n");
    sb.append("  cardAuthorization: ").append(cardAuthorization).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
