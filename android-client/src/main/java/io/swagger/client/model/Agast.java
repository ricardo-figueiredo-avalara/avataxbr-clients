/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.AgastCodeType;
import io.swagger.client.model.AgastIcmsConf;
import io.swagger.client.model.TaxTypeRate;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Agast {
  
  @SerializedName("code")
  private String code = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("hsCode")
  private String hsCode = null;
  @SerializedName("ex")
  private Integer ex = null;
  @SerializedName("cest")
  private String cest = null;
  @SerializedName("cean")
  private String cean = null;
  @SerializedName("codeType")
  private AgastCodeType codeType = null;
  public enum CstIPIEnum {
     50,  51,  52,  53,  54, 
  };
  @SerializedName("cstIPI")
  private CstIPIEnum cstIPI = null;
  @SerializedName("ipiLegalTaxClass")
  private String ipiLegalTaxClass = null;
  public enum PisCofinsTaxReportingEnum {
     cumulative,  noCumulative, 
  };
  @SerializedName("pisCofinsTaxReporting")
  private PisCofinsTaxReportingEnum pisCofinsTaxReporting = null;
  public enum AccruablePISTaxationEnum {
     T,  Z,  E,  H,  N, 
  };
  @SerializedName("accruablePISTaxation")
  private AccruablePISTaxationEnum accruablePISTaxation = null;
  public enum AccruableCOFINSTaxationEnum {
     T,  Z,  E,  H,  N, 
  };
  @SerializedName("accruableCOFINSTaxation")
  private AccruableCOFINSTaxationEnum accruableCOFINSTaxation = null;
  public enum AccruableCSLLTaxationEnum {
     T,  E, 
  };
  @SerializedName("accruableCSLLTaxation")
  private AccruableCSLLTaxationEnum accruableCSLLTaxation = null;
  @SerializedName("issDueatDestination")
  private Boolean issDueatDestination = null;
  @SerializedName("pisCofinsCreditNotAllowed")
  private Boolean pisCofinsCreditNotAllowed = null;
  public enum IssTaxationEnum {
     T,  E,  F,  A,  L,  I, 
  };
  @SerializedName("issTaxation")
  private IssTaxationEnum issTaxation = null;
  @SerializedName("federalTaxRate")
  private List<TaxTypeRate> federalTaxRate = null;
  public enum SpecialProductClassEnum {
     OTHERS,  COMMUNICATION,  ENERGY,  TRANSPORT,  FUEL AND LUBRIFICANT,  VEHICLE,  ALCOHOLIC BEVERAGES,  WEAPONS,  AMMO,  PERFUME,  TOBACCO, 
  };
  @SerializedName("specialProductClass")
  private SpecialProductClassEnum specialProductClass = null;
  @SerializedName("icmsConf")
  private List<AgastIcmsConf> icmsConf = null;

  /**
   * Agast Code. AGAST (Avalara Goods and Services Types) are preset products with default tax definitions available to be used as provided or copied to create an specific comapany item.
   **/
  @ApiModelProperty(required = true, value = "Agast Code. AGAST (Avalara Goods and Services Types) are preset products with default tax definitions available to be used as provided or copied to create an specific comapany item.")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }

  /**
   * Agast Description
   **/
  @ApiModelProperty(value = "Agast Description")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * harmonized code, NCM or LC 116
   **/
  @ApiModelProperty(value = "harmonized code, NCM or LC 116")
  public String getHsCode() {
    return hsCode;
  }
  public void setHsCode(String hsCode) {
    this.hsCode = hsCode;
  }

  /**
   * hsCode Exception for IPI tax
   **/
  @ApiModelProperty(value = "hsCode Exception for IPI tax")
  public Integer getEx() {
    return ex;
  }
  public void setEx(Integer ex) {
    this.ex = ex;
  }

  /**
   * tax substitution code - Codigo especificador da Substuicao Tributaria
   **/
  @ApiModelProperty(value = "tax substitution code - Codigo especificador da Substuicao Tributaria")
  public String getCest() {
    return cest;
  }
  public void setCest(String cest) {
    this.cest = cest;
  }

  /**
   * GTIN NUMBER
   **/
  @ApiModelProperty(value = "GTIN NUMBER")
  public String getCean() {
    return cean;
  }
  public void setCean(String cean) {
    this.cean = cean;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public AgastCodeType getCodeType() {
    return codeType;
  }
  public void setCodeType(AgastCodeType codeType) {
    this.codeType = codeType;
  }

  /**
   * Inform if this process is subject to IPI taxation on output process - '50' # Saída Tributada - '51' # Saída Tributável com Alíquota Zero - '52' # Saída Isenta - '53' # Saída Não-Tributada - '54' # Saída Imune 
   **/
  @ApiModelProperty(value = "Inform if this process is subject to IPI taxation on output process - '50' # Saída Tributada - '51' # Saída Tributável com Alíquota Zero - '52' # Saída Isenta - '53' # Saída Não-Tributada - '54' # Saída Imune ")
  public CstIPIEnum getCstIPI() {
    return cstIPI;
  }
  public void setCstIPI(CstIPIEnum cstIPI) {
    this.cstIPI = cstIPI;
  }

  /**
   * Legal tax classificação for IPI (enquadramento tributário) When the process has CST IPI 52 or 54, it is mandatory to inform a Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU= 
   **/
  @ApiModelProperty(value = "Legal tax classificação for IPI (enquadramento tributário) When the process has CST IPI 52 or 54, it is mandatory to inform a Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU= ")
  public String getIpiLegalTaxClass() {
    return ipiLegalTaxClass;
  }
  public void setIpiLegalTaxClass(String ipiLegalTaxClass) {
    this.ipiLegalTaxClass = ipiLegalTaxClass;
  }

  /**
   * when the company is Real Profit inform if this item is cumulative or no cumulative by default
   **/
  @ApiModelProperty(value = "when the company is Real Profit inform if this item is cumulative or no cumulative by default")
  public PisCofinsTaxReportingEnum getPisCofinsTaxReporting() {
    return pisCofinsTaxReporting;
  }
  public void setPisCofinsTaxReporting(PisCofinsTaxReportingEnum pisCofinsTaxReporting) {
    this.pisCofinsTaxReporting = pisCofinsTaxReporting;
  }

  /**
   * Inform if this item by nature is subject to PIS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE 
   **/
  @ApiModelProperty(value = "Inform if this item by nature is subject to PIS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE ")
  public AccruablePISTaxationEnum getAccruablePISTaxation() {
    return accruablePISTaxation;
  }
  public void setAccruablePISTaxation(AccruablePISTaxationEnum accruablePISTaxation) {
    this.accruablePISTaxation = accruablePISTaxation;
  }

  /**
   * Inform if this item by nature is subject to COFINS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE 
   **/
  @ApiModelProperty(value = "Inform if this item by nature is subject to COFINS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE ")
  public AccruableCOFINSTaxationEnum getAccruableCOFINSTaxation() {
    return accruableCOFINSTaxation;
  }
  public void setAccruableCOFINSTaxation(AccruableCOFINSTaxationEnum accruableCOFINSTaxation) {
    this.accruableCOFINSTaxation = accruableCOFINSTaxation;
  }

  /**
   * Inform if this item by nature is subject to CSLL taxation or exempt - 'T' # TAXABLE - 'E' # EXEMPT 
   **/
  @ApiModelProperty(value = "Inform if this item by nature is subject to CSLL taxation or exempt - 'T' # TAXABLE - 'E' # EXEMPT ")
  public AccruableCSLLTaxationEnum getAccruableCSLLTaxation() {
    return accruableCSLLTaxation;
  }
  public void setAccruableCSLLTaxation(AccruableCSLLTaxationEnum accruableCSLLTaxation) {
    this.accruableCSLLTaxation = accruableCSLLTaxation;
  }

  /**
   * for service items with City Jurisdiction, inform where the ISS tax is due
   **/
  @ApiModelProperty(value = "for service items with City Jurisdiction, inform where the ISS tax is due")
  public Boolean getIssDueatDestination() {
    return issDueatDestination;
  }
  public void setIssDueatDestination(Boolean issDueatDestination) {
    this.issDueatDestination = issDueatDestination;
  }

  /**
   * on Real Profit Purchase transaction, inform if this item allows tax credits when it is non-cumulative
   **/
  @ApiModelProperty(value = "on Real Profit Purchase transaction, inform if this item allows tax credits when it is non-cumulative")
  public Boolean getPisCofinsCreditNotAllowed() {
    return pisCofinsCreditNotAllowed;
  }
  public void setPisCofinsCreditNotAllowed(Boolean pisCofinsCreditNotAllowed) {
    this.pisCofinsCreditNotAllowed = pisCofinsCreditNotAllowed;
  }

  /**
   * - 'T' # TAXABLE - TRIBUTÁVEL INCLUSIVE PARA EXPORTAÇÃO' - 'E' # TAXABLE WITH EXEMPTION FOR EXPORTS - ISENTO PARA SERVIÇOS PRESTADOS AO EXTERIOR (DEFAULT) - 'F' # EXEMPT - 'A' # SUSPENDED FOR ADMINISTRATIVE REASON - 'L' # SUSPENDED FOR LEGAL DECISION - 'I' # IMMUNE 
   **/
  @ApiModelProperty(value = "- 'T' # TAXABLE - TRIBUTÁVEL INCLUSIVE PARA EXPORTAÇÃO' - 'E' # TAXABLE WITH EXEMPTION FOR EXPORTS - ISENTO PARA SERVIÇOS PRESTADOS AO EXTERIOR (DEFAULT) - 'F' # EXEMPT - 'A' # SUSPENDED FOR ADMINISTRATIVE REASON - 'L' # SUSPENDED FOR LEGAL DECISION - 'I' # IMMUNE ")
  public IssTaxationEnum getIssTaxation() {
    return issTaxation;
  }
  public void setIssTaxation(IssTaxationEnum issTaxation) {
    this.issTaxation = issTaxation;
  }

  /**
   * This is an array of tax object related to an agast.
   **/
  @ApiModelProperty(value = "This is an array of tax object related to an agast.")
  public List<TaxTypeRate> getFederalTaxRate() {
    return federalTaxRate;
  }
  public void setFederalTaxRate(List<TaxTypeRate> federalTaxRate) {
    this.federalTaxRate = federalTaxRate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public SpecialProductClassEnum getSpecialProductClass() {
    return specialProductClass;
  }
  public void setSpecialProductClass(SpecialProductClassEnum specialProductClass) {
    this.specialProductClass = specialProductClass;
  }

  /**
   * One per State
   **/
  @ApiModelProperty(value = "One per State")
  public List<AgastIcmsConf> getIcmsConf() {
    return icmsConf;
  }
  public void setIcmsConf(List<AgastIcmsConf> icmsConf) {
    this.icmsConf = icmsConf;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Agast agast = (Agast) o;
    return (this.code == null ? agast.code == null : this.code.equals(agast.code)) &&
        (this.description == null ? agast.description == null : this.description.equals(agast.description)) &&
        (this.hsCode == null ? agast.hsCode == null : this.hsCode.equals(agast.hsCode)) &&
        (this.ex == null ? agast.ex == null : this.ex.equals(agast.ex)) &&
        (this.cest == null ? agast.cest == null : this.cest.equals(agast.cest)) &&
        (this.cean == null ? agast.cean == null : this.cean.equals(agast.cean)) &&
        (this.codeType == null ? agast.codeType == null : this.codeType.equals(agast.codeType)) &&
        (this.cstIPI == null ? agast.cstIPI == null : this.cstIPI.equals(agast.cstIPI)) &&
        (this.ipiLegalTaxClass == null ? agast.ipiLegalTaxClass == null : this.ipiLegalTaxClass.equals(agast.ipiLegalTaxClass)) &&
        (this.pisCofinsTaxReporting == null ? agast.pisCofinsTaxReporting == null : this.pisCofinsTaxReporting.equals(agast.pisCofinsTaxReporting)) &&
        (this.accruablePISTaxation == null ? agast.accruablePISTaxation == null : this.accruablePISTaxation.equals(agast.accruablePISTaxation)) &&
        (this.accruableCOFINSTaxation == null ? agast.accruableCOFINSTaxation == null : this.accruableCOFINSTaxation.equals(agast.accruableCOFINSTaxation)) &&
        (this.accruableCSLLTaxation == null ? agast.accruableCSLLTaxation == null : this.accruableCSLLTaxation.equals(agast.accruableCSLLTaxation)) &&
        (this.issDueatDestination == null ? agast.issDueatDestination == null : this.issDueatDestination.equals(agast.issDueatDestination)) &&
        (this.pisCofinsCreditNotAllowed == null ? agast.pisCofinsCreditNotAllowed == null : this.pisCofinsCreditNotAllowed.equals(agast.pisCofinsCreditNotAllowed)) &&
        (this.issTaxation == null ? agast.issTaxation == null : this.issTaxation.equals(agast.issTaxation)) &&
        (this.federalTaxRate == null ? agast.federalTaxRate == null : this.federalTaxRate.equals(agast.federalTaxRate)) &&
        (this.specialProductClass == null ? agast.specialProductClass == null : this.specialProductClass.equals(agast.specialProductClass)) &&
        (this.icmsConf == null ? agast.icmsConf == null : this.icmsConf.equals(agast.icmsConf));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.hsCode == null ? 0: this.hsCode.hashCode());
    result = 31 * result + (this.ex == null ? 0: this.ex.hashCode());
    result = 31 * result + (this.cest == null ? 0: this.cest.hashCode());
    result = 31 * result + (this.cean == null ? 0: this.cean.hashCode());
    result = 31 * result + (this.codeType == null ? 0: this.codeType.hashCode());
    result = 31 * result + (this.cstIPI == null ? 0: this.cstIPI.hashCode());
    result = 31 * result + (this.ipiLegalTaxClass == null ? 0: this.ipiLegalTaxClass.hashCode());
    result = 31 * result + (this.pisCofinsTaxReporting == null ? 0: this.pisCofinsTaxReporting.hashCode());
    result = 31 * result + (this.accruablePISTaxation == null ? 0: this.accruablePISTaxation.hashCode());
    result = 31 * result + (this.accruableCOFINSTaxation == null ? 0: this.accruableCOFINSTaxation.hashCode());
    result = 31 * result + (this.accruableCSLLTaxation == null ? 0: this.accruableCSLLTaxation.hashCode());
    result = 31 * result + (this.issDueatDestination == null ? 0: this.issDueatDestination.hashCode());
    result = 31 * result + (this.pisCofinsCreditNotAllowed == null ? 0: this.pisCofinsCreditNotAllowed.hashCode());
    result = 31 * result + (this.issTaxation == null ? 0: this.issTaxation.hashCode());
    result = 31 * result + (this.federalTaxRate == null ? 0: this.federalTaxRate.hashCode());
    result = 31 * result + (this.specialProductClass == null ? 0: this.specialProductClass.hashCode());
    result = 31 * result + (this.icmsConf == null ? 0: this.icmsConf.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Agast {\n");
    
    sb.append("  code: ").append(code).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  hsCode: ").append(hsCode).append("\n");
    sb.append("  ex: ").append(ex).append("\n");
    sb.append("  cest: ").append(cest).append("\n");
    sb.append("  cean: ").append(cean).append("\n");
    sb.append("  codeType: ").append(codeType).append("\n");
    sb.append("  cstIPI: ").append(cstIPI).append("\n");
    sb.append("  ipiLegalTaxClass: ").append(ipiLegalTaxClass).append("\n");
    sb.append("  pisCofinsTaxReporting: ").append(pisCofinsTaxReporting).append("\n");
    sb.append("  accruablePISTaxation: ").append(accruablePISTaxation).append("\n");
    sb.append("  accruableCOFINSTaxation: ").append(accruableCOFINSTaxation).append("\n");
    sb.append("  accruableCSLLTaxation: ").append(accruableCSLLTaxation).append("\n");
    sb.append("  issDueatDestination: ").append(issDueatDestination).append("\n");
    sb.append("  pisCofinsCreditNotAllowed: ").append(pisCofinsCreditNotAllowed).append("\n");
    sb.append("  issTaxation: ").append(issTaxation).append("\n");
    sb.append("  federalTaxRate: ").append(federalTaxRate).append("\n");
    sb.append("  specialProductClass: ").append(specialProductClass).append("\n");
    sb.append("  icmsConf: ").append(icmsConf).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
