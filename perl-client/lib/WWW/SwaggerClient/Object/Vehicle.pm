=begin comment

AvaTax Brazil

The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by the swagger code generator program. 
# Do not edit the class manually.
# Ref: https://github.com/swagger-api/swagger-codegen
#
package WWW::SwaggerClient::Object::Vehicle;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base ("Class::Accessor", "Class::Data::Inheritable");


#
#
#
# NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
# REF: https://github.com/swagger-api/swagger-codegen
#

=begin comment

AvaTax Brazil

The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by the swagger code generator program. 
# Do not edit the class manually.
# Ref: https://github.com/swagger-api/swagger-codegen
#
__PACKAGE__->mk_classdata('attribute_map' => {});
__PACKAGE__->mk_classdata('swagger_types' => {});
__PACKAGE__->mk_classdata('method_documentation' => {}); 
__PACKAGE__->mk_classdata('class_documentation' => {});

# new object
sub new { 
    my ($class, %args) = @_; 

	my $self = bless {}, $class;
	
	foreach my $attribute (keys %{$class->attribute_map}) {
		my $args_key = $class->attribute_map->{$attribute};
		$self->$attribute( $args{ $args_key } );
	}
	
	return $self;
}  

# return perl hash
sub to_hash {
    return decode_json(JSON->new->convert_blessed->encode( shift ));
}

# used by JSON for serialization
sub TO_JSON { 
    my $self = shift;
    my $_data = {};
    foreach my $_key (keys %{$self->attribute_map}) {
        if (defined $self->{$_key}) {
            $_data->{$self->attribute_map->{$_key}} = $self->{$_key};
        }
    }
    return $_data;
}

# from Perl hashref
sub from_hash {
    my ($self, $hash) = @_;

    # loop through attributes and use swagger_types to deserialize the data
    while ( my ($_key, $_type) = each %{$self->swagger_types} ) {
    	my $_json_attribute = $self->attribute_map->{$_key}; 
        if ($_type =~ /^array\[/i) { # array
            my $_subclass = substr($_type, 6, -1);
            my @_array = ();
            foreach my $_element (@{$hash->{$_json_attribute}}) {
                push @_array, $self->_deserialize($_subclass, $_element);
            }
            $self->{$_key} = \@_array;
        } elsif (exists $hash->{$_json_attribute}) { #hash(model), primitive, datetime
            $self->{$_key} = $self->_deserialize($_type, $hash->{$_json_attribute});
        } else {
        	$log->debugf("Warning: %s (%s) does not exist in input hash\n", $_key, $_json_attribute);
        }
    }
  
    return $self;
}

# deserialize non-array data
sub _deserialize {
    my ($self, $type, $data) = @_;
    $log->debugf("deserializing %s with %s",Dumper($data), $type);
        
    if ($type eq 'DateTime') {
        return DateTime->from_epoch(epoch => str2time($data));
    } elsif ( grep( /^$type$/, ('int', 'double', 'string', 'boolean'))) {
        return $data;
    } else { # hash(model)
        my $_instance = eval "WWW::SwaggerClient::Object::$type->new()";
        return $_instance->from_hash($data);
    }
}



__PACKAGE__->class_documentation({description => '',
                                  class => 'Vehicle',
                                  required => [], # TODO
}                                 );

__PACKAGE__->method_documentation({
    'tp_op' => {
    	datatype => 'int',
    	base_name => 'tpOp',
    	description => '- 1 # Sales by car dealership - 2 # Direct billing - 3 # Direct sales - 0 # Other ',
    	format => '',
    	read_only => '',
    		},
    'chassis_number' => {
    	datatype => 'string',
    	base_name => 'chassisNumber',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'color_code' => {
    	datatype => 'string',
    	base_name => 'colorCode',
    	description => 'color code used by factory',
    	format => '',
    	read_only => '',
    		},
    'color_name' => {
    	datatype => 'string',
    	base_name => 'colorName',
    	description => 'color name',
    	format => '',
    	read_only => '',
    		},
    'cv_power' => {
    	datatype => 'string',
    	base_name => 'cvPower',
    	description => 'Power using CV unid',
    	format => '',
    	read_only => '',
    		},
    'cylinder_volum_cc' => {
    	datatype => 'string',
    	base_name => 'cylinderVolumCC',
    	description => 'engine size in cubic centimeters',
    	format => '',
    	read_only => '',
    		},
    'net_weight' => {
    	datatype => 'string',
    	base_name => 'netWeight',
    	description => 'net weight',
    	format => '',
    	read_only => '',
    		},
    'gross_weight' => {
    	datatype => 'string',
    	base_name => 'grossWeight',
    	description => 'gross weight',
    	format => '',
    	read_only => '',
    		},
    'serial_number' => {
    	datatype => 'string',
    	base_name => 'serialNumber',
    	description => 'serie',
    	format => '',
    	read_only => '',
    		},
    'fuel_type' => {
    	datatype => 'string',
    	base_name => 'fuelType',
    	description => '- &#39;01&#39; # Alcohol - &#39;02&#39; # Gas - &#39;03&#39; # Diesel - &#39;16&#39; # Alcohol/Gas - &#39;17&#39; # Gas/Alcohol/GNV - &#39;18&#39; # Gas/Electric ',
    	format => '',
    	read_only => '',
    		},
    'engine_number' => {
    	datatype => 'string',
    	base_name => 'engineNumber',
    	description => 'engine number',
    	format => '',
    	read_only => '',
    		},
    'cmt' => {
    	datatype => 'string',
    	base_name => 'cmt',
    	description => 'traction capacity, tonne',
    	format => '',
    	read_only => '',
    		},
    'length_between_axis' => {
    	datatype => 'string',
    	base_name => 'lengthBetweenAxis',
    	description => 'length between axis',
    	format => '',
    	read_only => '',
    		},
    'model_year' => {
    	datatype => 'string',
    	base_name => 'modelYear',
    	description => 'model year',
    	format => '',
    	read_only => '',
    		},
    'manufactory_year' => {
    	datatype => 'string',
    	base_name => 'manufactoryYear',
    	description => 'year of factory',
    	format => '',
    	read_only => '',
    		},
    'paint_type' => {
    	datatype => 'string',
    	base_name => 'paintType',
    	description => 'paynt type',
    	format => '',
    	read_only => '',
    		},
    'vehicle_renavam_type' => {
    	datatype => 'string',
    	base_name => 'vehicleRENAVAMType',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'specie_renavam_type' => {
    	datatype => 'string',
    	base_name => 'specieRENAVAMType',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'model_renavam_code' => {
    	datatype => 'string',
    	base_name => 'modelRENAVAMCode',
    	description => '',
    	format => '',
    	read_only => '',
    		},
    'color_denatran_code' => {
    	datatype => 'string',
    	base_name => 'colorDENATRANCode',
    	description => '- &#39;01&#39; # YELLOW - &#39;02&#39; # BLUE - &#39;03&#39; # BEIGE - &#39;04&#39; # WHITE - &#39;05&#39; # GRAY - &#39;06&#39; # GOLDEN - &#39;07&#39; # GRENA - &#39;08&#39; # ORANGE - &#39;09&#39; # BROWN - &#39;10&#39; # SILVER - &#39;11&#39; # BLACK - &#39;12&#39; # PINK - &#39;13&#39; # PURPLE - &#39;14&#39; # GREEN - &#39;15&#39; # RED - &#39;16&#39; # FANTASY ',
    	format => '',
    	read_only => '',
    		},
    'vin' => {
    	datatype => 'string',
    	base_name => 'vin',
    	description => 'chassis condition original or modified (remarcado)',
    	format => '',
    	read_only => '',
    		},
    'vehicle_manufactory_status' => {
    	datatype => 'string',
    	base_name => 'vehicleManufactoryStatus',
    	description => '- &#39;1&#39; # Finished(Done) - &#39;2&#39; # Not finished - &#39;3&#39; # Semi-finished ',
    	format => '',
    	read_only => '',
    		},
    'max_occupants_quantity' => {
    	datatype => 'string',
    	base_name => 'maxOccupantsQuantity',
    	description => 'max number of sit occupants',
    	format => '',
    	read_only => '',
    		},
    'restriction_type' => {
    	datatype => 'string',
    	base_name => 'restrictionType',
    	description => 'Lien/restriction type - &#39;0&#39; # No one; - &#39;1&#39; # Alienação Fiduciária; - &#39;2&#39; # Arrendamento Mercantil; - &#39;3&#39; # Reserva de Domínio; - &#39;4&#39; # Penhor de Veículos; - &#39;9&#39; # Other. ',
    	format => '',
    	read_only => '',
    		},
});

__PACKAGE__->swagger_types( {
    'tp_op' => 'int',
    'chassis_number' => 'string',
    'color_code' => 'string',
    'color_name' => 'string',
    'cv_power' => 'string',
    'cylinder_volum_cc' => 'string',
    'net_weight' => 'string',
    'gross_weight' => 'string',
    'serial_number' => 'string',
    'fuel_type' => 'string',
    'engine_number' => 'string',
    'cmt' => 'string',
    'length_between_axis' => 'string',
    'model_year' => 'string',
    'manufactory_year' => 'string',
    'paint_type' => 'string',
    'vehicle_renavam_type' => 'string',
    'specie_renavam_type' => 'string',
    'model_renavam_code' => 'string',
    'color_denatran_code' => 'string',
    'vin' => 'string',
    'vehicle_manufactory_status' => 'string',
    'max_occupants_quantity' => 'string',
    'restriction_type' => 'string'
} );

__PACKAGE__->attribute_map( {
    'tp_op' => 'tpOp',
    'chassis_number' => 'chassisNumber',
    'color_code' => 'colorCode',
    'color_name' => 'colorName',
    'cv_power' => 'cvPower',
    'cylinder_volum_cc' => 'cylinderVolumCC',
    'net_weight' => 'netWeight',
    'gross_weight' => 'grossWeight',
    'serial_number' => 'serialNumber',
    'fuel_type' => 'fuelType',
    'engine_number' => 'engineNumber',
    'cmt' => 'cmt',
    'length_between_axis' => 'lengthBetweenAxis',
    'model_year' => 'modelYear',
    'manufactory_year' => 'manufactoryYear',
    'paint_type' => 'paintType',
    'vehicle_renavam_type' => 'vehicleRENAVAMType',
    'specie_renavam_type' => 'specieRENAVAMType',
    'model_renavam_code' => 'modelRENAVAMCode',
    'color_denatran_code' => 'colorDENATRANCode',
    'vin' => 'vin',
    'vehicle_manufactory_status' => 'vehicleManufactoryStatus',
    'max_occupants_quantity' => 'maxOccupantsQuantity',
    'restriction_type' => 'restrictionType'
} );

__PACKAGE__->mk_accessors(keys %{__PACKAGE__->attribute_map});


1;
