/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/// <reference path="api.d.ts" />

namespace API.Client {
    'use strict';

    export interface EntityForGoods {
        /**
         * Entity name, official name (Razão Social)
         */
        "name"?: string;

        /**
         * - 'transporter' - 'sender' # REMETENTE - 'dispatcher' # EXPEDITOR - 'receiver' # RECEIVER - 'addressee' # DESTINATÁRIO - 'other' # OUTRO 
         */
        "role"?: EntityForGoods.RoleEnum;

        "type": EntityType;

        /**
         * CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'
         */
        "federalTaxId": string;

        /**
         * City Tax ID
         */
        "cityTaxId"?: string;

        /**
         * State Tax ID
         */
        "stateTaxId"?: string;

        /**
         * Suframa ID
         */
        "suframa"?: string;

        /**
         * Entity Phone
         */
        "phone"?: string;

        "taxRegime"?: EntityForGoods.TaxRegimeEnum;

        /**
         * Entity Email
         */
        "email"?: string;

        /**
         * Companies subject to follow same rules of Government entities (Instrução Normativa: SRF1234)
         */
        "subjectToSRF1234"?: boolean;

        /**
         * Inform if the entity is ICMS tax payer.
         */
        "icmsTaxPayer"?: boolean;

    }

    export namespace EntityForGoods {
        export enum RoleEnum {
            Transporter = <any> 'transporter',
            Sender = <any> 'sender',
            Dispatcher = <any> 'dispatcher',
            Receiver = <any> 'receiver',
            Addressee = <any> 'addressee',
            Other = <any> 'other'
        }
        export enum TaxRegimeEnum {
            RealProfit = <any> 'realProfit',
            EstimatedProfit = <any> 'estimatedProfit',
            Simplified = <any> 'simplified',
            SimplifiedOverGrossthreshold = <any> 'simplifiedOverGrossthreshold',
            SimplifiedEntrepreneur = <any> 'simplifiedEntrepreneur',
            NotApplicable = <any> 'notApplicable',
            Individual = <any> 'individual'
        }
    }
}
