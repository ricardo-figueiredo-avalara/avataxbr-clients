/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/// <reference path="api.d.ts" />

namespace API.Client {
    'use strict';

    /**
     * Filter this message application to specified tax cases. - taxtype - jurisdictionType 
     */
    export interface LegalReasonTaxScope {
        /**
         * This is the Tax Type to apply legal messages. - 'NONE' - 'INSS' - 'IRRF' - 'IRPJ' - 'PIS' - 'COFINS' - 'CSLL' - 'IPI' - 'ICMS' - 'II' - 'IOF' - 'ISS' - 'APROXTOTALTAX' 
         */
        "taxType": LegalReasonTaxScope.TaxTypeEnum;

        /**
         * These are the specific tax types to which a message may be applied - 'icms' - 'icmsSt' - 'icmsStSd' - 'icmsPartOwn' - 'icmsPartDest' - 'icmsDifaFCP' - 'icmsDifaDest' - 'icmsDifaRemet' - 'icmsRf' - 'icmsDeson' - 'icmsCredsn' - 'pis' - 'pisSt' - 'cofins' - 'cofinsSt' - 'ipi' - 'ipiReturned' - 'ii' - 'iof' 
         */
        "specializedTaxType"?: LegalReasonTaxScope.SpecializedTaxTypeEnum;

        /**
         * Types of jurisdiction - 'NONE' - 'City' - 'State' - 'Country' 
         */
        "jurisdictionType": LegalReasonTaxScope.JurisdictionTypeEnum;

        /**
         * Code to identify the Jurisdiction
         */
        "jurisdictionIbgeCode"?: string;

    }

    export namespace LegalReasonTaxScope {
        export enum TaxTypeEnum {
            NONE = <any> 'NONE',
            INSS = <any> 'INSS',
            IRRF = <any> 'IRRF',
            IRPJ = <any> 'IRPJ',
            PIS = <any> 'PIS',
            COFINS = <any> 'COFINS',
            CSLL = <any> 'CSLL',
            IPI = <any> 'IPI',
            ICMS = <any> 'ICMS',
            II = <any> 'II',
            IOF = <any> 'IOF',
            ISS = <any> 'ISS',
            APROXTOTALTAX = <any> 'APROXTOTALTAX'
        }
        export enum SpecializedTaxTypeEnum {
            Icms = <any> 'icms',
            IcmsSt = <any> 'icmsSt',
            IcmsStSd = <any> 'icmsStSd',
            IcmsPartOwn = <any> 'icmsPartOwn',
            IcmsPartDest = <any> 'icmsPartDest',
            IcmsDifaFCP = <any> 'icmsDifaFCP',
            IcmsDifaDest = <any> 'icmsDifaDest',
            IcmsDifaRemet = <any> 'icmsDifaRemet',
            IcmsRf = <any> 'icmsRf',
            IcmsDeson = <any> 'icmsDeson',
            IcmsCredsn = <any> 'icmsCredsn',
            Pis = <any> 'pis',
            PisSt = <any> 'pisSt',
            Cofins = <any> 'cofins',
            CofinsSt = <any> 'cofinsSt',
            Ipi = <any> 'ipi',
            IpiReturned = <any> 'ipiReturned',
            Ii = <any> 'ii',
            Iof = <any> 'iof'
        }
        export enum JurisdictionTypeEnum {
            NONE = <any> 'NONE',
            City = <any> 'City',
            State = <any> 'State',
            Country = <any> 'Country'
        }
    }
}
