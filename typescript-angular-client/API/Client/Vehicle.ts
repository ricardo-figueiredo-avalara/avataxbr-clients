/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/// <reference path="api.d.ts" />

namespace API.Client {
    'use strict';

    export interface Vehicle {
        /**
         * - 1 # Sales by car dealership - 2 # Direct billing - 3 # Direct sales - 0 # Other 
         */
        "tpOp": number;

        "chassisNumber": string;

        /**
         * color code used by factory
         */
        "colorCode": string;

        /**
         * color name
         */
        "colorName": string;

        /**
         * Power using CV unid
         */
        "cvPower": string;

        /**
         * engine size in cubic centimeters
         */
        "cylinderVolumCC": string;

        /**
         * net weight
         */
        "netWeight": string;

        /**
         * gross weight
         */
        "grossWeight": string;

        /**
         * serie
         */
        "serialNumber": string;

        /**
         * - '01' # Alcohol - '02' # Gas - '03' # Diesel - '16' # Alcohol/Gas - '17' # Gas/Alcohol/GNV - '18' # Gas/Electric 
         */
        "fuelType": Vehicle.FuelTypeEnum;

        /**
         * engine number
         */
        "engineNumber": string;

        /**
         * traction capacity, tonne
         */
        "cmt": string;

        /**
         * length between axis
         */
        "lengthBetweenAxis": string;

        /**
         * model year
         */
        "modelYear": string;

        /**
         * year of factory
         */
        "manufactoryYear": string;

        /**
         * paynt type
         */
        "paintType": string;

        "vehicleRENAVAMType": string;

        "specieRENAVAMType": string;

        "modelRENAVAMCode": string;

        /**
         * - '01' # YELLOW - '02' # BLUE - '03' # BEIGE - '04' # WHITE - '05' # GRAY - '06' # GOLDEN - '07' # GRENA - '08' # ORANGE - '09' # BROWN - '10' # SILVER - '11' # BLACK - '12' # PINK - '13' # PURPLE - '14' # GREEN - '15' # RED - '16' # FANTASY 
         */
        "colorDENATRANCode": Vehicle.ColorDENATRANCodeEnum;

        /**
         * chassis condition original or modified (remarcado)
         */
        "vin": Vehicle.VinEnum;

        /**
         * - '1' # Finished(Done) - '2' # Not finished - '3' # Semi-finished 
         */
        "vehicleManufactoryStatus": Vehicle.VehicleManufactoryStatusEnum;

        /**
         * max number of sit occupants
         */
        "maxOccupantsQuantity": string;

        /**
         * Lien/restriction type - '0' # No one; - '1' # Alienação Fiduciária; - '2' # Arrendamento Mercantil; - '3' # Reserva de Domínio; - '4' # Penhor de Veículos; - '9' # Other. 
         */
        "restrictionType": Vehicle.RestrictionTypeEnum;

    }

    export namespace Vehicle {
        export enum FuelTypeEnum {
            _01 = <any> '01',
            _02 = <any> '02',
            _03 = <any> '03',
            _16 = <any> '16',
            _17 = <any> '17',
            _18 = <any> '18'
        }
        export enum ColorDENATRANCodeEnum {
            _01 = <any> '01',
            _02 = <any> '02',
            _03 = <any> '03',
            _04 = <any> '04',
            _05 = <any> '05',
            _06 = <any> '06',
            _07 = <any> '07',
            _08 = <any> '08',
            _09 = <any> '09',
            _10 = <any> '10',
            _11 = <any> '11',
            _12 = <any> '12',
            _13 = <any> '13',
            _14 = <any> '14',
            _15 = <any> '15',
            _16 = <any> '16'
        }
        export enum VinEnum {
            R = <any> 'R',
            N = <any> 'N'
        }
        export enum VehicleManufactoryStatusEnum {
            _1 = <any> '1',
            _2 = <any> '2',
            _3 = <any> '3'
        }
        export enum RestrictionTypeEnum {
            _0 = <any> '0',
            _1 = <any> '1',
            _2 = <any> '2',
            _3 = <any> '3',
            _4 = <any> '4',
            _9 = <any> '9'
        }
    }
}
