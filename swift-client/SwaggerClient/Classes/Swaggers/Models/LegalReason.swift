//
// LegalReason.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Legal Reason (Fundamentação Legal): - &#39;name&#39; - &#39;description&#39; - &#39;scope&#39;  */
public class LegalReason: JSONEncodable {
    public enum Scope: String { 
        case General = "general"
        case Linkedto = "linkedTo"
    }
    public enum ShowInInvoice: String { 
        case Complementaryinfomessage = "complementaryInfoMessage"
        case Fiscalinfomessage = "fiscalInfoMessage"
        case Iteminfomessage = "itemInfoMessage"
    }
    /** Internal ID */
    public var id: String?
    /** Message scope. May be one of these. general - This message is not linked to any entity (agast/process/cfop) and will be applied to any item in a transacition. (Esta mensagem tem escopo geral, nao está relacionadas diretamente qualquer objeto.); linkedTo - This message is linked to an entity, and its processing will only occur when the context involves it. (Esta mensagens estão relacionadas diretamente a algum objeto como um AGAST por exemplo, um Processo ou uma CFOP.);  */
    public var scope: Scope?
    /** Set this message as no longer valid */
    public var disable: Bool?
    /** Legal reason textual description; */
    public var description: String?
    /** Short name to this message */
    public var name: String?
    /** this field inform the official code number */
    public var legalCode: String?
    /** Optional. Show this message when used in Invoice (NFe, NFCe, others...). Where to show this. */
    public var showInInvoice: ShowInInvoice?
    /** Referenced Process */
    public var referencedProcesses: [LegalReasonReferencedProcesses]?
    public var taxScope: LegalReasonTaxScope?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["id"] = self.id
        nillableDictionary["scope"] = self.scope?.rawValue
        nillableDictionary["disable"] = self.disable
        nillableDictionary["description"] = self.description
        nillableDictionary["name"] = self.name
        nillableDictionary["legalCode"] = self.legalCode
        nillableDictionary["showInInvoice"] = self.showInInvoice?.rawValue
        nillableDictionary["referencedProcesses"] = self.referencedProcesses?.encodeToJSON()
        nillableDictionary["taxScope"] = self.taxScope?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
