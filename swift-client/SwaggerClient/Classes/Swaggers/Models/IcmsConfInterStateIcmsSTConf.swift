//
// IcmsConfInterStateIcmsSTConf.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class IcmsConfInterStateIcmsSTConf: JSONEncodable {
    public enum ProtocolType: String { 
        case Covenant = "COVENANT"
        case Protocol = "PROTOCOL"
        case Nothing = "NOTHING"
    }
    public enum CalcMode: String { 
        case Bymvarate = "BYMVARATE"
        case Srp = "SRP"
        case Msrp = "MSRP"
    }
    public var protocolType: ProtocolType?
    /** inform that substituted is tax regime Simplified the operation MVA will be reduced */
    public var hasReductionOfMVAForSimples: Bool?
    /** MVA reduction when substituted is tax regime Simplified. */
    public var reductionOfMVAForSimples: Double?
    /** how this ICMS-ST will be calculed for itens linked to this configuration */
    public var calcMode: CalcMode?
    /** ICMS rate - Redução da BC ICMS ST (%) */
    public var icmsStBaseDiscount: Double?
    /** ICMS-ST MVA rate to define calc base */
    public var mvaRate: Double?
    /** SRP or MSRP amount base for this ICMS-ST configuration */
    public var srp: Double?
    /** unit used to SRP amount value */
    public var srpUnit: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["protocolType"] = self.protocolType?.rawValue
        nillableDictionary["hasReductionOfMVAForSimples"] = self.hasReductionOfMVAForSimples
        nillableDictionary["reductionOfMVAForSimples"] = self.reductionOfMVAForSimples
        nillableDictionary["calcMode"] = self.calcMode?.rawValue
        nillableDictionary["icmsStBaseDiscount"] = self.icmsStBaseDiscount
        nillableDictionary["mvaRate"] = self.mvaRate
        nillableDictionary["srp"] = self.srp
        nillableDictionary["srpUnit"] = self.srpUnit
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
