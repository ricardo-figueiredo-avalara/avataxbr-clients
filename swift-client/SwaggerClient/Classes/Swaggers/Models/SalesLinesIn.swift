//
// SalesLinesIn.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class SalesLinesIn: JSONEncodable {
    /** This string is a unique identifier for this line in the transaction */
    public var lineCode: Int32?
    /** This string is a code maintained by the client application to uniquely identify a product or service. It will likely be a SKU and is required for SST states. */
    public var itemCode: String?
    /** This decimal captures the number of individual items or units represented by this line. Digits after the decimal point are optional. This should always be positive. Quantity, default 1 */
    public var numberOfItems: Double?
    /** This decimal captures the total cost of this line. In its simplest form lineAmount &#x3D; (item price * numberOfItems). */
    public var lineAmount: Double?
    /** This string captures the description of the item represented by this line, will be used LC 116 */
    public var itemDescription: String?
    /** Conditional discount */
    public var lineTaxedDiscount: Double?
    /** Unconditional discount */
    public var lineUntaxedDiscount: Double?
    public var taxDeductions: SalesLinesInTaxDeductions?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["lineCode"] = self.lineCode?.encodeToJSON()
        nillableDictionary["itemCode"] = self.itemCode
        nillableDictionary["numberOfItems"] = self.numberOfItems
        nillableDictionary["lineAmount"] = self.lineAmount
        nillableDictionary["itemDescription"] = self.itemDescription
        nillableDictionary["lineTaxedDiscount"] = self.lineTaxedDiscount
        nillableDictionary["lineUntaxedDiscount"] = self.lineUntaxedDiscount
        nillableDictionary["taxDeductions"] = self.taxDeductions?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
