//
// LegalReasonTaxScope.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Filter this message application to specified tax cases. - taxtype - jurisdictionType  */
public class LegalReasonTaxScope: JSONEncodable {
    public enum TaxType: String { 
        case None = "NONE"
        case Inss = "INSS"
        case Irrf = "IRRF"
        case Irpj = "IRPJ"
        case Pis = "PIS"
        case Cofins = "COFINS"
        case Csll = "CSLL"
        case Ipi = "IPI"
        case Icms = "ICMS"
        case Ii = "II"
        case Iof = "IOF"
        case Iss = "ISS"
        case Aproxtotaltax = "APROXTOTALTAX"
    }
    public enum SpecializedTaxType: String { 
        case Icms = "icms"
        case Icmsst = "icmsSt"
        case Icmsstsd = "icmsStSd"
        case Icmspartown = "icmsPartOwn"
        case Icmspartdest = "icmsPartDest"
        case Icmsdifafcp = "icmsDifaFCP"
        case Icmsdifadest = "icmsDifaDest"
        case Icmsdifaremet = "icmsDifaRemet"
        case Icmsrf = "icmsRf"
        case Icmsdeson = "icmsDeson"
        case Icmscredsn = "icmsCredsn"
        case Pis = "pis"
        case Pisst = "pisSt"
        case Cofins = "cofins"
        case Cofinsst = "cofinsSt"
        case Ipi = "ipi"
        case Ipireturned = "ipiReturned"
        case Ii = "ii"
        case Iof = "iof"
    }
    public enum JurisdictionType: String { 
        case None = "NONE"
        case City = "City"
        case State = "State"
        case Country = "Country"
    }
    /** This is the Tax Type to apply legal messages. - &#39;NONE&#39; - &#39;INSS&#39; - &#39;IRRF&#39; - &#39;IRPJ&#39; - &#39;PIS&#39; - &#39;COFINS&#39; - &#39;CSLL&#39; - &#39;IPI&#39; - &#39;ICMS&#39; - &#39;II&#39; - &#39;IOF&#39; - &#39;ISS&#39; - &#39;APROXTOTALTAX&#39;  */
    public var taxType: TaxType?
    /** These are the specific tax types to which a message may be applied - &#39;icms&#39; - &#39;icmsSt&#39; - &#39;icmsStSd&#39; - &#39;icmsPartOwn&#39; - &#39;icmsPartDest&#39; - &#39;icmsDifaFCP&#39; - &#39;icmsDifaDest&#39; - &#39;icmsDifaRemet&#39; - &#39;icmsRf&#39; - &#39;icmsDeson&#39; - &#39;icmsCredsn&#39; - &#39;pis&#39; - &#39;pisSt&#39; - &#39;cofins&#39; - &#39;cofinsSt&#39; - &#39;ipi&#39; - &#39;ipiReturned&#39; - &#39;ii&#39; - &#39;iof&#39;  */
    public var specializedTaxType: SpecializedTaxType?
    /** Types of jurisdiction - &#39;NONE&#39; - &#39;City&#39; - &#39;State&#39; - &#39;Country&#39;  */
    public var jurisdictionType: JurisdictionType?
    /** Code to identify the Jurisdiction */
    public var jurisdictionIbgeCode: String?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["taxType"] = self.taxType?.rawValue
        nillableDictionary["specializedTaxType"] = self.specializedTaxType?.rawValue
        nillableDictionary["jurisdictionType"] = self.jurisdictionType?.rawValue
        nillableDictionary["jurisdictionIbgeCode"] = self.jurisdictionIbgeCode
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
