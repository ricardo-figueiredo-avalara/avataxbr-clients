//
// PurchaseEntity.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class PurchaseEntity: JSONEncodable {
    /** Legal Name of Service buyer. */
    public var name: String?
    public var type: EntityType?
    /** Entity Email */
    public var email: String?
    /** CNPJ/CPF of Sales Buyer. If CPF, pattern is &#39;[0-9]{11}&#39; if CNPJ, pattern is &#39;[0-9]{14}&#39; */
    public var cnpjcpf: String?
    /** City Tax ID */
    public var cityTaxId: String?
    /** State Tax ID */
    public var stateTaxId: String?
    /** Suframa ID */
    public var suframa: String?
    /** Entity Phone */
    public var phone: String?
    public var taxRegime: FederalTaxRegime?
    /** Some cities require PURCHASE.Buyers to withhold ISS (City Tax) from PURCHASE.Sellers stablished in different cities. In case the PURCHASE.Seller has acquired a Tax Registration in this destination city, by providing this information in the service invoice, this withholding obligation is lifted. */
    public var hasCpom: Bool?
    /** These are the federal taxes attributes that determine whether withholding of taxes should take place. In special cases where the PURCHASE.Seller is exempt of one or more of these taxes the withholding follows the same rules. The Business type may also dictate these rules as well. */
    public var subjectWithholdingIrrf: Bool?
    /** The INSS contribution is capped at a maximum limit (amount of actual retired payment available in the country).  Individuals sellers subject to INSS withholding can provide the amount already tax by other transactions (with the same buyer or different ones) to deduct to the tax basis. This amount is to be provided to the Seller in a form of a signed document. */
    public var inssPreviousContrib: Double?
    /** The INSS contribution is applicable only to the labor amount in a service contract.  There are several items that may be deducted from the service invoice total to arrive at the INSS taxable amount. This amount is to be provided to the Seller in the body of the Invoice or calculated during the transaction input. */
    public var inssBasisDiscount: Double?
    /** When Seller is Simples regime, the seller needs send RF rate. */
    public var issRfRate: Double?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["name"] = self.name
        nillableDictionary["type"] = self.type?.encodeToJSON()
        nillableDictionary["email"] = self.email
        nillableDictionary["cnpjcpf"] = self.cnpjcpf
        nillableDictionary["cityTaxId"] = self.cityTaxId
        nillableDictionary["stateTaxId"] = self.stateTaxId
        nillableDictionary["suframa"] = self.suframa
        nillableDictionary["phone"] = self.phone
        nillableDictionary["taxRegime"] = self.taxRegime?.encodeToJSON()
        nillableDictionary["hasCpom"] = self.hasCpom
        nillableDictionary["subjectWithholdingIrrf"] = self.subjectWithholdingIrrf
        nillableDictionary["inssPreviousContrib"] = self.inssPreviousContrib
        nillableDictionary["inssBasisDiscount"] = self.inssBasisDiscount
        nillableDictionary["issRfRate"] = self.issRfRate
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
