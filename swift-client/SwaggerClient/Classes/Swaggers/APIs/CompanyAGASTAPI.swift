//
// CompanyAGASTAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class CompanyAGASTAPI: APIBase {
    /**

     - parameter companyId: (path) Company ID 
     - parameter code: (path) Agast Code 
     - parameter parent: (query) Agast parent code, means that this agast is a specialization of parent agast  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func companiesCompanyIdAgastsCodeGet(companyId companyId: NSUUID, code: String, parent: String? = nil, completion: ((data: CustomAgast?, error: ErrorType?) -> Void)) {
        companiesCompanyIdAgastsCodeGetWithRequestBuilder(companyId: companyId, code: code, parent: parent).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /companies/{companyId}/agasts/{code}
     - This operation return custom agast configurations that match with parameters queries - Alannes. 
     - examples: [{contentType=application/json, example=""}]
     
     - parameter companyId: (path) Company ID 
     - parameter code: (path) Agast Code 
     - parameter parent: (query) Agast parent code, means that this agast is a specialization of parent agast  (optional)

     - returns: RequestBuilder<CustomAgast> 
     */
    public class func companiesCompanyIdAgastsCodeGetWithRequestBuilder(companyId companyId: NSUUID, code: String, parent: String? = nil) -> RequestBuilder<CustomAgast> {
        var path = "/companies/{companyId}/agasts/{code}"
        path = path.stringByReplacingOccurrencesOfString("{companyId}", withString: "\(companyId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{code}", withString: "\(code)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "parent": parent
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<CustomAgast>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter companyId: (path) Company ID 
     - parameter text: (query) Text query (optional)
     - parameter agast: (query) Custom Agast Code (optional)
     - parameter parent: (query) Agast Code (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func companiesCompanyIdAgastsGet(companyId companyId: NSUUID, text: String? = nil, agast: String? = nil, parent: String? = nil, completion: ((data: [InlineResponse2001]?, error: ErrorType?) -> Void)) {
        companiesCompanyIdAgastsGetWithRequestBuilder(companyId: companyId, text: text, agast: agast, parent: parent).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /companies/{companyId}/agasts
     - This operation return custom agast configurations that match with parameters queries 
     - examples: [{contentType=application/json, example=[ {
  "code" : "aeiou",
  "description" : "aeiou",
  "id" : "aeiou"
} ]}]
     
     - parameter companyId: (path) Company ID 
     - parameter text: (query) Text query (optional)
     - parameter agast: (query) Custom Agast Code (optional)
     - parameter parent: (query) Agast Code (optional)

     - returns: RequestBuilder<[InlineResponse2001]> 
     */
    public class func companiesCompanyIdAgastsGetWithRequestBuilder(companyId companyId: NSUUID, text: String? = nil, agast: String? = nil, parent: String? = nil) -> RequestBuilder<[InlineResponse2001]> {
        var path = "/companies/{companyId}/agasts"
        path = path.stringByReplacingOccurrencesOfString("{companyId}", withString: "\(companyId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "text": text,
            "agast": agast,
            "parent": parent
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[InlineResponse2001]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Create custom agast for one company
     
     - parameter companyId: (path) Company ID 
     - parameter body: (body) Transaction Message 
     - parameter text: (query) Text query (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createCustomAgast(companyId companyId: NSUUID, body: CustomAgast, text: String? = nil, completion: ((data: InlineResponse201?, error: ErrorType?) -> Void)) {
        createCustomAgastWithRequestBuilder(companyId: companyId, body: body, text: text).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Create custom agast for one company
     - POST /companies/{companyId}/agasts
     - This method operation create a custom agast for one company 
     - examples: [{contentType=application/json, example={
  "id" : 123
}}]
     
     - parameter companyId: (path) Company ID 
     - parameter body: (body) Transaction Message 
     - parameter text: (query) Text query (optional)

     - returns: RequestBuilder<InlineResponse201> 
     */
    public class func createCustomAgastWithRequestBuilder(companyId companyId: NSUUID, body: CustomAgast, text: String? = nil) -> RequestBuilder<InlineResponse201> {
        var path = "/companies/{companyId}/agasts"
        path = path.stringByReplacingOccurrencesOfString("{companyId}", withString: "\(companyId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse201>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter companyId: (path) Company ID 
     - parameter code: (path) Agast Code 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteAgast(companyId companyId: NSUUID, code: String, completion: ((error: ErrorType?) -> Void)) {
        deleteAgastWithRequestBuilder(companyId: companyId, code: code).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     - DELETE /companies/{companyId}/agasts/{code}
     
     - parameter companyId: (path) Company ID 
     - parameter code: (path) Agast Code 

     - returns: RequestBuilder<Void> 
     */
    public class func deleteAgastWithRequestBuilder(companyId companyId: NSUUID, code: String) -> RequestBuilder<Void> {
        var path = "/companies/{companyId}/agasts/{code}"
        path = path.stringByReplacingOccurrencesOfString("{companyId}", withString: "\(companyId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{code}", withString: "\(code)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update custom agast for one company
     
     - parameter companyId: (path) Company ID 
     - parameter code: (path) Agast Code 
     - parameter body: (body) Transaction Message 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateCustomAgast(companyId companyId: NSUUID, code: String, body: CustomAgast, completion: ((error: ErrorType?) -> Void)) {
        updateCustomAgastWithRequestBuilder(companyId: companyId, code: code, body: body).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Update custom agast for one company
     - PUT /companies/{companyId}/agasts/{code}
     - This method operation create a custom agast for one company 
     
     - parameter companyId: (path) Company ID 
     - parameter code: (path) Agast Code 
     - parameter body: (body) Transaction Message 

     - returns: RequestBuilder<Void> 
     */
    public class func updateCustomAgastWithRequestBuilder(companyId companyId: NSUUID, code: String, body: CustomAgast) -> RequestBuilder<Void> {
        var path = "/companies/{companyId}/agasts/{code}"
        path = path.stringByReplacingOccurrencesOfString("{companyId}", withString: "\(companyId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{code}", withString: "\(code)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
