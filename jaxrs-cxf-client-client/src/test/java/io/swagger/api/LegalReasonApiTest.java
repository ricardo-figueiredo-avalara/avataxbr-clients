/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.api;

import io.swagger.model.InlineResponse201;
import io.swagger.model.LegalReason;
import io.swagger.model.ProcessScenario;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * API tests for LegalReasonApi
 */
public class LegalReasonApiTest {


    private LegalReasonApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("http://avataxbr-sandbox.avalarabrasil.com.br/v2", LegalReasonApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * Create Legal Reason.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createReason_Test() {
        LegalReason body = null;
	//InlineResponse201 response = api.createReason_(body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Delete a Legal Reason entry.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteReason_Test() {
        String uuid = null;
	// response = api.deleteReason_(uuid);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Get single Legal Reason.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReason_Test() {
        String uuid = null;
	//ProcessScenario response = api.getReason_(uuid);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * List Legal Reasons.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listReasonTest() {
        String companyId = null;
	//List<List<LegalReason>> response = api.listReason(companyId);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Update Legal Reason.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateReason_Test() {
        LegalReason body = null;
	// response = api.updateReason_(body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
}
