/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.api;

import io.swagger.model.CustomAgast;
import io.swagger.model.InlineResponse2001;
import io.swagger.model.InlineResponse201;
import io.swagger.model.Message;
import io.swagger.model.ValidationError;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * API tests for CompanyAGASTApi
 */
public class CompanyAGASTApiTest {


    private CompanyAGASTApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://br16-dev-app03.br.avalara.com/v2", CompanyAGASTApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * 
     *
     * This operation return custom agast configurations that match with parameters queries - Alannes. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void companiesCompanyIdAgastsCodeGetTest() {
        String companyId = null;
        String code = null;
        String parent = null;
	//CustomAgast response = api.companiesCompanyIdAgastsCodeGet(companyId, code, parent);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * This operation return custom agast configurations that match with parameters queries 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void companiesCompanyIdAgastsGetTest() {
        String companyId = null;
        String text = null;
        Integer xPaginationLimit = null;
        Integer xPaginationCurrentPage = null;
        String xPaginationSort = null;
        String agast = null;
        String parent = null;
	//List<List<InlineResponse2001>> response = api.companiesCompanyIdAgastsGet(companyId, text, xPaginationLimit, xPaginationCurrentPage, xPaginationSort, agast, parent);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Create custom agast for one company
     *
     * This method operation create a custom agast for one company 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCustomAgastTest() {
        String companyId = null;
        CustomAgast body = null;
        String text = null;
	//InlineResponse201 response = api.createCustomAgast(companyId, body, text);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAgastTest() {
        String companyId = null;
        String code = null;
	// response = api.deleteAgast(companyId, code);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Update custom agast for one company
     *
     * This method operation create a custom agast for one company 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCustomAgastTest() {
        String companyId = null;
        String code = null;
        CustomAgast body = null;
	// response = api.updateCustomAgast(companyId, code, body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
}
