/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.api;

import io.swagger.model.Company;
import io.swagger.model.Message;
import io.swagger.model.ValidationError;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * API tests for CompanyApi
 */
public class CompanyApiTest {


    private CompanyApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://br16-dev-app03.br.avalara.com/v2", CompanyApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * Retrieve Companies by account
     *
     * Retrieve list companies of one account
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void companiesGetTest() {
	//List<List<Company>> response = api.companiesGet();
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Create company and your data configuration
     *
     * This method operation create a company for a account 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCompanyTest() {
        Company body = null;
	//Company response = api.createCompany(body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAccountCompanyTest() {
        String accountId = null;
        String companyId = null;
	// response = api.deleteAccountCompany(accountId, companyId);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCompanyTest() {
        String companyId = null;
        String companyId2 = null;
	// response = api.deleteCompany(companyId, companyId2);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Get company information and your data configuration
     *
     * This method operation get a company for a account 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void infoCompanyTest() {
        String companyId = null;
	//Company response = api.infoCompany(companyId);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * Update company information and your data configuration
     *
     * This method operation create a company for a account 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCompanyTest() {
        String companyId = null;
        Company body = null;
	// response = api.updateCompany(companyId, body);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
}
