/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Br16Api);
  }
}(this, function(expect, Br16Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Br16Api.TaxTypeRateWithholding();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TaxTypeRateWithholding', function() {
    it('should create an instance of TaxTypeRateWithholding', function() {
      // uncomment below and update the code to test TaxTypeRateWithholding
      //var instane = new Br16Api.TaxTypeRateWithholding();
      //expect(instance).to.be.a(Br16Api.TaxTypeRateWithholding);
    });

    it('should have the property all (base name: "all")', function() {
      // uncomment below and update the code to test the property all
      //var instane = new Br16Api.TaxTypeRateWithholding();
      //expect(instance).to.be();
    });

    it('should have the property business (base name: "business")', function() {
      // uncomment below and update the code to test the property business
      //var instane = new Br16Api.TaxTypeRateWithholding();
      //expect(instance).to.be();
    });

    it('should have the property federalGovernment (base name: "federalGovernment")', function() {
      // uncomment below and update the code to test the property federalGovernment
      //var instane = new Br16Api.TaxTypeRateWithholding();
      //expect(instance).to.be();
    });

    it('should have the property stateGovernment (base name: "stateGovernment")', function() {
      // uncomment below and update the code to test the property stateGovernment
      //var instane = new Br16Api.TaxTypeRateWithholding();
      //expect(instance).to.be();
    });

    it('should have the property cityGovernment (base name: "cityGovernment")', function() {
      // uncomment below and update the code to test the property cityGovernment
      //var instane = new Br16Api.TaxTypeRateWithholding();
      //expect(instance).to.be();
    });

  });

}));
