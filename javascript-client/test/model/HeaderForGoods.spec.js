/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Br16Api);
  }
}(this, function(expect, Br16Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Br16Api.HeaderForGoods();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('HeaderForGoods', function() {
    it('should create an instance of HeaderForGoods', function() {
      // uncomment below and update the code to test HeaderForGoods
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be.a(Br16Api.HeaderForGoods);
    });

    it('should have the property messageType (base name: "messageType")', function() {
      // uncomment below and update the code to test the property messageType
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property companyCode (base name: "companyCode")', function() {
      // uncomment below and update the code to test the property companyCode
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property documentCode (base name: "documentCode")', function() {
      // uncomment below and update the code to test the property documentCode
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property participants (base name: "participants")', function() {
      // uncomment below and update the code to test the property participants
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property nfAccessKey (base name: "nfAccessKey")', function() {
      // uncomment below and update the code to test the property nfAccessKey
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property nfceQrCode (base name: "nfceQrCode")', function() {
      // uncomment below and update the code to test the property nfceQrCode
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property transactionType (base name: "transactionType")', function() {
      // uncomment below and update the code to test the property transactionType
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property transactionModel (base name: "transactionModel")', function() {
      // uncomment below and update the code to test the property transactionModel
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property transactionClass (base name: "transactionClass")', function() {
      // uncomment below and update the code to test the property transactionClass
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property eDocCreatorType (base name: "eDocCreatorType")', function() {
      // uncomment below and update the code to test the property eDocCreatorType
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property eDocCreatorPerspective (base name: "eDocCreatorPerspective")', function() {
      // uncomment below and update the code to test the property eDocCreatorPerspective
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property entityCode (base name: "entityCode")', function() {
      // uncomment below and update the code to test the property entityCode
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property companyLocation (base name: "companyLocation")', function() {
      // uncomment below and update the code to test the property companyLocation
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property transactionDate (base name: "transactionDate")', function() {
      // uncomment below and update the code to test the property transactionDate
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property shippingDate (base name: "shippingDate")', function() {
      // uncomment below and update the code to test the property shippingDate
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property additionalInfo (base name: "additionalInfo")', function() {
      // uncomment below and update the code to test the property additionalInfo
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property tpImp (base name: "tpImp")', function() {
      // uncomment below and update the code to test the property tpImp
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property idDest (base name: "idDest")', function() {
      // uncomment below and update the code to test the property idDest
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property indPres (base name: "indPres")', function() {
      // uncomment below and update the code to test the property indPres
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property invoiceNumber (base name: "invoiceNumber")', function() {
      // uncomment below and update the code to test the property invoiceNumber
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property invoiceSerial (base name: "invoiceSerial")', function() {
      // uncomment below and update the code to test the property invoiceSerial
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property defaultLocations (base name: "defaultLocations")', function() {
      // uncomment below and update the code to test the property defaultLocations
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property transport (base name: "transport")', function() {
      // uncomment below and update the code to test the property transport
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property nfRef (base name: "nfRef")', function() {
      // uncomment below and update the code to test the property nfRef
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property payment (base name: "payment")', function() {
      // uncomment below and update the code to test the property payment
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property purchaseInfo (base name: "purchaseInfo")', function() {
      // uncomment below and update the code to test the property purchaseInfo
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

    it('should have the property _export (base name: "export")', function() {
      // uncomment below and update the code to test the property _export
      //var instane = new Br16Api.HeaderForGoods();
      //expect(instance).to.be();
    });

  });

}));
