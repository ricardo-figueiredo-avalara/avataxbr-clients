/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Br16Api);
  }
}(this, function(expect, Br16Api) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Br16Api.TaxConfICMSApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TaxConfICMSApi', function() {
    describe('createIcmsconfstate', function() {
      it('should call createIcmsconfstate successfully', function(done) {
        //uncomment below and update the code to test createIcmsconfstate
        //instance.createIcmsconfstate(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteIcmsConf', function() {
      it('should call deleteIcmsConf successfully', function(done) {
        //uncomment below and update the code to test deleteIcmsConf
        //instance.deleteIcmsConf(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIcmsConfByState', function() {
      it('should call getIcmsConfByState successfully', function(done) {
        //uncomment below and update the code to test getIcmsConfByState
        //instance.getIcmsConfByState(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIcmsList', function() {
      it('should call getIcmsList successfully', function(done) {
        //uncomment below and update the code to test getIcmsList
        //instance.getIcmsList(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIcmsList_0', function() {
      it('should call getIcmsList_0 successfully', function(done) {
        //uncomment below and update the code to test getIcmsList_0
        //instance.getIcmsList_0(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateIcmsconfstate', function() {
      it('should call updateIcmsconfstate successfully', function(done) {
        //uncomment below and update the code to test updateIcmsconfstate
        //instance.updateIcmsconfstate(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
