/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PayRecLinesIn'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PayRecLinesIn'));
  } else {
    // Browser globals (root is window)
    if (!root.AvaTaxBrazil) {
      root.AvaTaxBrazil = {};
    }
    root.AvaTaxBrazil.PaymentLinesIn = factory(root.AvaTaxBrazil.ApiClient, root.AvaTaxBrazil.PayRecLinesIn);
  }
}(this, function(ApiClient, PayRecLinesIn) {
  'use strict';




  /**
   * The PaymentLinesIn model module.
   * @module model/PaymentLinesIn
   * @version 1.0
   */

  /**
   * Constructs a new <code>PaymentLinesIn</code>.
   * @alias module:model/PaymentLinesIn
   * @class
   * @implements module:model/PayRecLinesIn
   * @param itemCode {String} Bill transaction code This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc.
   */
  var exports = function(itemCode) {
    var _this = this;

    PayRecLinesIn.call(_this, itemCode);

  };

  /**
   * Constructs a <code>PaymentLinesIn</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentLinesIn} obj Optional instance to populate.
   * @return {module:model/PaymentLinesIn} The populated <code>PaymentLinesIn</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      PayRecLinesIn.constructFromObject(data, obj);
      if (data.hasOwnProperty('lineNetValue')) {
        obj['lineNetValue'] = ApiClient.convertToType(data['lineNetValue'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Net value, the net Value is Gross value plus penalty minus sum of discount and withhold taxes
   * @member {Number} lineNetValue
   */
  exports.prototype['lineNetValue'] = undefined;

  // Implement PayRecLinesIn interface:
  /**
   * Installment number in this document
   * @member {Number} lineCode
   */
exports.prototype['lineCode'] = undefined;

  /**
   * @member {module:model/PayRecLinesIn.LineTypeEnum} lineType
   */
exports.prototype['lineType'] = undefined;

  /**
   * Bill transaction code This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc.
   * @member {String} itemCode
   */
exports.prototype['itemCode'] = undefined;

  /**
   * Free description about this payment
   * @member {String} itemDescription
   */
exports.prototype['itemDescription'] = undefined;

  /**
   * Installment number, when paid AS IS
   * @member {String} itemDocNumber
   */
exports.prototype['itemDocNumber'] = undefined;

  /**
   * Penalty, usually because paid after due date
   * @member {Number} lineUntaxedPenality
   */
exports.prototype['lineUntaxedPenality'] = undefined;

  /**
   * unconditional discounts
   * @member {Number} lineUntaxedDiscount
   */
exports.prototype['lineUntaxedDiscount'] = undefined;



  return exports;
}));


