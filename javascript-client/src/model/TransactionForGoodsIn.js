/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/HeaderForGoods', 'model/LineForGoods'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./HeaderForGoods'), require('./LineForGoods'));
  } else {
    // Browser globals (root is window)
    if (!root.AvaTaxBrazil) {
      root.AvaTaxBrazil = {};
    }
    root.AvaTaxBrazil.TransactionForGoodsIn = factory(root.AvaTaxBrazil.ApiClient, root.AvaTaxBrazil.HeaderForGoods, root.AvaTaxBrazil.LineForGoods);
  }
}(this, function(ApiClient, HeaderForGoods, LineForGoods) {
  'use strict';




  /**
   * The TransactionForGoodsIn model module.
   * @module model/TransactionForGoodsIn
   * @version 1.0
   */

  /**
   * Constructs a new <code>TransactionForGoodsIn</code>.
   * @alias module:model/TransactionForGoodsIn
   * @class
   * @param header {module:model/HeaderForGoods} 
   * @param lines {Array.<module:model/LineForGoods>} 
   */
  var exports = function(header, lines) {
    var _this = this;

    _this['header'] = header;
    _this['lines'] = lines;
  };

  /**
   * Constructs a <code>TransactionForGoodsIn</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TransactionForGoodsIn} obj Optional instance to populate.
   * @return {module:model/TransactionForGoodsIn} The populated <code>TransactionForGoodsIn</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('header')) {
        obj['header'] = HeaderForGoods.constructFromObject(data['header']);
      }
      if (data.hasOwnProperty('lines')) {
        obj['lines'] = ApiClient.convertToType(data['lines'], [LineForGoods]);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/HeaderForGoods} header
   */
  exports.prototype['header'] = undefined;
  /**
   * @member {Array.<module:model/LineForGoods>} lines
   */
  exports.prototype['lines'] = undefined;



  return exports;
}));


