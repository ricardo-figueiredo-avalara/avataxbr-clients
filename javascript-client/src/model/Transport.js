/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TransportVolumes', 'model/VehicleTransp'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TransportVolumes'), require('./VehicleTransp'));
  } else {
    // Browser globals (root is window)
    if (!root.AvaTaxBrazil) {
      root.AvaTaxBrazil = {};
    }
    root.AvaTaxBrazil.Transport = factory(root.AvaTaxBrazil.ApiClient, root.AvaTaxBrazil.TransportVolumes, root.AvaTaxBrazil.VehicleTransp);
  }
}(this, function(ApiClient, TransportVolumes, VehicleTransp) {
  'use strict';




  /**
   * The Transport model module.
   * @module model/Transport
   * @version 1.0
   */

  /**
   * Constructs a new <code>Transport</code>.
   * @alias module:model/Transport
   * @class
   * @param modFreight {module:model/Transport.ModFreightEnum} Freight model  - 0 - CIF,  - 1 - FOB,  - 2 - Thrid party, - 9 - Free shipping when 9 - Free shipping, the fields below will be ignored if present - 'transporter' - 'withholdICMSTransport' - 'volumes' - 'vehicle' 
   */
  var exports = function(modFreight) {
    var _this = this;

    _this['modFreight'] = modFreight;



  };

  /**
   * Constructs a <code>Transport</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Transport} obj Optional instance to populate.
   * @return {module:model/Transport} The populated <code>Transport</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('modFreight')) {
        obj['modFreight'] = ApiClient.convertToType(data['modFreight'], 'String');
      }
      if (data.hasOwnProperty('withholdICMSTransport')) {
        obj['withholdICMSTransport'] = ApiClient.convertToType(data['withholdICMSTransport'], 'Boolean');
      }
      if (data.hasOwnProperty('volumes')) {
        obj['volumes'] = ApiClient.convertToType(data['volumes'], [TransportVolumes]);
      }
      if (data.hasOwnProperty('vehicle')) {
        obj['vehicle'] = VehicleTransp.constructFromObject(data['vehicle']);
      }
    }
    return obj;
  }

  /**
   * Freight model  - 0 - CIF,  - 1 - FOB,  - 2 - Thrid party, - 9 - Free shipping when 9 - Free shipping, the fields below will be ignored if present - 'transporter' - 'withholdICMSTransport' - 'volumes' - 'vehicle' 
   * @member {module:model/Transport.ModFreightEnum} modFreight
   */
  exports.prototype['modFreight'] = undefined;
  /**
   * Forces witholding of ICMS on transport amount (freight)
   * @member {Boolean} withholdICMSTransport
   */
  exports.prototype['withholdICMSTransport'] = undefined;
  /**
   * Packages
   * @member {Array.<module:model/TransportVolumes>} volumes
   */
  exports.prototype['volumes'] = undefined;
  /**
   * @member {module:model/VehicleTransp} vehicle
   */
  exports.prototype['vehicle'] = undefined;


  /**
   * Allowed values for the <code>modFreight</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ModFreightEnum = {
    /**
     * value: "CIF"
     * @const
     */
    "CIF": "CIF",
    /**
     * value: "FOB"
     * @const
     */
    "FOB": "FOB",
    /**
     * value: "Thridparty"
     * @const
     */
    "Thridparty": "Thridparty",
    /**
     * value: "FreeShipping"
     * @const
     */
    "FreeShipping": "FreeShipping"  };


  return exports;
}));


