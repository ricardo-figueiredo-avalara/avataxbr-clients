/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Br16Api) {
      root.Br16Api = {};
    }
    root.Br16Api.PayRecLinesIn = factory(root.Br16Api.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PayRecLinesIn model module.
   * @module model/PayRecLinesIn
   * @version 1.0
   */

  /**
   * Constructs a new <code>PayRecLinesIn</code>.
   * @alias module:model/PayRecLinesIn
   * @class
   * @param itemCode {String} Bill transaction code This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc.
   */
  var exports = function(itemCode) {
    var _this = this;



    _this['itemCode'] = itemCode;




  };

  /**
   * Constructs a <code>PayRecLinesIn</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PayRecLinesIn} obj Optional instance to populate.
   * @return {module:model/PayRecLinesIn} The populated <code>PayRecLinesIn</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('lineCode')) {
        obj['lineCode'] = ApiClient.convertToType(data['lineCode'], 'Number');
      }
      if (data.hasOwnProperty('lineType')) {
        obj['lineType'] = ApiClient.convertToType(data['lineType'], 'String');
      }
      if (data.hasOwnProperty('itemCode')) {
        obj['itemCode'] = ApiClient.convertToType(data['itemCode'], 'String');
      }
      if (data.hasOwnProperty('itemDescription')) {
        obj['itemDescription'] = ApiClient.convertToType(data['itemDescription'], 'String');
      }
      if (data.hasOwnProperty('itemDocNumber')) {
        obj['itemDocNumber'] = ApiClient.convertToType(data['itemDocNumber'], 'String');
      }
      if (data.hasOwnProperty('lineUntaxedPenality')) {
        obj['lineUntaxedPenality'] = ApiClient.convertToType(data['lineUntaxedPenality'], 'Number');
      }
      if (data.hasOwnProperty('lineUntaxedDiscount')) {
        obj['lineUntaxedDiscount'] = ApiClient.convertToType(data['lineUntaxedDiscount'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Installment number in this document
   * @member {Number} lineCode
   */
  exports.prototype['lineCode'] = undefined;
  /**
   * @member {module:model/PayRecLinesIn.LineTypeEnum} lineType
   */
  exports.prototype['lineType'] = undefined;
  /**
   * Bill transaction code This string is a code maintained by the client application to uniquely identify a document in the client's systems. It will typically be an invoice number, sales order, receipt number, returned merchandise authorization number, etc.
   * @member {String} itemCode
   */
  exports.prototype['itemCode'] = undefined;
  /**
   * Free description about this payment
   * @member {String} itemDescription
   */
  exports.prototype['itemDescription'] = undefined;
  /**
   * Installment number, when paid AS IS
   * @member {String} itemDocNumber
   */
  exports.prototype['itemDocNumber'] = undefined;
  /**
   * Penalty, usually because paid after due date
   * @member {Number} lineUntaxedPenality
   */
  exports.prototype['lineUntaxedPenality'] = undefined;
  /**
   * unconditional discounts
   * @member {Number} lineUntaxedDiscount
   */
  exports.prototype['lineUntaxedDiscount'] = undefined;


  /**
   * Allowed values for the <code>lineType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.LineTypeEnum = {
    /**
     * value: "installment"
     * @const
     */
    "installment": "installment"  };


  return exports;
}));


