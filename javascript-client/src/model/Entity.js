/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EntityType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EntityType'));
  } else {
    // Browser globals (root is window)
    if (!root.AvaTaxBrazil) {
      root.AvaTaxBrazil = {};
    }
    root.AvaTaxBrazil.Entity = factory(root.AvaTaxBrazil.ApiClient, root.AvaTaxBrazil.EntityType);
  }
}(this, function(ApiClient, EntityType) {
  'use strict';




  /**
   * The Entity model module.
   * @module model/Entity
   * @version 1.0
   */

  /**
   * Constructs a new <code>Entity</code>.
   * @alias module:model/Entity
   * @class
   * @param type {module:model/EntityType} 
   * @param federalTaxId {String} CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'
   */
  var exports = function(type, federalTaxId) {
    var _this = this;



    _this['type'] = type;
    _this['federalTaxId'] = federalTaxId;








  };

  /**
   * Constructs a <code>Entity</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Entity} obj Optional instance to populate.
   * @return {module:model/Entity} The populated <code>Entity</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('role')) {
        obj['role'] = ApiClient.convertToType(data['role'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = EntityType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('federalTaxId')) {
        obj['federalTaxId'] = ApiClient.convertToType(data['federalTaxId'], 'String');
      }
      if (data.hasOwnProperty('cityTaxId')) {
        obj['cityTaxId'] = ApiClient.convertToType(data['cityTaxId'], 'String');
      }
      if (data.hasOwnProperty('stateTaxId')) {
        obj['stateTaxId'] = ApiClient.convertToType(data['stateTaxId'], 'String');
      }
      if (data.hasOwnProperty('suframa')) {
        obj['suframa'] = ApiClient.convertToType(data['suframa'], 'String');
      }
      if (data.hasOwnProperty('phone')) {
        obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
      }
      if (data.hasOwnProperty('taxRegime')) {
        obj['taxRegime'] = ApiClient.convertToType(data['taxRegime'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('subjectToSRF1234')) {
        obj['subjectToSRF1234'] = ApiClient.convertToType(data['subjectToSRF1234'], 'Boolean');
      }
      if (data.hasOwnProperty('subjectToPayrollExemption')) {
        obj['subjectToPayrollExemption'] = ApiClient.convertToType(data['subjectToPayrollExemption'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * Entity name, official name (Razão Social)
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * - 'transporter' - 'sender' # REMETENTE - 'dispatcher' # EXPEDITOR - 'receiver' # RECEIVER - 'addressee' # DESTINATÁRIO - 'other' # OUTRO 
   * @member {module:model/Entity.RoleEnum} role
   */
  exports.prototype['role'] = undefined;
  /**
   * @member {module:model/EntityType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * CNPJ/CPF of Sales Buyer, if CPF pattern is '[0-9]{11}' if CNPJ pattern is '[0-9]{14}'
   * @member {String} federalTaxId
   */
  exports.prototype['federalTaxId'] = undefined;
  /**
   * City Tax ID
   * @member {String} cityTaxId
   */
  exports.prototype['cityTaxId'] = undefined;
  /**
   * State Tax ID
   * @member {String} stateTaxId
   */
  exports.prototype['stateTaxId'] = undefined;
  /**
   * Suframa ID
   * @member {String} suframa
   */
  exports.prototype['suframa'] = undefined;
  /**
   * Entity Phone
   * @member {String} phone
   */
  exports.prototype['phone'] = undefined;
  /**
   * @member {module:model/Entity.TaxRegimeEnum} taxRegime
   */
  exports.prototype['taxRegime'] = undefined;
  /**
   * Entity Email
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * Companies subject to follow same rules of Government entities (Instrução Normativa SRF1234)
   * @member {Boolean} subjectToSRF1234
   */
  exports.prototype['subjectToSRF1234'] = undefined;
  /**
   * Sujeito à desoneração de folha de pagamento.
   * @member {Boolean} subjectToPayrollExemption
   */
  exports.prototype['subjectToPayrollExemption'] = undefined;


  /**
   * Allowed values for the <code>role</code> property.
   * @enum {String}
   * @readonly
   */
  exports.RoleEnum = {
    /**
     * value: "transporter"
     * @const
     */
    "transporter": "transporter",
    /**
     * value: "sender"
     * @const
     */
    "sender": "sender",
    /**
     * value: "dispatcher"
     * @const
     */
    "dispatcher": "dispatcher",
    /**
     * value: "receiver"
     * @const
     */
    "receiver": "receiver",
    /**
     * value: "addressee"
     * @const
     */
    "addressee": "addressee",
    /**
     * value: "other"
     * @const
     */
    "other": "other"  };

  /**
   * Allowed values for the <code>taxRegime</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TaxRegimeEnum = {
    /**
     * value: "realProfit"
     * @const
     */
    "realProfit": "realProfit",
    /**
     * value: "estimatedProfit"
     * @const
     */
    "estimatedProfit": "estimatedProfit",
    /**
     * value: "simplified"
     * @const
     */
    "simplified": "simplified",
    /**
     * value: "simplifiedOverGrossthreshold"
     * @const
     */
    "simplifiedOverGrossthreshold": "simplifiedOverGrossthreshold",
    /**
     * value: "simplifiedEntrepreneur"
     * @const
     */
    "simplifiedEntrepreneur": "simplifiedEntrepreneur",
    /**
     * value: "notApplicable"
     * @const
     */
    "notApplicable": "notApplicable",
    /**
     * value: "individual"
     * @const
     */
    "individual": "individual"  };


  return exports;
}));


