/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CfopConf', 'model/IcmsTaxConf', 'model/ProcessScenario'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CfopConf'), require('./IcmsTaxConf'), require('./ProcessScenario'));
  } else {
    // Browser globals (root is window)
    if (!root.Br16Api) {
      root.Br16Api = {};
    }
    root.Br16Api.CustomProcessScenario = factory(root.Br16Api.ApiClient, root.Br16Api.CfopConf, root.Br16Api.IcmsTaxConf, root.Br16Api.ProcessScenario);
  }
}(this, function(ApiClient, CfopConf, IcmsTaxConf, ProcessScenario) {
  'use strict';




  /**
   * The CustomProcessScenario model module.
   * @module model/CustomProcessScenario
   * @version 1.0
   */

  /**
   * Constructs a new <code>CustomProcessScenario</code>.
   * @alias module:model/CustomProcessScenario
   * @class
   * @implements module:model/ProcessScenario
   * @param code {String} Process code to Identify this configuration, its is unique by Accounty Id or when standard, its has priority when the code match with the standard code.
   * @param name {String} Process name to Identify this configuration
   * @param companyId {String} Company ID
   */
  var exports = function(code, name, companyId) {
    var _this = this;

    ProcessScenario.call(_this, code, name);
    _this['companyId'] = companyId;
  };

  /**
   * Constructs a <code>CustomProcessScenario</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CustomProcessScenario} obj Optional instance to populate.
   * @return {module:model/CustomProcessScenario} The populated <code>CustomProcessScenario</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      ProcessScenario.constructFromObject(data, obj);
      if (data.hasOwnProperty('companyId')) {
        obj['companyId'] = ApiClient.convertToType(data['companyId'], 'String');
      }
    }
    return obj;
  }

  /**
   * Company ID
   * @member {String} companyId
   */
  exports.prototype['companyId'] = undefined;

  // Implement ProcessScenario interface:
  /**
   * Process code to Identify this configuration, its is unique by Accounty Id or when standard, its has priority when the code match with the standard code.
   * @member {String} code
   */
exports.prototype['code'] = undefined;

  /**
   * Inform that the process has inventory impact.
   * @member {Boolean} stockImpact
   */
exports.prototype['stockImpact'] = undefined;

  /**
   * Inform that the process has financial impact.
   * @member {Boolean} financialImpact
   */
exports.prototype['financialImpact'] = undefined;

  /**
   * Inform if this process is subject to IPI taxation on output process - '50' # Saída Tributada - '51' # Saída Tributável com Alíquota Zero - '52' # Saída Isenta - '53' # Saída Não-Tributada - '54' # Saída Imune 
   * @member {module:model/TaxConf.CstIPIEnum} cstIPI
   */
exports.prototype['cstIPI'] = undefined;

  /**
   * Legal tax classificação for IPI (enquadramento) When the processo has CST IPI 52 or 54, is mandatory inform Reason Code, see Anexo XIV - Código de Enquadramento Legal do IPI from  http://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=mCnJajU4BKU= 
   * @member {String} ipiLegalTaxClass
   */
exports.prototype['ipiLegalTaxClass'] = undefined;

  /**
   * Inform if this item by nature is subject to PIS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE 
   * @member {module:model/TaxConf.AccruablePISTaxationEnum} accruablePISTaxation
   */
exports.prototype['accruablePISTaxation'] = undefined;

  /**
   * When exempt, taxable with zero, suspended, not taxable, this field holds the official code number
   * @member {String} pisExemptLegalReasonCode
   */
exports.prototype['pisExemptLegalReasonCode'] = undefined;

  /**
   * When specifi reason, this field has the description
   * @member {String} pisExemptLegalReason
   */
exports.prototype['pisExemptLegalReason'] = undefined;

  /**
   * Inform if this item by nature is subject to COFINS taxation or exempt - 'T' # TAXABLE - 'Z' # TAXABLE WITH RATE=0.00 - 'E' # EXEMPT - 'H' # SUSPENDED - 'N' # NO TAXABLE 
   * @member {module:model/TaxConf.AccruableCOFINSTaxationEnum} accruableCOFINSTaxation
   */
exports.prototype['accruableCOFINSTaxation'] = undefined;

  /**
   * When exempt, taxable with zero, suspended, not taxable, this field holds the official code number
   * @member {String} cofinsExemptLegalReasonCode
   */
exports.prototype['cofinsExemptLegalReasonCode'] = undefined;

  /**
   * When specifi reason, this field has the description
   * @member {String} cofinsExemptLegalReason
   */
exports.prototype['cofinsExemptLegalReason'] = undefined;

  /**
   * Inform that the process allow IPI credit to Input process
   * @member {Boolean} allowIPIcreditWhenInGoing
   */
exports.prototype['allowIPIcreditWhenInGoing'] = undefined;

  /**
   * the map key is state code
   * @member {Array.<module:model/IcmsTaxConf>} icmsConf
   */
exports.prototype['icmsConf'] = undefined;

  /**
   * Process name to Identify this configuration
   * @member {String} name
   */
exports.prototype['name'] = undefined;

  /**
   * @member {module:model/ProcessScenario.TypeEnum} type
   */
exports.prototype['type'] = undefined;

  /**
   * inform if the transaction is an operation to internalizing (receive) item or value
   * @member {module:model/ProcessScenario.WayTypeEnum} wayType
   */
exports.prototype['wayType'] = undefined;

  /**
   * @member {module:model/ProcessScenario.GoalEnum} goal
   */
exports.prototype['goal'] = undefined;

  /**
   * inform that the configuration process overwrites the cfop configuration.
   * @member {Boolean} overWriteCFOP
   */
exports.prototype['overWriteCFOP'] = undefined;

  /**
   * @member {Array.<module:model/CfopConf>} cfops
   */
exports.prototype['cfops'] = undefined;



  return exports;
}));


