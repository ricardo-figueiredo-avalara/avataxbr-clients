/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/WithholdDef'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./WithholdDef'));
  } else {
    // Browser globals (root is window)
    if (!root.Br16Api) {
      root.Br16Api = {};
    }
    root.Br16Api.TaxTypeRateWithholding = factory(root.Br16Api.ApiClient, root.Br16Api.WithholdDef);
  }
}(this, function(ApiClient, WithholdDef) {
  'use strict';




  /**
   * The TaxTypeRateWithholding model module.
   * @module model/TaxTypeRateWithholding
   * @version 1.0
   */

  /**
   * Constructs a new <code>TaxTypeRateWithholding</code>.
   * Assign an empty object for simple withholding, null (no key) for no withholding. Detailed behaviors for specific targets may be set by using the available optional keys. 
   * @alias module:model/TaxTypeRateWithholding
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>TaxTypeRateWithholding</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TaxTypeRateWithholding} obj Optional instance to populate.
   * @return {module:model/TaxTypeRateWithholding} The populated <code>TaxTypeRateWithholding</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('all')) {
        obj['all'] = WithholdDef.constructFromObject(data['all']);
      }
      if (data.hasOwnProperty('business')) {
        obj['business'] = WithholdDef.constructFromObject(data['business']);
      }
      if (data.hasOwnProperty('federalGovernment')) {
        obj['federalGovernment'] = WithholdDef.constructFromObject(data['federalGovernment']);
      }
      if (data.hasOwnProperty('stateGovernment')) {
        obj['stateGovernment'] = WithholdDef.constructFromObject(data['stateGovernment']);
      }
      if (data.hasOwnProperty('cityGovernment')) {
        obj['cityGovernment'] = WithholdDef.constructFromObject(data['cityGovernment']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/WithholdDef} all
   */
  exports.prototype['all'] = undefined;
  /**
   * @member {module:model/WithholdDef} business
   */
  exports.prototype['business'] = undefined;
  /**
   * @member {module:model/WithholdDef} federalGovernment
   */
  exports.prototype['federalGovernment'] = undefined;
  /**
   * @member {module:model/WithholdDef} stateGovernment
   */
  exports.prototype['stateGovernment'] = undefined;
  /**
   * @member {module:model/WithholdDef} cityGovernment
   */
  exports.prototype['cityGovernment'] = undefined;



  return exports;
}));


