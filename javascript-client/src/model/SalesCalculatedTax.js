/**
 * AvaTax Brazil
 * The Avatax-Brazil API exposes the most commonly services available for interacting with the AvaTax-Brazil services, allowing calculation of taxes, issuing electronic invoice documents and modifying existing transactions when allowed by tax authorities.  This API is exclusively for use by business with a physical presence in Brazil.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SalesTaxByType', 'model/SalesTaxByTypeDetail'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SalesTaxByType'), require('./SalesTaxByTypeDetail'));
  } else {
    // Browser globals (root is window)
    if (!root.AvaTaxBrazil) {
      root.AvaTaxBrazil = {};
    }
    root.AvaTaxBrazil.SalesCalculatedTax = factory(root.AvaTaxBrazil.ApiClient, root.AvaTaxBrazil.SalesTaxByType, root.AvaTaxBrazil.SalesTaxByTypeDetail);
  }
}(this, function(ApiClient, SalesTaxByType, SalesTaxByTypeDetail) {
  'use strict';




  /**
   * The SalesCalculatedTax model module.
   * @module model/SalesCalculatedTax
   * @version 1.0
   */

  /**
   * Constructs a new <code>SalesCalculatedTax</code>.
   * @alias module:model/SalesCalculatedTax
   * @class
   */
  var exports = function() {
    var _this = this;




  };

  /**
   * Constructs a <code>SalesCalculatedTax</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SalesCalculatedTax} obj Optional instance to populate.
   * @return {module:model/SalesCalculatedTax} The populated <code>SalesCalculatedTax</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('taxByType')) {
        obj['taxByType'] = SalesTaxByType.constructFromObject(data['taxByType']);
      }
      if (data.hasOwnProperty('tax')) {
        obj['tax'] = ApiClient.convertToType(data['tax'], 'Number');
      }
      if (data.hasOwnProperty('details')) {
        obj['details'] = ApiClient.convertToType(data['details'], [SalesTaxByTypeDetail]);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/SalesTaxByType} taxByType
   */
  exports.prototype['taxByType'] = undefined;
  /**
   * Sum of tax type not VAT (Value Added Tax)
   * @member {Number} tax
   */
  exports.prototype['tax'] = undefined;
  /**
   * @member {Array.<module:model/SalesTaxByTypeDetail>} details
   */
  exports.prototype['details'] = undefined;



  return exports;
}));


