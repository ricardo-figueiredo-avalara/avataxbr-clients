/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/StateEnum'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./StateEnum'));
  } else {
    // Browser globals (root is window)
    if (!root.Br16Api) {
      root.Br16Api = {};
    }
    root.Br16Api.SimpleAddress = factory(root.Br16Api.ApiClient, root.Br16Api.StateEnum);
  }
}(this, function(ApiClient, StateEnum) {
  'use strict';




  /**
   * The SimpleAddress model module.
   * @module model/SimpleAddress
   * @version 1.0
   */

  /**
   * Constructs a new <code>SimpleAddress</code>.
   * @alias module:model/SimpleAddress
   * @class
   * @param line1 {String} Address
   * @param line2 {String} Number
   * @param line3 {String} District
   * @param zipcode {String} Brazilian Zip Code
   * @param country {String} Use ISO 3166-1 alpha-3 codes
   */
  var exports = function(line1, line2, line3, zipcode, country) {
    var _this = this;

    _this['line1'] = line1;
    _this['line2'] = line2;
    _this['line3'] = line3;

    _this['zipcode'] = zipcode;

    _this['country'] = country;
  };

  /**
   * Constructs a <code>SimpleAddress</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SimpleAddress} obj Optional instance to populate.
   * @return {module:model/SimpleAddress} The populated <code>SimpleAddress</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('line1')) {
        obj['line1'] = ApiClient.convertToType(data['line1'], 'String');
      }
      if (data.hasOwnProperty('line2')) {
        obj['line2'] = ApiClient.convertToType(data['line2'], 'String');
      }
      if (data.hasOwnProperty('line3')) {
        obj['line3'] = ApiClient.convertToType(data['line3'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'String');
      }
      if (data.hasOwnProperty('zipcode')) {
        obj['zipcode'] = ApiClient.convertToType(data['zipcode'], 'String');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = StateEnum.constructFromObject(data['state']);
      }
      if (data.hasOwnProperty('country')) {
        obj['country'] = ApiClient.convertToType(data['country'], 'String');
      }
    }
    return obj;
  }

  /**
   * Address
   * @member {String} line1
   */
  exports.prototype['line1'] = undefined;
  /**
   * Number
   * @member {String} line2
   */
  exports.prototype['line2'] = undefined;
  /**
   * District
   * @member {String} line3
   */
  exports.prototype['line3'] = undefined;
  /**
   * @member {String} city
   */
  exports.prototype['city'] = undefined;
  /**
   * Brazilian Zip Code
   * @member {String} zipcode
   */
  exports.prototype['zipcode'] = undefined;
  /**
   * @member {module:model/StateEnum} state
   */
  exports.prototype['state'] = undefined;
  /**
   * Use ISO 3166-1 alpha-3 codes
   * @member {String} country
   * @default 'BRA'
   */
  exports.prototype['country'] = 'BRA';



  return exports;
}));


