/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/Message', 'model/ValidationError'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Address'), require('../model/Message'), require('../model/ValidationError'));
  } else {
    // Browser globals (root is window)
    if (!root.Br16Api) {
      root.Br16Api = {};
    }
    root.Br16Api.AddressApi = factory(root.Br16Api.ApiClient, root.Br16Api.Address, root.Br16Api.Message, root.Br16Api.ValidationError);
  }
}(this, function(ApiClient, Address, Message, ValidationError) {
  'use strict';

  /**
   * Address service.
   * @module api/AddressApi
   * @version 1.0
   */

  /**
   * Constructs a new AddressApi. 
   * @alias module:api/AddressApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getZipCode operation.
     * @callback module:api/AddressApi~getZipCodeCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Address>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation return address
     * @param {String} zipcode ZIP Code
     * @param {module:api/AddressApi~getZipCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Address>}
     */
    this.getZipCode = function(zipcode, callback) {
      var postBody = null;

      // verify the required parameter 'zipcode' is set
      if (zipcode == undefined || zipcode == null) {
        throw new Error("Missing the required parameter 'zipcode' when calling getZipCode");
      }


      var pathParams = {
        'zipcode': zipcode
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [Address];

      return this.apiClient.callApi(
        '/addresses/{zipcode}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
