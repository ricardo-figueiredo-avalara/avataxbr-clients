/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CustomProcessScenario', 'model/InlineResponse201', 'model/Message', 'model/ValidationError'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CustomProcessScenario'), require('../model/InlineResponse201'), require('../model/Message'), require('../model/ValidationError'));
  } else {
    // Browser globals (root is window)
    if (!root.Br16Api) {
      root.Br16Api = {};
    }
    root.Br16Api.CompanyProcessApi = factory(root.Br16Api.ApiClient, root.Br16Api.CustomProcessScenario, root.Br16Api.InlineResponse201, root.Br16Api.Message, root.Br16Api.ValidationError);
  }
}(this, function(ApiClient, CustomProcessScenario, InlineResponse201, Message, ValidationError) {
  'use strict';

  /**
   * CompanyProcess service.
   * @module api/CompanyProcessApi
   * @version 1.0
   */

  /**
   * Constructs a new CompanyProcessApi. 
   * @alias module:api/CompanyProcessApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the companiesCompanyIdProcessCodeGet operation.
     * @callback module:api/CompanyProcessApi~companiesCompanyIdProcessCodeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomProcessScenario} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation return custom process configurations that match with parameters queries 
     * @param {String} companyId Company ID
     * @param {String} code Process Code
     * @param {module:api/CompanyProcessApi~companiesCompanyIdProcessCodeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomProcessScenario}
     */
    this.companiesCompanyIdProcessCodeGet = function(companyId, code, callback) {
      var postBody = null;

      // verify the required parameter 'companyId' is set
      if (companyId == undefined || companyId == null) {
        throw new Error("Missing the required parameter 'companyId' when calling companiesCompanyIdProcessCodeGet");
      }

      // verify the required parameter 'code' is set
      if (code == undefined || code == null) {
        throw new Error("Missing the required parameter 'code' when calling companiesCompanyIdProcessCodeGet");
      }


      var pathParams = {
        'companyId': companyId,
        'code': code
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = CustomProcessScenario;

      return this.apiClient.callApi(
        '/companies/{companyId}/process/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the companiesCompanyIdProcessGet operation.
     * @callback module:api/CompanyProcessApi~companiesCompanyIdProcessGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CustomProcessScenario>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This operation return custom process configurations that match with parameters queries 
     * @param {String} companyId Company ID
     * @param {Object} opts Optional parameters
     * @param {Number} opts.xPaginationLimit The per page limit. Currently set to 10 but subject to change at any time (max 100). (default to 10)
     * @param {Number} opts.xPaginationCurrentPage The current page. Defaults to 1. (default to 1)
     * @param {String} opts.xPaginationSort 
     * @param {module:api/CompanyProcessApi~companiesCompanyIdProcessGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CustomProcessScenario>}
     */
    this.companiesCompanyIdProcessGet = function(companyId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'companyId' is set
      if (companyId == undefined || companyId == null) {
        throw new Error("Missing the required parameter 'companyId' when calling companiesCompanyIdProcessGet");
      }


      var pathParams = {
        'companyId': companyId
      };
      var queryParams = {
      };
      var headerParams = {
        'X-Pagination-Limit': opts['xPaginationLimit'],
        'X-Pagination-Current-Page': opts['xPaginationCurrentPage'],
        'X-Pagination-Sort': opts['xPaginationSort']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [CustomProcessScenario];

      return this.apiClient.callApi(
        '/companies/{companyId}/process', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createCustomProcessScenario operation.
     * @callback module:api/CompanyProcessApi~createCustomProcessScenarioCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse201} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create custom process tax for one company
     * This method operation create a custom agast for one company 
     * @param {String} companyId Company ID
     * @param {module:model/CustomProcessScenario} body Transaction Message
     * @param {module:api/CompanyProcessApi~createCustomProcessScenarioCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse201}
     */
    this.createCustomProcessScenario = function(companyId, body, callback) {
      var postBody = body;

      // verify the required parameter 'companyId' is set
      if (companyId == undefined || companyId == null) {
        throw new Error("Missing the required parameter 'companyId' when calling createCustomProcessScenario");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling createCustomProcessScenario");
      }


      var pathParams = {
        'companyId': companyId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InlineResponse201;

      return this.apiClient.callApi(
        '/companies/{companyId}/process', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCustomProcessScenario operation.
     * @callback module:api/CompanyProcessApi~deleteCustomProcessScenarioCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} companyId Company ID
     * @param {String} code Process Code
     * @param {module:api/CompanyProcessApi~deleteCustomProcessScenarioCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteCustomProcessScenario = function(companyId, code, callback) {
      var postBody = null;

      // verify the required parameter 'companyId' is set
      if (companyId == undefined || companyId == null) {
        throw new Error("Missing the required parameter 'companyId' when calling deleteCustomProcessScenario");
      }

      // verify the required parameter 'code' is set
      if (code == undefined || code == null) {
        throw new Error("Missing the required parameter 'code' when calling deleteCustomProcessScenario");
      }


      var pathParams = {
        'companyId': companyId,
        'code': code
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/companies/{companyId}/process/{code}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateCustomProcessScenario operation.
     * @callback module:api/CompanyProcessApi~updateCustomProcessScenarioCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update custom agast for one company
     * This method operation update a custom process for one company 
     * @param {String} companyId Company ID
     * @param {String} code Process Code
     * @param {module:model/CustomProcessScenario} body Transaction Message
     * @param {module:api/CompanyProcessApi~updateCustomProcessScenarioCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.updateCustomProcessScenario = function(companyId, code, body, callback) {
      var postBody = body;

      // verify the required parameter 'companyId' is set
      if (companyId == undefined || companyId == null) {
        throw new Error("Missing the required parameter 'companyId' when calling updateCustomProcessScenario");
      }

      // verify the required parameter 'code' is set
      if (code == undefined || code == null) {
        throw new Error("Missing the required parameter 'code' when calling updateCustomProcessScenario");
      }

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling updateCustomProcessScenario");
      }


      var pathParams = {
        'companyId': companyId,
        'code': code
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/companies/{companyId}/process/{code}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
