/**
 * BR16 - API
 * This documentation is about service accessories that will compose the product BR16, this services are essencial to maintenance and configuration of accounts
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountCompany', 'model/AdditionalInformation', 'model/AdditionalInformationProcRef', 'model/Address', 'model/Agast', 'model/AgastCodeType', 'model/AgastExtendForSefaz', 'model/AgastIcmsConf', 'model/Body', 'model/Body1', 'model/Body2', 'model/Body3', 'model/Body4', 'model/CSTPistCofinsEnum', 'model/CSTTableAEnum', 'model/CSTTableBEnum', 'model/CalcModelEnum', 'model/CalculatedTaxSummaryForGoods', 'model/CalculatedTaxSummaryForGoodsTaxByType', 'model/CfopConf', 'model/Company', 'model/CompanyAuthorizedToDownloadNFe', 'model/CompanyConfiguration', 'model/CompanyMailServer', 'model/CstIcmsEnum', 'model/CustomAgast', 'model/CustomIcmsConfByState', 'model/CustomProcessScenario', 'model/CustomTaxTypeRate', 'model/DefaultLocations', 'model/DetailsCalculatedTax', 'model/DetailsCalculatedTaxItem', 'model/Entity', 'model/EntityForGoods', 'model/EntityInformerForGoods', 'model/EntityInformerForGoodsFederalTaxRegime', 'model/EntityLocation', 'model/EntityType', 'model/Error', 'model/ExportInfo', 'model/FederalTaxRegime', 'model/Fuel', 'model/FuelCide', 'model/FuelPumpNumber', 'model/HeaderBaseInfo', 'model/HeaderForGoods', 'model/HeaderForGoodsParticipants', 'model/IbptConf', 'model/IcmsConfByState', 'model/IcmsConfByStateIcmsSTConf', 'model/IcmsConfInterState', 'model/IcmsConfInterStateIcmsSTConf', 'model/IcmsTaxConf', 'model/IcmsTaxConfBase', 'model/InformerForGoods', 'model/InformerForGoodsCsts', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse2002', 'model/InlineResponse2003', 'model/InlineResponse2004', 'model/InlineResponse201', 'model/InstallmentComplete', 'model/IpbtConfItem', 'model/IssConfByCity', 'model/IssConfServiceList', 'model/IssConfServiceListTaxRate', 'model/IssConfServiceListTaxRateIbpt', 'model/ItemCpom', 'model/ItemGoods', 'model/ItemSimple', 'model/LegalReason', 'model/LegalReasonReferencedProcesses', 'model/LegalReasonTaxScope', 'model/LineForGoods', 'model/LineForGoodsAdi', 'model/LineForGoodsCalculatedTax', 'model/LineForGoodsCalculatedTaxTaxByType', 'model/LineForGoodsDi', 'model/LineForGoodsExport', 'model/LineForGoodsIcmsTaxRelief', 'model/LineForGoodsIndExport', 'model/LineForSefazGoods', 'model/Location', 'model/LocationSecondaryStateTaxId', 'model/Medicine', 'model/Message', 'model/NRef', 'model/NRefRefECF', 'model/NRefRefFarmerNF', 'model/NRefRefNF', 'model/PayRecCalculatedTaxSummaryForService', 'model/PayRecCalculatedTaxSummaryForServiceTaxByType', 'model/PayRecHeader', 'model/PayRecLinesIn', 'model/PayRecLinesOut', 'model/Payment', 'model/PaymentBill', 'model/PaymentCalculatedTax', 'model/PaymentInstallment', 'model/PaymentLinesIn', 'model/PaymentPaymentMode', 'model/PaymentTaxByType', 'model/PaymentTerms', 'model/PaymentTransactionIn', 'model/PaymentTransactionOut', 'model/PccWithholdingMode', 'model/PointOfOrderOrigin', 'model/ProcessScenario', 'model/ProcessingInfo', 'model/PurchaseCalculatedTax', 'model/PurchaseCalculatedTaxSummaryForService', 'model/PurchaseCalculatedTaxSummaryForServiceTaxByType', 'model/PurchaseDefaultLocations', 'model/PurchaseEntity', 'model/PurchaseHeaderIn', 'model/PurchaseHeaderInPayment', 'model/PurchaseHeaderOut', 'model/PurchaseHeaderOutPayment', 'model/PurchaseInfo', 'model/PurchaseInstallmentIn', 'model/PurchaseLinesIn', 'model/PurchaseLinesOut', 'model/PurchaseTaxByType', 'model/PurchaseTaxByTypeDetail', 'model/PurchaseTaxesConfig', 'model/PurchaseTransactionIn', 'model/PurchaseTransactionOut', 'model/ReceiptTransactionIn', 'model/ReceiptTransactionOut', 'model/SalesCalculatedTax', 'model/SalesCalculatedTaxSummaryForService', 'model/SalesCalculatedTaxSummaryForServiceTaxByType', 'model/SalesDefaultLocations', 'model/SalesEntity', 'model/SalesHeaderIn', 'model/SalesHeaderInPayment', 'model/SalesHeaderOut', 'model/SalesHeaderOutPayment', 'model/SalesInstallmentIn', 'model/SalesLinesIn', 'model/SalesLinesInTaxDeductions', 'model/SalesLinesOut', 'model/SalesLinesOutTaxDeductions', 'model/SalesTaxByType', 'model/SalesTaxByTypeDetail', 'model/SalesTaxesConfig', 'model/SalesTransactionIn', 'model/SalesTransactionOut', 'model/SefazDisableRangeIn', 'model/SefazInvoiceBasicStatus', 'model/SefazInvoiceStatus', 'model/SefazItDeleteIn', 'model/SefazItGetOut', 'model/SefazItPutIn', 'model/SefazPostOut', 'model/ServiceItemTaxRate', 'model/ServiceItemTaxRatePeriod', 'model/ServiceRendered', 'model/SimpleAddress', 'model/StateEnum', 'model/StateTransition', 'model/TaxByTypeSummaryForGoods', 'model/TaxByTypeSummaryForService', 'model/TaxByTypeSummaryJurisdiction', 'model/TaxByTypeSummaryJurisdictionForGoods', 'model/TaxByTypeTax', 'model/TaxConf', 'model/TaxType', 'model/TaxTypeRate', 'model/TaxTypeRateWithholding', 'model/TransactionForGoodsIn', 'model/TransactionForGoodsOut', 'model/TransactionForSefazGoods', 'model/TransactionForSefazGoodsList', 'model/Transport', 'model/TransportVolumes', 'model/ValidationError', 'model/Vehicle', 'model/VehicleID', 'model/VehicleTransp', 'model/Weapon', 'model/WithholdDef', 'model/WithholdingMode', 'api/AGASTApi', 'api/AccountApi', 'api/AddressApi', 'api/AuthApi', 'api/CompanyApi', 'api/CompanyAGASTApi', 'api/CompanyFilesApi', 'api/CompanyICMSApi', 'api/CompanyItemCPOMServiceApi', 'api/CompanyItemGoodsApi', 'api/CompanyItemServiceApi', 'api/CompanyLocationApi', 'api/CompanyProcessApi', 'api/CompanyTaxRatesApi', 'api/GoodsCalculationsApi', 'api/GoodsTransactionsApi', 'api/InvoiceContingencyApi', 'api/InvoiceNFCeDANFEApi', 'api/InvoiceNFeDANFEApi', 'api/InvoiceSEFAZApi', 'api/InvoiceSettingsApi', 'api/LegalReasonApi', 'api/ServiceCalculationsApi', 'api/ServiceTransactionsApi', 'api/TaxConfCFOPApi', 'api/TaxConfIBPTApi', 'api/TaxConfICMSApi', 'api/TaxConfISSApi', 'api/TaxConfProcessApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccountCompany'), require('./model/AdditionalInformation'), require('./model/AdditionalInformationProcRef'), require('./model/Address'), require('./model/Agast'), require('./model/AgastCodeType'), require('./model/AgastExtendForSefaz'), require('./model/AgastIcmsConf'), require('./model/Body'), require('./model/Body1'), require('./model/Body2'), require('./model/Body3'), require('./model/Body4'), require('./model/CSTPistCofinsEnum'), require('./model/CSTTableAEnum'), require('./model/CSTTableBEnum'), require('./model/CalcModelEnum'), require('./model/CalculatedTaxSummaryForGoods'), require('./model/CalculatedTaxSummaryForGoodsTaxByType'), require('./model/CfopConf'), require('./model/Company'), require('./model/CompanyAuthorizedToDownloadNFe'), require('./model/CompanyConfiguration'), require('./model/CompanyMailServer'), require('./model/CstIcmsEnum'), require('./model/CustomAgast'), require('./model/CustomIcmsConfByState'), require('./model/CustomProcessScenario'), require('./model/CustomTaxTypeRate'), require('./model/DefaultLocations'), require('./model/DetailsCalculatedTax'), require('./model/DetailsCalculatedTaxItem'), require('./model/Entity'), require('./model/EntityForGoods'), require('./model/EntityInformerForGoods'), require('./model/EntityInformerForGoodsFederalTaxRegime'), require('./model/EntityLocation'), require('./model/EntityType'), require('./model/Error'), require('./model/ExportInfo'), require('./model/FederalTaxRegime'), require('./model/Fuel'), require('./model/FuelCide'), require('./model/FuelPumpNumber'), require('./model/HeaderBaseInfo'), require('./model/HeaderForGoods'), require('./model/HeaderForGoodsParticipants'), require('./model/IbptConf'), require('./model/IcmsConfByState'), require('./model/IcmsConfByStateIcmsSTConf'), require('./model/IcmsConfInterState'), require('./model/IcmsConfInterStateIcmsSTConf'), require('./model/IcmsTaxConf'), require('./model/IcmsTaxConfBase'), require('./model/InformerForGoods'), require('./model/InformerForGoodsCsts'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse2002'), require('./model/InlineResponse2003'), require('./model/InlineResponse2004'), require('./model/InlineResponse201'), require('./model/InstallmentComplete'), require('./model/IpbtConfItem'), require('./model/IssConfByCity'), require('./model/IssConfServiceList'), require('./model/IssConfServiceListTaxRate'), require('./model/IssConfServiceListTaxRateIbpt'), require('./model/ItemCpom'), require('./model/ItemGoods'), require('./model/ItemSimple'), require('./model/LegalReason'), require('./model/LegalReasonReferencedProcesses'), require('./model/LegalReasonTaxScope'), require('./model/LineForGoods'), require('./model/LineForGoodsAdi'), require('./model/LineForGoodsCalculatedTax'), require('./model/LineForGoodsCalculatedTaxTaxByType'), require('./model/LineForGoodsDi'), require('./model/LineForGoodsExport'), require('./model/LineForGoodsIcmsTaxRelief'), require('./model/LineForGoodsIndExport'), require('./model/LineForSefazGoods'), require('./model/Location'), require('./model/LocationSecondaryStateTaxId'), require('./model/Medicine'), require('./model/Message'), require('./model/NRef'), require('./model/NRefRefECF'), require('./model/NRefRefFarmerNF'), require('./model/NRefRefNF'), require('./model/PayRecCalculatedTaxSummaryForService'), require('./model/PayRecCalculatedTaxSummaryForServiceTaxByType'), require('./model/PayRecHeader'), require('./model/PayRecLinesIn'), require('./model/PayRecLinesOut'), require('./model/Payment'), require('./model/PaymentBill'), require('./model/PaymentCalculatedTax'), require('./model/PaymentInstallment'), require('./model/PaymentLinesIn'), require('./model/PaymentPaymentMode'), require('./model/PaymentTaxByType'), require('./model/PaymentTerms'), require('./model/PaymentTransactionIn'), require('./model/PaymentTransactionOut'), require('./model/PccWithholdingMode'), require('./model/PointOfOrderOrigin'), require('./model/ProcessScenario'), require('./model/ProcessingInfo'), require('./model/PurchaseCalculatedTax'), require('./model/PurchaseCalculatedTaxSummaryForService'), require('./model/PurchaseCalculatedTaxSummaryForServiceTaxByType'), require('./model/PurchaseDefaultLocations'), require('./model/PurchaseEntity'), require('./model/PurchaseHeaderIn'), require('./model/PurchaseHeaderInPayment'), require('./model/PurchaseHeaderOut'), require('./model/PurchaseHeaderOutPayment'), require('./model/PurchaseInfo'), require('./model/PurchaseInstallmentIn'), require('./model/PurchaseLinesIn'), require('./model/PurchaseLinesOut'), require('./model/PurchaseTaxByType'), require('./model/PurchaseTaxByTypeDetail'), require('./model/PurchaseTaxesConfig'), require('./model/PurchaseTransactionIn'), require('./model/PurchaseTransactionOut'), require('./model/ReceiptTransactionIn'), require('./model/ReceiptTransactionOut'), require('./model/SalesCalculatedTax'), require('./model/SalesCalculatedTaxSummaryForService'), require('./model/SalesCalculatedTaxSummaryForServiceTaxByType'), require('./model/SalesDefaultLocations'), require('./model/SalesEntity'), require('./model/SalesHeaderIn'), require('./model/SalesHeaderInPayment'), require('./model/SalesHeaderOut'), require('./model/SalesHeaderOutPayment'), require('./model/SalesInstallmentIn'), require('./model/SalesLinesIn'), require('./model/SalesLinesInTaxDeductions'), require('./model/SalesLinesOut'), require('./model/SalesLinesOutTaxDeductions'), require('./model/SalesTaxByType'), require('./model/SalesTaxByTypeDetail'), require('./model/SalesTaxesConfig'), require('./model/SalesTransactionIn'), require('./model/SalesTransactionOut'), require('./model/SefazDisableRangeIn'), require('./model/SefazInvoiceBasicStatus'), require('./model/SefazInvoiceStatus'), require('./model/SefazItDeleteIn'), require('./model/SefazItGetOut'), require('./model/SefazItPutIn'), require('./model/SefazPostOut'), require('./model/ServiceItemTaxRate'), require('./model/ServiceItemTaxRatePeriod'), require('./model/ServiceRendered'), require('./model/SimpleAddress'), require('./model/StateEnum'), require('./model/StateTransition'), require('./model/TaxByTypeSummaryForGoods'), require('./model/TaxByTypeSummaryForService'), require('./model/TaxByTypeSummaryJurisdiction'), require('./model/TaxByTypeSummaryJurisdictionForGoods'), require('./model/TaxByTypeTax'), require('./model/TaxConf'), require('./model/TaxType'), require('./model/TaxTypeRate'), require('./model/TaxTypeRateWithholding'), require('./model/TransactionForGoodsIn'), require('./model/TransactionForGoodsOut'), require('./model/TransactionForSefazGoods'), require('./model/TransactionForSefazGoodsList'), require('./model/Transport'), require('./model/TransportVolumes'), require('./model/ValidationError'), require('./model/Vehicle'), require('./model/VehicleID'), require('./model/VehicleTransp'), require('./model/Weapon'), require('./model/WithholdDef'), require('./model/WithholdingMode'), require('./api/AGASTApi'), require('./api/AccountApi'), require('./api/AddressApi'), require('./api/AuthApi'), require('./api/CompanyApi'), require('./api/CompanyAGASTApi'), require('./api/CompanyFilesApi'), require('./api/CompanyICMSApi'), require('./api/CompanyItemCPOMServiceApi'), require('./api/CompanyItemGoodsApi'), require('./api/CompanyItemServiceApi'), require('./api/CompanyLocationApi'), require('./api/CompanyProcessApi'), require('./api/CompanyTaxRatesApi'), require('./api/GoodsCalculationsApi'), require('./api/GoodsTransactionsApi'), require('./api/InvoiceContingencyApi'), require('./api/InvoiceNFCeDANFEApi'), require('./api/InvoiceNFeDANFEApi'), require('./api/InvoiceSEFAZApi'), require('./api/InvoiceSettingsApi'), require('./api/LegalReasonApi'), require('./api/ServiceCalculationsApi'), require('./api/ServiceTransactionsApi'), require('./api/TaxConfCFOPApi'), require('./api/TaxConfIBPTApi'), require('./api/TaxConfICMSApi'), require('./api/TaxConfISSApi'), require('./api/TaxConfProcessApi'));
  }
}(function(ApiClient, AccountCompany, AdditionalInformation, AdditionalInformationProcRef, Address, Agast, AgastCodeType, AgastExtendForSefaz, AgastIcmsConf, Body, Body1, Body2, Body3, Body4, CSTPistCofinsEnum, CSTTableAEnum, CSTTableBEnum, CalcModelEnum, CalculatedTaxSummaryForGoods, CalculatedTaxSummaryForGoodsTaxByType, CfopConf, Company, CompanyAuthorizedToDownloadNFe, CompanyConfiguration, CompanyMailServer, CstIcmsEnum, CustomAgast, CustomIcmsConfByState, CustomProcessScenario, CustomTaxTypeRate, DefaultLocations, DetailsCalculatedTax, DetailsCalculatedTaxItem, Entity, EntityForGoods, EntityInformerForGoods, EntityInformerForGoodsFederalTaxRegime, EntityLocation, EntityType, Error, ExportInfo, FederalTaxRegime, Fuel, FuelCide, FuelPumpNumber, HeaderBaseInfo, HeaderForGoods, HeaderForGoodsParticipants, IbptConf, IcmsConfByState, IcmsConfByStateIcmsSTConf, IcmsConfInterState, IcmsConfInterStateIcmsSTConf, IcmsTaxConf, IcmsTaxConfBase, InformerForGoods, InformerForGoodsCsts, InlineResponse200, InlineResponse2001, InlineResponse2002, InlineResponse2003, InlineResponse2004, InlineResponse201, InstallmentComplete, IpbtConfItem, IssConfByCity, IssConfServiceList, IssConfServiceListTaxRate, IssConfServiceListTaxRateIbpt, ItemCpom, ItemGoods, ItemSimple, LegalReason, LegalReasonReferencedProcesses, LegalReasonTaxScope, LineForGoods, LineForGoodsAdi, LineForGoodsCalculatedTax, LineForGoodsCalculatedTaxTaxByType, LineForGoodsDi, LineForGoodsExport, LineForGoodsIcmsTaxRelief, LineForGoodsIndExport, LineForSefazGoods, Location, LocationSecondaryStateTaxId, Medicine, Message, NRef, NRefRefECF, NRefRefFarmerNF, NRefRefNF, PayRecCalculatedTaxSummaryForService, PayRecCalculatedTaxSummaryForServiceTaxByType, PayRecHeader, PayRecLinesIn, PayRecLinesOut, Payment, PaymentBill, PaymentCalculatedTax, PaymentInstallment, PaymentLinesIn, PaymentPaymentMode, PaymentTaxByType, PaymentTerms, PaymentTransactionIn, PaymentTransactionOut, PccWithholdingMode, PointOfOrderOrigin, ProcessScenario, ProcessingInfo, PurchaseCalculatedTax, PurchaseCalculatedTaxSummaryForService, PurchaseCalculatedTaxSummaryForServiceTaxByType, PurchaseDefaultLocations, PurchaseEntity, PurchaseHeaderIn, PurchaseHeaderInPayment, PurchaseHeaderOut, PurchaseHeaderOutPayment, PurchaseInfo, PurchaseInstallmentIn, PurchaseLinesIn, PurchaseLinesOut, PurchaseTaxByType, PurchaseTaxByTypeDetail, PurchaseTaxesConfig, PurchaseTransactionIn, PurchaseTransactionOut, ReceiptTransactionIn, ReceiptTransactionOut, SalesCalculatedTax, SalesCalculatedTaxSummaryForService, SalesCalculatedTaxSummaryForServiceTaxByType, SalesDefaultLocations, SalesEntity, SalesHeaderIn, SalesHeaderInPayment, SalesHeaderOut, SalesHeaderOutPayment, SalesInstallmentIn, SalesLinesIn, SalesLinesInTaxDeductions, SalesLinesOut, SalesLinesOutTaxDeductions, SalesTaxByType, SalesTaxByTypeDetail, SalesTaxesConfig, SalesTransactionIn, SalesTransactionOut, SefazDisableRangeIn, SefazInvoiceBasicStatus, SefazInvoiceStatus, SefazItDeleteIn, SefazItGetOut, SefazItPutIn, SefazPostOut, ServiceItemTaxRate, ServiceItemTaxRatePeriod, ServiceRendered, SimpleAddress, StateEnum, StateTransition, TaxByTypeSummaryForGoods, TaxByTypeSummaryForService, TaxByTypeSummaryJurisdiction, TaxByTypeSummaryJurisdictionForGoods, TaxByTypeTax, TaxConf, TaxType, TaxTypeRate, TaxTypeRateWithholding, TransactionForGoodsIn, TransactionForGoodsOut, TransactionForSefazGoods, TransactionForSefazGoodsList, Transport, TransportVolumes, ValidationError, Vehicle, VehicleID, VehicleTransp, Weapon, WithholdDef, WithholdingMode, AGASTApi, AccountApi, AddressApi, AuthApi, CompanyApi, CompanyAGASTApi, CompanyFilesApi, CompanyICMSApi, CompanyItemCPOMServiceApi, CompanyItemGoodsApi, CompanyItemServiceApi, CompanyLocationApi, CompanyProcessApi, CompanyTaxRatesApi, GoodsCalculationsApi, GoodsTransactionsApi, InvoiceContingencyApi, InvoiceNFCeDANFEApi, InvoiceNFeDANFEApi, InvoiceSEFAZApi, InvoiceSettingsApi, LegalReasonApi, ServiceCalculationsApi, ServiceTransactionsApi, TaxConfCFOPApi, TaxConfIBPTApi, TaxConfICMSApi, TaxConfISSApi, TaxConfProcessApi) {
  'use strict';

  /**
   * This_documentation_is_about_service_accessories_that_will_compose_the_product_BR16_this_services_are_essencial_to_maintenance_and_configuration_of_accounts.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Br16Api = require('index'); // See note below*.
   * var xxxSvc = new Br16Api.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Br16Api.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Br16Api.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Br16Api.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccountCompany model constructor.
     * @property {module:model/AccountCompany}
     */
    AccountCompany: AccountCompany,
    /**
     * The AdditionalInformation model constructor.
     * @property {module:model/AdditionalInformation}
     */
    AdditionalInformation: AdditionalInformation,
    /**
     * The AdditionalInformationProcRef model constructor.
     * @property {module:model/AdditionalInformationProcRef}
     */
    AdditionalInformationProcRef: AdditionalInformationProcRef,
    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address: Address,
    /**
     * The Agast model constructor.
     * @property {module:model/Agast}
     */
    Agast: Agast,
    /**
     * The AgastCodeType model constructor.
     * @property {module:model/AgastCodeType}
     */
    AgastCodeType: AgastCodeType,
    /**
     * The AgastExtendForSefaz model constructor.
     * @property {module:model/AgastExtendForSefaz}
     */
    AgastExtendForSefaz: AgastExtendForSefaz,
    /**
     * The AgastIcmsConf model constructor.
     * @property {module:model/AgastIcmsConf}
     */
    AgastIcmsConf: AgastIcmsConf,
    /**
     * The Body model constructor.
     * @property {module:model/Body}
     */
    Body: Body,
    /**
     * The Body1 model constructor.
     * @property {module:model/Body1}
     */
    Body1: Body1,
    /**
     * The Body2 model constructor.
     * @property {module:model/Body2}
     */
    Body2: Body2,
    /**
     * The Body3 model constructor.
     * @property {module:model/Body3}
     */
    Body3: Body3,
    /**
     * The Body4 model constructor.
     * @property {module:model/Body4}
     */
    Body4: Body4,
    /**
     * The CSTPistCofinsEnum model constructor.
     * @property {module:model/CSTPistCofinsEnum}
     */
    CSTPistCofinsEnum: CSTPistCofinsEnum,
    /**
     * The CSTTableAEnum model constructor.
     * @property {module:model/CSTTableAEnum}
     */
    CSTTableAEnum: CSTTableAEnum,
    /**
     * The CSTTableBEnum model constructor.
     * @property {module:model/CSTTableBEnum}
     */
    CSTTableBEnum: CSTTableBEnum,
    /**
     * The CalcModelEnum model constructor.
     * @property {module:model/CalcModelEnum}
     */
    CalcModelEnum: CalcModelEnum,
    /**
     * The CalculatedTaxSummaryForGoods model constructor.
     * @property {module:model/CalculatedTaxSummaryForGoods}
     */
    CalculatedTaxSummaryForGoods: CalculatedTaxSummaryForGoods,
    /**
     * The CalculatedTaxSummaryForGoodsTaxByType model constructor.
     * @property {module:model/CalculatedTaxSummaryForGoodsTaxByType}
     */
    CalculatedTaxSummaryForGoodsTaxByType: CalculatedTaxSummaryForGoodsTaxByType,
    /**
     * The CfopConf model constructor.
     * @property {module:model/CfopConf}
     */
    CfopConf: CfopConf,
    /**
     * The Company model constructor.
     * @property {module:model/Company}
     */
    Company: Company,
    /**
     * The CompanyAuthorizedToDownloadNFe model constructor.
     * @property {module:model/CompanyAuthorizedToDownloadNFe}
     */
    CompanyAuthorizedToDownloadNFe: CompanyAuthorizedToDownloadNFe,
    /**
     * The CompanyConfiguration model constructor.
     * @property {module:model/CompanyConfiguration}
     */
    CompanyConfiguration: CompanyConfiguration,
    /**
     * The CompanyMailServer model constructor.
     * @property {module:model/CompanyMailServer}
     */
    CompanyMailServer: CompanyMailServer,
    /**
     * The CstIcmsEnum model constructor.
     * @property {module:model/CstIcmsEnum}
     */
    CstIcmsEnum: CstIcmsEnum,
    /**
     * The CustomAgast model constructor.
     * @property {module:model/CustomAgast}
     */
    CustomAgast: CustomAgast,
    /**
     * The CustomIcmsConfByState model constructor.
     * @property {module:model/CustomIcmsConfByState}
     */
    CustomIcmsConfByState: CustomIcmsConfByState,
    /**
     * The CustomProcessScenario model constructor.
     * @property {module:model/CustomProcessScenario}
     */
    CustomProcessScenario: CustomProcessScenario,
    /**
     * The CustomTaxTypeRate model constructor.
     * @property {module:model/CustomTaxTypeRate}
     */
    CustomTaxTypeRate: CustomTaxTypeRate,
    /**
     * The DefaultLocations model constructor.
     * @property {module:model/DefaultLocations}
     */
    DefaultLocations: DefaultLocations,
    /**
     * The DetailsCalculatedTax model constructor.
     * @property {module:model/DetailsCalculatedTax}
     */
    DetailsCalculatedTax: DetailsCalculatedTax,
    /**
     * The DetailsCalculatedTaxItem model constructor.
     * @property {module:model/DetailsCalculatedTaxItem}
     */
    DetailsCalculatedTaxItem: DetailsCalculatedTaxItem,
    /**
     * The Entity model constructor.
     * @property {module:model/Entity}
     */
    Entity: Entity,
    /**
     * The EntityForGoods model constructor.
     * @property {module:model/EntityForGoods}
     */
    EntityForGoods: EntityForGoods,
    /**
     * The EntityInformerForGoods model constructor.
     * @property {module:model/EntityInformerForGoods}
     */
    EntityInformerForGoods: EntityInformerForGoods,
    /**
     * The EntityInformerForGoodsFederalTaxRegime model constructor.
     * @property {module:model/EntityInformerForGoodsFederalTaxRegime}
     */
    EntityInformerForGoodsFederalTaxRegime: EntityInformerForGoodsFederalTaxRegime,
    /**
     * The EntityLocation model constructor.
     * @property {module:model/EntityLocation}
     */
    EntityLocation: EntityLocation,
    /**
     * The EntityType model constructor.
     * @property {module:model/EntityType}
     */
    EntityType: EntityType,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ExportInfo model constructor.
     * @property {module:model/ExportInfo}
     */
    ExportInfo: ExportInfo,
    /**
     * The FederalTaxRegime model constructor.
     * @property {module:model/FederalTaxRegime}
     */
    FederalTaxRegime: FederalTaxRegime,
    /**
     * The Fuel model constructor.
     * @property {module:model/Fuel}
     */
    Fuel: Fuel,
    /**
     * The FuelCide model constructor.
     * @property {module:model/FuelCide}
     */
    FuelCide: FuelCide,
    /**
     * The FuelPumpNumber model constructor.
     * @property {module:model/FuelPumpNumber}
     */
    FuelPumpNumber: FuelPumpNumber,
    /**
     * The HeaderBaseInfo model constructor.
     * @property {module:model/HeaderBaseInfo}
     */
    HeaderBaseInfo: HeaderBaseInfo,
    /**
     * The HeaderForGoods model constructor.
     * @property {module:model/HeaderForGoods}
     */
    HeaderForGoods: HeaderForGoods,
    /**
     * The HeaderForGoodsParticipants model constructor.
     * @property {module:model/HeaderForGoodsParticipants}
     */
    HeaderForGoodsParticipants: HeaderForGoodsParticipants,
    /**
     * The IbptConf model constructor.
     * @property {module:model/IbptConf}
     */
    IbptConf: IbptConf,
    /**
     * The IcmsConfByState model constructor.
     * @property {module:model/IcmsConfByState}
     */
    IcmsConfByState: IcmsConfByState,
    /**
     * The IcmsConfByStateIcmsSTConf model constructor.
     * @property {module:model/IcmsConfByStateIcmsSTConf}
     */
    IcmsConfByStateIcmsSTConf: IcmsConfByStateIcmsSTConf,
    /**
     * The IcmsConfInterState model constructor.
     * @property {module:model/IcmsConfInterState}
     */
    IcmsConfInterState: IcmsConfInterState,
    /**
     * The IcmsConfInterStateIcmsSTConf model constructor.
     * @property {module:model/IcmsConfInterStateIcmsSTConf}
     */
    IcmsConfInterStateIcmsSTConf: IcmsConfInterStateIcmsSTConf,
    /**
     * The IcmsTaxConf model constructor.
     * @property {module:model/IcmsTaxConf}
     */
    IcmsTaxConf: IcmsTaxConf,
    /**
     * The IcmsTaxConfBase model constructor.
     * @property {module:model/IcmsTaxConfBase}
     */
    IcmsTaxConfBase: IcmsTaxConfBase,
    /**
     * The InformerForGoods model constructor.
     * @property {module:model/InformerForGoods}
     */
    InformerForGoods: InformerForGoods,
    /**
     * The InformerForGoodsCsts model constructor.
     * @property {module:model/InformerForGoodsCsts}
     */
    InformerForGoodsCsts: InformerForGoodsCsts,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003: InlineResponse2003,
    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004: InlineResponse2004,
    /**
     * The InlineResponse201 model constructor.
     * @property {module:model/InlineResponse201}
     */
    InlineResponse201: InlineResponse201,
    /**
     * The InstallmentComplete model constructor.
     * @property {module:model/InstallmentComplete}
     */
    InstallmentComplete: InstallmentComplete,
    /**
     * The IpbtConfItem model constructor.
     * @property {module:model/IpbtConfItem}
     */
    IpbtConfItem: IpbtConfItem,
    /**
     * The IssConfByCity model constructor.
     * @property {module:model/IssConfByCity}
     */
    IssConfByCity: IssConfByCity,
    /**
     * The IssConfServiceList model constructor.
     * @property {module:model/IssConfServiceList}
     */
    IssConfServiceList: IssConfServiceList,
    /**
     * The IssConfServiceListTaxRate model constructor.
     * @property {module:model/IssConfServiceListTaxRate}
     */
    IssConfServiceListTaxRate: IssConfServiceListTaxRate,
    /**
     * The IssConfServiceListTaxRateIbpt model constructor.
     * @property {module:model/IssConfServiceListTaxRateIbpt}
     */
    IssConfServiceListTaxRateIbpt: IssConfServiceListTaxRateIbpt,
    /**
     * The ItemCpom model constructor.
     * @property {module:model/ItemCpom}
     */
    ItemCpom: ItemCpom,
    /**
     * The ItemGoods model constructor.
     * @property {module:model/ItemGoods}
     */
    ItemGoods: ItemGoods,
    /**
     * The ItemSimple model constructor.
     * @property {module:model/ItemSimple}
     */
    ItemSimple: ItemSimple,
    /**
     * The LegalReason model constructor.
     * @property {module:model/LegalReason}
     */
    LegalReason: LegalReason,
    /**
     * The LegalReasonReferencedProcesses model constructor.
     * @property {module:model/LegalReasonReferencedProcesses}
     */
    LegalReasonReferencedProcesses: LegalReasonReferencedProcesses,
    /**
     * The LegalReasonTaxScope model constructor.
     * @property {module:model/LegalReasonTaxScope}
     */
    LegalReasonTaxScope: LegalReasonTaxScope,
    /**
     * The LineForGoods model constructor.
     * @property {module:model/LineForGoods}
     */
    LineForGoods: LineForGoods,
    /**
     * The LineForGoodsAdi model constructor.
     * @property {module:model/LineForGoodsAdi}
     */
    LineForGoodsAdi: LineForGoodsAdi,
    /**
     * The LineForGoodsCalculatedTax model constructor.
     * @property {module:model/LineForGoodsCalculatedTax}
     */
    LineForGoodsCalculatedTax: LineForGoodsCalculatedTax,
    /**
     * The LineForGoodsCalculatedTaxTaxByType model constructor.
     * @property {module:model/LineForGoodsCalculatedTaxTaxByType}
     */
    LineForGoodsCalculatedTaxTaxByType: LineForGoodsCalculatedTaxTaxByType,
    /**
     * The LineForGoodsDi model constructor.
     * @property {module:model/LineForGoodsDi}
     */
    LineForGoodsDi: LineForGoodsDi,
    /**
     * The LineForGoodsExport model constructor.
     * @property {module:model/LineForGoodsExport}
     */
    LineForGoodsExport: LineForGoodsExport,
    /**
     * The LineForGoodsIcmsTaxRelief model constructor.
     * @property {module:model/LineForGoodsIcmsTaxRelief}
     */
    LineForGoodsIcmsTaxRelief: LineForGoodsIcmsTaxRelief,
    /**
     * The LineForGoodsIndExport model constructor.
     * @property {module:model/LineForGoodsIndExport}
     */
    LineForGoodsIndExport: LineForGoodsIndExport,
    /**
     * The LineForSefazGoods model constructor.
     * @property {module:model/LineForSefazGoods}
     */
    LineForSefazGoods: LineForSefazGoods,
    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location: Location,
    /**
     * The LocationSecondaryStateTaxId model constructor.
     * @property {module:model/LocationSecondaryStateTaxId}
     */
    LocationSecondaryStateTaxId: LocationSecondaryStateTaxId,
    /**
     * The Medicine model constructor.
     * @property {module:model/Medicine}
     */
    Medicine: Medicine,
    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message: Message,
    /**
     * The NRef model constructor.
     * @property {module:model/NRef}
     */
    NRef: NRef,
    /**
     * The NRefRefECF model constructor.
     * @property {module:model/NRefRefECF}
     */
    NRefRefECF: NRefRefECF,
    /**
     * The NRefRefFarmerNF model constructor.
     * @property {module:model/NRefRefFarmerNF}
     */
    NRefRefFarmerNF: NRefRefFarmerNF,
    /**
     * The NRefRefNF model constructor.
     * @property {module:model/NRefRefNF}
     */
    NRefRefNF: NRefRefNF,
    /**
     * The PayRecCalculatedTaxSummaryForService model constructor.
     * @property {module:model/PayRecCalculatedTaxSummaryForService}
     */
    PayRecCalculatedTaxSummaryForService: PayRecCalculatedTaxSummaryForService,
    /**
     * The PayRecCalculatedTaxSummaryForServiceTaxByType model constructor.
     * @property {module:model/PayRecCalculatedTaxSummaryForServiceTaxByType}
     */
    PayRecCalculatedTaxSummaryForServiceTaxByType: PayRecCalculatedTaxSummaryForServiceTaxByType,
    /**
     * The PayRecHeader model constructor.
     * @property {module:model/PayRecHeader}
     */
    PayRecHeader: PayRecHeader,
    /**
     * The PayRecLinesIn model constructor.
     * @property {module:model/PayRecLinesIn}
     */
    PayRecLinesIn: PayRecLinesIn,
    /**
     * The PayRecLinesOut model constructor.
     * @property {module:model/PayRecLinesOut}
     */
    PayRecLinesOut: PayRecLinesOut,
    /**
     * The Payment model constructor.
     * @property {module:model/Payment}
     */
    Payment: Payment,
    /**
     * The PaymentBill model constructor.
     * @property {module:model/PaymentBill}
     */
    PaymentBill: PaymentBill,
    /**
     * The PaymentCalculatedTax model constructor.
     * @property {module:model/PaymentCalculatedTax}
     */
    PaymentCalculatedTax: PaymentCalculatedTax,
    /**
     * The PaymentInstallment model constructor.
     * @property {module:model/PaymentInstallment}
     */
    PaymentInstallment: PaymentInstallment,
    /**
     * The PaymentLinesIn model constructor.
     * @property {module:model/PaymentLinesIn}
     */
    PaymentLinesIn: PaymentLinesIn,
    /**
     * The PaymentPaymentMode model constructor.
     * @property {module:model/PaymentPaymentMode}
     */
    PaymentPaymentMode: PaymentPaymentMode,
    /**
     * The PaymentTaxByType model constructor.
     * @property {module:model/PaymentTaxByType}
     */
    PaymentTaxByType: PaymentTaxByType,
    /**
     * The PaymentTerms model constructor.
     * @property {module:model/PaymentTerms}
     */
    PaymentTerms: PaymentTerms,
    /**
     * The PaymentTransactionIn model constructor.
     * @property {module:model/PaymentTransactionIn}
     */
    PaymentTransactionIn: PaymentTransactionIn,
    /**
     * The PaymentTransactionOut model constructor.
     * @property {module:model/PaymentTransactionOut}
     */
    PaymentTransactionOut: PaymentTransactionOut,
    /**
     * The PccWithholdingMode model constructor.
     * @property {module:model/PccWithholdingMode}
     */
    PccWithholdingMode: PccWithholdingMode,
    /**
     * The PointOfOrderOrigin model constructor.
     * @property {module:model/PointOfOrderOrigin}
     */
    PointOfOrderOrigin: PointOfOrderOrigin,
    /**
     * The ProcessScenario model constructor.
     * @property {module:model/ProcessScenario}
     */
    ProcessScenario: ProcessScenario,
    /**
     * The ProcessingInfo model constructor.
     * @property {module:model/ProcessingInfo}
     */
    ProcessingInfo: ProcessingInfo,
    /**
     * The PurchaseCalculatedTax model constructor.
     * @property {module:model/PurchaseCalculatedTax}
     */
    PurchaseCalculatedTax: PurchaseCalculatedTax,
    /**
     * The PurchaseCalculatedTaxSummaryForService model constructor.
     * @property {module:model/PurchaseCalculatedTaxSummaryForService}
     */
    PurchaseCalculatedTaxSummaryForService: PurchaseCalculatedTaxSummaryForService,
    /**
     * The PurchaseCalculatedTaxSummaryForServiceTaxByType model constructor.
     * @property {module:model/PurchaseCalculatedTaxSummaryForServiceTaxByType}
     */
    PurchaseCalculatedTaxSummaryForServiceTaxByType: PurchaseCalculatedTaxSummaryForServiceTaxByType,
    /**
     * The PurchaseDefaultLocations model constructor.
     * @property {module:model/PurchaseDefaultLocations}
     */
    PurchaseDefaultLocations: PurchaseDefaultLocations,
    /**
     * The PurchaseEntity model constructor.
     * @property {module:model/PurchaseEntity}
     */
    PurchaseEntity: PurchaseEntity,
    /**
     * The PurchaseHeaderIn model constructor.
     * @property {module:model/PurchaseHeaderIn}
     */
    PurchaseHeaderIn: PurchaseHeaderIn,
    /**
     * The PurchaseHeaderInPayment model constructor.
     * @property {module:model/PurchaseHeaderInPayment}
     */
    PurchaseHeaderInPayment: PurchaseHeaderInPayment,
    /**
     * The PurchaseHeaderOut model constructor.
     * @property {module:model/PurchaseHeaderOut}
     */
    PurchaseHeaderOut: PurchaseHeaderOut,
    /**
     * The PurchaseHeaderOutPayment model constructor.
     * @property {module:model/PurchaseHeaderOutPayment}
     */
    PurchaseHeaderOutPayment: PurchaseHeaderOutPayment,
    /**
     * The PurchaseInfo model constructor.
     * @property {module:model/PurchaseInfo}
     */
    PurchaseInfo: PurchaseInfo,
    /**
     * The PurchaseInstallmentIn model constructor.
     * @property {module:model/PurchaseInstallmentIn}
     */
    PurchaseInstallmentIn: PurchaseInstallmentIn,
    /**
     * The PurchaseLinesIn model constructor.
     * @property {module:model/PurchaseLinesIn}
     */
    PurchaseLinesIn: PurchaseLinesIn,
    /**
     * The PurchaseLinesOut model constructor.
     * @property {module:model/PurchaseLinesOut}
     */
    PurchaseLinesOut: PurchaseLinesOut,
    /**
     * The PurchaseTaxByType model constructor.
     * @property {module:model/PurchaseTaxByType}
     */
    PurchaseTaxByType: PurchaseTaxByType,
    /**
     * The PurchaseTaxByTypeDetail model constructor.
     * @property {module:model/PurchaseTaxByTypeDetail}
     */
    PurchaseTaxByTypeDetail: PurchaseTaxByTypeDetail,
    /**
     * The PurchaseTaxesConfig model constructor.
     * @property {module:model/PurchaseTaxesConfig}
     */
    PurchaseTaxesConfig: PurchaseTaxesConfig,
    /**
     * The PurchaseTransactionIn model constructor.
     * @property {module:model/PurchaseTransactionIn}
     */
    PurchaseTransactionIn: PurchaseTransactionIn,
    /**
     * The PurchaseTransactionOut model constructor.
     * @property {module:model/PurchaseTransactionOut}
     */
    PurchaseTransactionOut: PurchaseTransactionOut,
    /**
     * The ReceiptTransactionIn model constructor.
     * @property {module:model/ReceiptTransactionIn}
     */
    ReceiptTransactionIn: ReceiptTransactionIn,
    /**
     * The ReceiptTransactionOut model constructor.
     * @property {module:model/ReceiptTransactionOut}
     */
    ReceiptTransactionOut: ReceiptTransactionOut,
    /**
     * The SalesCalculatedTax model constructor.
     * @property {module:model/SalesCalculatedTax}
     */
    SalesCalculatedTax: SalesCalculatedTax,
    /**
     * The SalesCalculatedTaxSummaryForService model constructor.
     * @property {module:model/SalesCalculatedTaxSummaryForService}
     */
    SalesCalculatedTaxSummaryForService: SalesCalculatedTaxSummaryForService,
    /**
     * The SalesCalculatedTaxSummaryForServiceTaxByType model constructor.
     * @property {module:model/SalesCalculatedTaxSummaryForServiceTaxByType}
     */
    SalesCalculatedTaxSummaryForServiceTaxByType: SalesCalculatedTaxSummaryForServiceTaxByType,
    /**
     * The SalesDefaultLocations model constructor.
     * @property {module:model/SalesDefaultLocations}
     */
    SalesDefaultLocations: SalesDefaultLocations,
    /**
     * The SalesEntity model constructor.
     * @property {module:model/SalesEntity}
     */
    SalesEntity: SalesEntity,
    /**
     * The SalesHeaderIn model constructor.
     * @property {module:model/SalesHeaderIn}
     */
    SalesHeaderIn: SalesHeaderIn,
    /**
     * The SalesHeaderInPayment model constructor.
     * @property {module:model/SalesHeaderInPayment}
     */
    SalesHeaderInPayment: SalesHeaderInPayment,
    /**
     * The SalesHeaderOut model constructor.
     * @property {module:model/SalesHeaderOut}
     */
    SalesHeaderOut: SalesHeaderOut,
    /**
     * The SalesHeaderOutPayment model constructor.
     * @property {module:model/SalesHeaderOutPayment}
     */
    SalesHeaderOutPayment: SalesHeaderOutPayment,
    /**
     * The SalesInstallmentIn model constructor.
     * @property {module:model/SalesInstallmentIn}
     */
    SalesInstallmentIn: SalesInstallmentIn,
    /**
     * The SalesLinesIn model constructor.
     * @property {module:model/SalesLinesIn}
     */
    SalesLinesIn: SalesLinesIn,
    /**
     * The SalesLinesInTaxDeductions model constructor.
     * @property {module:model/SalesLinesInTaxDeductions}
     */
    SalesLinesInTaxDeductions: SalesLinesInTaxDeductions,
    /**
     * The SalesLinesOut model constructor.
     * @property {module:model/SalesLinesOut}
     */
    SalesLinesOut: SalesLinesOut,
    /**
     * The SalesLinesOutTaxDeductions model constructor.
     * @property {module:model/SalesLinesOutTaxDeductions}
     */
    SalesLinesOutTaxDeductions: SalesLinesOutTaxDeductions,
    /**
     * The SalesTaxByType model constructor.
     * @property {module:model/SalesTaxByType}
     */
    SalesTaxByType: SalesTaxByType,
    /**
     * The SalesTaxByTypeDetail model constructor.
     * @property {module:model/SalesTaxByTypeDetail}
     */
    SalesTaxByTypeDetail: SalesTaxByTypeDetail,
    /**
     * The SalesTaxesConfig model constructor.
     * @property {module:model/SalesTaxesConfig}
     */
    SalesTaxesConfig: SalesTaxesConfig,
    /**
     * The SalesTransactionIn model constructor.
     * @property {module:model/SalesTransactionIn}
     */
    SalesTransactionIn: SalesTransactionIn,
    /**
     * The SalesTransactionOut model constructor.
     * @property {module:model/SalesTransactionOut}
     */
    SalesTransactionOut: SalesTransactionOut,
    /**
     * The SefazDisableRangeIn model constructor.
     * @property {module:model/SefazDisableRangeIn}
     */
    SefazDisableRangeIn: SefazDisableRangeIn,
    /**
     * The SefazInvoiceBasicStatus model constructor.
     * @property {module:model/SefazInvoiceBasicStatus}
     */
    SefazInvoiceBasicStatus: SefazInvoiceBasicStatus,
    /**
     * The SefazInvoiceStatus model constructor.
     * @property {module:model/SefazInvoiceStatus}
     */
    SefazInvoiceStatus: SefazInvoiceStatus,
    /**
     * The SefazItDeleteIn model constructor.
     * @property {module:model/SefazItDeleteIn}
     */
    SefazItDeleteIn: SefazItDeleteIn,
    /**
     * The SefazItGetOut model constructor.
     * @property {module:model/SefazItGetOut}
     */
    SefazItGetOut: SefazItGetOut,
    /**
     * The SefazItPutIn model constructor.
     * @property {module:model/SefazItPutIn}
     */
    SefazItPutIn: SefazItPutIn,
    /**
     * The SefazPostOut model constructor.
     * @property {module:model/SefazPostOut}
     */
    SefazPostOut: SefazPostOut,
    /**
     * The ServiceItemTaxRate model constructor.
     * @property {module:model/ServiceItemTaxRate}
     */
    ServiceItemTaxRate: ServiceItemTaxRate,
    /**
     * The ServiceItemTaxRatePeriod model constructor.
     * @property {module:model/ServiceItemTaxRatePeriod}
     */
    ServiceItemTaxRatePeriod: ServiceItemTaxRatePeriod,
    /**
     * The ServiceRendered model constructor.
     * @property {module:model/ServiceRendered}
     */
    ServiceRendered: ServiceRendered,
    /**
     * The SimpleAddress model constructor.
     * @property {module:model/SimpleAddress}
     */
    SimpleAddress: SimpleAddress,
    /**
     * The StateEnum model constructor.
     * @property {module:model/StateEnum}
     */
    StateEnum: StateEnum,
    /**
     * The StateTransition model constructor.
     * @property {module:model/StateTransition}
     */
    StateTransition: StateTransition,
    /**
     * The TaxByTypeSummaryForGoods model constructor.
     * @property {module:model/TaxByTypeSummaryForGoods}
     */
    TaxByTypeSummaryForGoods: TaxByTypeSummaryForGoods,
    /**
     * The TaxByTypeSummaryForService model constructor.
     * @property {module:model/TaxByTypeSummaryForService}
     */
    TaxByTypeSummaryForService: TaxByTypeSummaryForService,
    /**
     * The TaxByTypeSummaryJurisdiction model constructor.
     * @property {module:model/TaxByTypeSummaryJurisdiction}
     */
    TaxByTypeSummaryJurisdiction: TaxByTypeSummaryJurisdiction,
    /**
     * The TaxByTypeSummaryJurisdictionForGoods model constructor.
     * @property {module:model/TaxByTypeSummaryJurisdictionForGoods}
     */
    TaxByTypeSummaryJurisdictionForGoods: TaxByTypeSummaryJurisdictionForGoods,
    /**
     * The TaxByTypeTax model constructor.
     * @property {module:model/TaxByTypeTax}
     */
    TaxByTypeTax: TaxByTypeTax,
    /**
     * The TaxConf model constructor.
     * @property {module:model/TaxConf}
     */
    TaxConf: TaxConf,
    /**
     * The TaxType model constructor.
     * @property {module:model/TaxType}
     */
    TaxType: TaxType,
    /**
     * The TaxTypeRate model constructor.
     * @property {module:model/TaxTypeRate}
     */
    TaxTypeRate: TaxTypeRate,
    /**
     * The TaxTypeRateWithholding model constructor.
     * @property {module:model/TaxTypeRateWithholding}
     */
    TaxTypeRateWithholding: TaxTypeRateWithholding,
    /**
     * The TransactionForGoodsIn model constructor.
     * @property {module:model/TransactionForGoodsIn}
     */
    TransactionForGoodsIn: TransactionForGoodsIn,
    /**
     * The TransactionForGoodsOut model constructor.
     * @property {module:model/TransactionForGoodsOut}
     */
    TransactionForGoodsOut: TransactionForGoodsOut,
    /**
     * The TransactionForSefazGoods model constructor.
     * @property {module:model/TransactionForSefazGoods}
     */
    TransactionForSefazGoods: TransactionForSefazGoods,
    /**
     * The TransactionForSefazGoodsList model constructor.
     * @property {module:model/TransactionForSefazGoodsList}
     */
    TransactionForSefazGoodsList: TransactionForSefazGoodsList,
    /**
     * The Transport model constructor.
     * @property {module:model/Transport}
     */
    Transport: Transport,
    /**
     * The TransportVolumes model constructor.
     * @property {module:model/TransportVolumes}
     */
    TransportVolumes: TransportVolumes,
    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError: ValidationError,
    /**
     * The Vehicle model constructor.
     * @property {module:model/Vehicle}
     */
    Vehicle: Vehicle,
    /**
     * The VehicleID model constructor.
     * @property {module:model/VehicleID}
     */
    VehicleID: VehicleID,
    /**
     * The VehicleTransp model constructor.
     * @property {module:model/VehicleTransp}
     */
    VehicleTransp: VehicleTransp,
    /**
     * The Weapon model constructor.
     * @property {module:model/Weapon}
     */
    Weapon: Weapon,
    /**
     * The WithholdDef model constructor.
     * @property {module:model/WithholdDef}
     */
    WithholdDef: WithholdDef,
    /**
     * The WithholdingMode model constructor.
     * @property {module:model/WithholdingMode}
     */
    WithholdingMode: WithholdingMode,
    /**
     * The AGASTApi service constructor.
     * @property {module:api/AGASTApi}
     */
    AGASTApi: AGASTApi,
    /**
     * The AccountApi service constructor.
     * @property {module:api/AccountApi}
     */
    AccountApi: AccountApi,
    /**
     * The AddressApi service constructor.
     * @property {module:api/AddressApi}
     */
    AddressApi: AddressApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The CompanyApi service constructor.
     * @property {module:api/CompanyApi}
     */
    CompanyApi: CompanyApi,
    /**
     * The CompanyAGASTApi service constructor.
     * @property {module:api/CompanyAGASTApi}
     */
    CompanyAGASTApi: CompanyAGASTApi,
    /**
     * The CompanyFilesApi service constructor.
     * @property {module:api/CompanyFilesApi}
     */
    CompanyFilesApi: CompanyFilesApi,
    /**
     * The CompanyICMSApi service constructor.
     * @property {module:api/CompanyICMSApi}
     */
    CompanyICMSApi: CompanyICMSApi,
    /**
     * The CompanyItemCPOMServiceApi service constructor.
     * @property {module:api/CompanyItemCPOMServiceApi}
     */
    CompanyItemCPOMServiceApi: CompanyItemCPOMServiceApi,
    /**
     * The CompanyItemGoodsApi service constructor.
     * @property {module:api/CompanyItemGoodsApi}
     */
    CompanyItemGoodsApi: CompanyItemGoodsApi,
    /**
     * The CompanyItemServiceApi service constructor.
     * @property {module:api/CompanyItemServiceApi}
     */
    CompanyItemServiceApi: CompanyItemServiceApi,
    /**
     * The CompanyLocationApi service constructor.
     * @property {module:api/CompanyLocationApi}
     */
    CompanyLocationApi: CompanyLocationApi,
    /**
     * The CompanyProcessApi service constructor.
     * @property {module:api/CompanyProcessApi}
     */
    CompanyProcessApi: CompanyProcessApi,
    /**
     * The CompanyTaxRatesApi service constructor.
     * @property {module:api/CompanyTaxRatesApi}
     */
    CompanyTaxRatesApi: CompanyTaxRatesApi,
    /**
     * The GoodsCalculationsApi service constructor.
     * @property {module:api/GoodsCalculationsApi}
     */
    GoodsCalculationsApi: GoodsCalculationsApi,
    /**
     * The GoodsTransactionsApi service constructor.
     * @property {module:api/GoodsTransactionsApi}
     */
    GoodsTransactionsApi: GoodsTransactionsApi,
    /**
     * The InvoiceContingencyApi service constructor.
     * @property {module:api/InvoiceContingencyApi}
     */
    InvoiceContingencyApi: InvoiceContingencyApi,
    /**
     * The InvoiceNFCeDANFEApi service constructor.
     * @property {module:api/InvoiceNFCeDANFEApi}
     */
    InvoiceNFCeDANFEApi: InvoiceNFCeDANFEApi,
    /**
     * The InvoiceNFeDANFEApi service constructor.
     * @property {module:api/InvoiceNFeDANFEApi}
     */
    InvoiceNFeDANFEApi: InvoiceNFeDANFEApi,
    /**
     * The InvoiceSEFAZApi service constructor.
     * @property {module:api/InvoiceSEFAZApi}
     */
    InvoiceSEFAZApi: InvoiceSEFAZApi,
    /**
     * The InvoiceSettingsApi service constructor.
     * @property {module:api/InvoiceSettingsApi}
     */
    InvoiceSettingsApi: InvoiceSettingsApi,
    /**
     * The LegalReasonApi service constructor.
     * @property {module:api/LegalReasonApi}
     */
    LegalReasonApi: LegalReasonApi,
    /**
     * The ServiceCalculationsApi service constructor.
     * @property {module:api/ServiceCalculationsApi}
     */
    ServiceCalculationsApi: ServiceCalculationsApi,
    /**
     * The ServiceTransactionsApi service constructor.
     * @property {module:api/ServiceTransactionsApi}
     */
    ServiceTransactionsApi: ServiceTransactionsApi,
    /**
     * The TaxConfCFOPApi service constructor.
     * @property {module:api/TaxConfCFOPApi}
     */
    TaxConfCFOPApi: TaxConfCFOPApi,
    /**
     * The TaxConfIBPTApi service constructor.
     * @property {module:api/TaxConfIBPTApi}
     */
    TaxConfIBPTApi: TaxConfIBPTApi,
    /**
     * The TaxConfICMSApi service constructor.
     * @property {module:api/TaxConfICMSApi}
     */
    TaxConfICMSApi: TaxConfICMSApi,
    /**
     * The TaxConfISSApi service constructor.
     * @property {module:api/TaxConfISSApi}
     */
    TaxConfISSApi: TaxConfISSApi,
    /**
     * The TaxConfProcessApi service constructor.
     * @property {module:api/TaxConfProcessApi}
     */
    TaxConfProcessApi: TaxConfProcessApi
  };

  return exports;
}));
